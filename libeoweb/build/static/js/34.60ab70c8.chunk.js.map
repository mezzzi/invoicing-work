{"version":3,"sources":["../node_modules/array-move/index.js","components/Rich/TagManagerEditableValue.tsx","components/Rich/TagManagerRow.tsx","components/Rich/TagManager.tsx","screens/Company/AccountingOptions.tsx","components/Card/Card.tsx","components/Card/CondensedCard.tsx","components/Card/CardRow.tsx","components/Card/index.js","context/Accounting/context.ts","context/Accounting/hoc.tsx","context/Accounting/fragments.ts","context/Accounting/queries.ts","context/Accounting/provider.tsx","context/Accounting/index.tsx","context/Accounting/types.ts"],"names":["arrayMoveMutate","array","from","to","splice","length","arrayMove","slice","module","exports","default","mutate","TagManagerEditableValue","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","edit","value","undefined","handleBlur","blur","bind","assertThisInitialized","handleFocus","focus","handleOnClick","onClick","handleChange","change","handleInputRef","inputRef","defaultValue","node","Element","setState","onChange","currentTarget","_this$props","form","placeholder","isNew","maxLength","editable","_this$state","react","className","concat","Form","autoFocus","ref","onBlur","onFocus","small","marge","React","compose","create","TagManagerRow","update","key","label","accounting","preference","description","enabled","id","order","type","createOrUpdateAccountingPreferences","_this$props2","editDescription","editLabel","editValue","hasDescription","remove","reorder","es_row","assign","col","Assets","IconValue","Menu","Rich_TagManagerEditableValue","Trash","AccountingCtx","TagManager","rows","onAdd","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","stop","handleDndRef","dndRef","handleOnAdd","originalRows","sort","b","row","pop","toConsumableArray","objectSpread","_this2","drake","Dragula","accepts","el","target","source","sibling","copy","copySortSource","direction","ignoreInputTextSelection","invalid","handle","isContainer","mirrorContainer","document","body","moves","classList","contains","removeOnSpill","revertOnSpill","on","children","indexOf","_ref2","_callee2","i","_context2","map","_x","_x2","_x3","_x4","apply","arguments","destroy","title","add","Card","index_es","center","shadow","Rich_TagManagerRow","style","width","objectWithoutProperties","Plus","defaultProps","AccountingOptions","types","LEDGER","common","AccountingPreferenceType","LEDGER_BANK","LEDGER_PURCHASE","LEDGER_SALES","LEDGER_MISC","BANK_ACCOUNT","BANK_ACCOUNT_TREEZOR","PURCHASE_ACCOUNT","VAT_ACCOUNT","Layout","Typo","icon","Tag","keys","marginBottom","span","Accounting","_ref","preferences","Rich_TagManager","toLowerCase","Default","onRemove","e","stopPropagation","preventDefault","avatar","onClose","onEdit","removable","primary","titleAlign","rest","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_12__","antd_es_card__WEBPACK_IMPORTED_MODULE_1__","components_Assets__WEBPACK_IMPORTED_MODULE_10__","Cross","Pencil","antd_es_avatar__WEBPACK_IMPORTED_MODULE_3__","components_Assets__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","components_Skeleton__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react_intl__WEBPACK_IMPORTED_MODULE_3__","_Card__WEBPACK_IMPORTED_MODULE_4__","CondensedCard","loading","color","Bloc","Boolean","renderRow","react__WEBPACK_IMPORTED_MODULE_9__","antd_es_row__WEBPACK_IMPORTED_MODULE_1__","antd_es_col__WEBPACK_IMPORTED_MODULE_3__","_Card__WEBPACK_IMPORTED_MODULE_1__","d","__webpack_exports__","_CondensedCard__WEBPACK_IMPORTED_MODULE_2__","_CardRow__WEBPACK_IMPORTED_MODULE_3__","accountingExports","_createOrUpdateAccountingPreferences","abrupt","export","_export2","Provider","Consumer","withAccounting","Component","_React$Component","WithAccounting","inherits","createClass","accountingExportFragment","gql","_templateObject","accountingExportQuery","Company","standalone","Accounting_fragments","fragment","_templateObject2","query","accountingExport","queries_templateObject","fragments","accountingPreferences","queries_templateObject2","_templateObject3","_templateObject4","PartnersContextProvider","input","results","variables","sent","dataPreferences","refetch","data","t0","errorOrSuccess","alert","parseError","dataExports","withApollo","Alert","graphql","name","options","fetchPolicy","skip","limit","offset","provider","hoc","reduce","o","v","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/34.60ab70c8.chunk.js","sourcesContent":["'use strict';\n\nvar arrayMoveMutate = function arrayMoveMutate(array, from, to) {\n  array.splice(to < 0 ? array.length + to : to, 0, array.splice(from, 1)[0]);\n};\n\nvar arrayMove = function arrayMove(array, from, to) {\n  array = array.slice();\n  arrayMoveMutate(array, from, to);\n  return array;\n};\n\nmodule.exports = arrayMove; // TODO: Remove this for the next major release\n\nmodule.exports.default = arrayMove;\nmodule.exports.mutate = arrayMoveMutate;","import Form, { FormComponentProps } from 'antd/lib/form';\nimport { Text } from 'components/Form';\nimport * as React from 'react';\nimport { compose } from 'react-apollo';\nimport { FormattedMessage } from 'react-intl';\nimport './TagManager.module.less';\n\ninterface IProps extends FormComponentProps {\n  isNew?: boolean;\n  defaultValue?: React.ReactNode;\n  value?: React.ReactNode;\n  placeholder?: string;\n  maxLength?: number;\n  editable?: boolean;\n  onChange?: (value?: string) => void;\n}\ninterface IState {\n  defaultValue?: string;\n  value?: string;\n  edit: boolean;\n}\n\nclass TagManagerEditableValue extends React.PureComponent<IProps, IState> {\n  static getDerivedStateFromProps(props: IProps, state: IState) {\n    if (\n      typeof state.value === 'undefined' ||\n      state.value === null ||\n      props.value !== state.defaultValue\n    ) {\n      return {\n        defaultValue: props.value,\n        value: props.value,\n      };\n    }\n\n    return null;\n  }\n\n  state = {\n    edit: false,\n    value: undefined,\n  };\n\n  handleInputRef: (node: React.ReactNode) => void;\n  handleBlur: () => any;\n  handleChange: (node: React.ChangeEvent<Element>) => any;\n  handleFocus: () => any;\n  handleOnClick: () => any;\n  constructor(props: any) {\n    super(props);\n\n    this.handleBlur = this.blur.bind(this);\n    this.handleFocus = this.focus.bind(this);\n    this.handleOnClick = this.onClick.bind(this);\n    this.handleChange = this.change.bind(this);\n    this.handleInputRef = this.inputRef.bind(this);\n  }\n\n  inputRef(node: React.ReactNode) {\n    if (!(node instanceof Element)) {\n      return;\n    }\n  }\n\n  blur() {\n    this.setState({\n      edit: false,\n    });\n    if (this.state.value !== this.props.value) {\n      this.props.onChange && this.props.onChange(this.state.value);\n    }\n  }\n\n  focus() {\n    this.setState({\n      edit: true,\n    });\n  }\n\n  onClick() {\n    this.setState({\n      edit: true,\n    });\n  }\n\n  change(node: React.ChangeEvent<Element>) {\n    this.setState({\n      value: (node.currentTarget as any).value,\n    });\n  }\n\n  render() {\n    const { placeholder, form, isNew, maxLength, editable } = this.props;\n    const { value, edit } = this.state;\n\n    return (\n      <div\n        className={`tag-manager-row-editable ${edit ? 'visible' : 'hidden'}`}\n      >\n        {editable && (\n          <Text\n            maxLength={maxLength}\n            autoFocus={isNew}\n            ref={this.handleInputRef}\n            defaultValue={typeof value === 'string' ? value : ''}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n            onChange={this.handleChange}\n            small\n            marge={false}\n            form={form}\n          />\n        )}\n        <span className=\"tag-manager-row-value\">{value}</span>\n      </div>\n    );\n  }\n}\n\nexport default compose(Form.create({}))(TagManagerEditableValue);\n","import { Col, Row } from 'antd';\nimport { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport * as AccountingCtx from 'context/Accounting';\nimport {\n  AccountingPreferenceType,\n  IAccountingPreference,\n  IAccountingPreferenceInput,\n} from 'context/Accounting/types';\nimport * as React from 'react';\nimport './TagManager.module.less';\nimport TagManagerEditableValue from './TagManagerEditableValue';\n\nexport interface ITagManagerRowProps\n  extends IAccountingPreference,\n    AccountingCtx.InjectedProps {\n  isNew?: boolean;\n  label?: React.ReactNode; // label replace key because react 'key' is a reserved word\n  editDescription?: boolean;\n  editLabel?: boolean;\n  editValue?: boolean;\n  className?: string;\n  hasDescription?: boolean;\n  reorder?: boolean;\n  remove?: boolean;\n  companyId?: string;\n}\n\ninterface IProps extends ITagManagerRowProps {\n  onUpdate?: (row: ITagManagerRowProps) => void;\n}\ninterface IState {}\n\nclass TagManagerRow extends React.PureComponent<IProps, IState> {\n  state = {};\n\n  handleChange: (key: string, value?: string | boolean) => void;\n  constructor(props: any) {\n    super(props);\n\n    this.handleChange = this.update.bind(this);\n  }\n\n  async update(key: string, value?: string | boolean) {\n    const { isNew, label, accounting, ...props } = this.props;\n\n    const preference: any = {\n      ...{\n        description: props.description || '',\n        enabled: props.enabled,\n        id: props.id,\n        key: typeof label === 'string' ? label : '',\n        order: props.order,\n        type: props.type,\n        value: typeof props.value === 'string' ? props.value : '',\n      },\n      [key]: value,\n    };\n\n    if (preference.enabled === false) {\n      preference.order = -1;\n    }\n\n    if (\n      accounting &&\n      accounting.createOrUpdateAccountingPreferences &&\n      props.type\n    ) {\n      await accounting.createOrUpdateAccountingPreferences(\n        [preference],\n        props.type,\n      );\n    }\n  }\n\n  render() {\n    const {\n      id,\n      label,\n      value,\n      description,\n      enabled,\n      className,\n      isNew,\n      editDescription,\n      editLabel,\n      editValue,\n      hasDescription,\n      remove,\n      reorder,\n    } = this.props;\n\n    return (\n      <Row\n        {...{ id }}\n        className={`tag-manager-row ${className ? ` ${className}` : ''} ${\n          !enabled ? ` hidden` : ''\n        }`}\n        type=\"flex\"\n      >\n        <Col className={`${reorder ? 'drag draggable' : 'no-drag'}`}>\n          {reorder && <Icon value={IconValue.Menu} />}\n        </Col>\n        <Col className=\"label\">\n          <TagManagerEditableValue\n            editable={editLabel}\n            maxLength={100}\n            onChange={this.handleChange.bind(null, 'key')}\n            isNew={isNew}\n            value={label}\n          />\n        </Col>\n        <Col className=\"value\">\n          <TagManagerEditableValue\n            editable={editValue}\n            maxLength={100}\n            onChange={this.handleChange.bind(null, 'value')}\n            value={value}\n          />\n        </Col>\n        {hasDescription && (\n          <Col className=\"description\">\n            <TagManagerEditableValue\n              editable={editDescription}\n              maxLength={150}\n              onChange={this.handleChange.bind(null, 'description')}\n              value={description}\n            />\n          </Col>\n        )}\n        <Col\n          onClick={\n            remove && id\n              ? this.handleChange.bind(null, 'enabled', false)\n              : undefined\n          }\n          className=\"remove\"\n        >\n          {remove && id && <Icon value={IconValue.Trash} />}\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default AccountingCtx.hoc()(TagManagerRow);\n","import { Col, Row } from 'antd';\nimport arrayMove from 'array-move';\nimport { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport { Card } from 'components/Card';\nimport * as AccountingCtx from 'context/Accounting';\nimport { AccountingPreferenceType } from 'context/Accounting/types';\nimport * as React from 'react';\nimport Dragula from 'react-dragula';\nimport { FormattedMessage } from 'react-intl';\nimport './TagManager.module.less';\nimport TagManagerRow, { ITagManagerRowProps } from './TagManagerRow';\n\ninterface IProps extends AccountingCtx.InjectedProps {\n  rows: ITagManagerRowProps[];\n  type: AccountingPreferenceType;\n  title?: string;\n  add?: boolean;\n  editDescription?: boolean;\n  editLabel?: boolean;\n  editValue?: boolean;\n  hasDescription?: boolean;\n  reorder?: boolean;\n  remove?: boolean;\n}\n\ninterface IState {\n  originalRows?: ITagManagerRowProps[];\n  rows?: ITagManagerRowProps[];\n}\nclass TagManager extends React.PureComponent<IProps, IState> {\n  static defaultProps = {\n    add: false,\n    editDescription: false,\n    editLabel: false,\n    editValue: false,\n    hasDescription: false,\n    remove: false,\n  };\n\n  static getDerivedStateFromProps(props: IProps, state: IState) {\n    if (state.originalRows !== props.rows && props.rows.length > 0) {\n      const isNew =\n        state.originalRows && state.originalRows.length < props.rows.length\n          ? true\n          : false;\n\n      let rows = props.rows.slice(0).sort((a, b) => {\n        if (\n          typeof a.order === 'undefined' ||\n          a.order === null ||\n          typeof b.order === 'undefined' ||\n          b.order === null\n        ) {\n          return 0;\n        } else if (a.order > b.order) {\n          return 1;\n        }\n        return -1;\n      });\n\n      if (isNew) {\n        const row = rows.pop();\n        rows = [\n          ...rows,\n          {\n            ...row,\n            isNew: true,\n          },\n        ];\n      }\n\n      return {\n        originalRows: props.rows,\n        rows,\n      };\n    }\n    return null;\n  }\n  state = {\n    rows: undefined,\n  };\n\n  handleDndRef: (node: React.ReactNode) => void;\n  handleOnAdd: (node: React.ReactNode) => void;\n\n  drake: any;\n  constructor(props: any) {\n    super(props);\n\n    this.handleDndRef = this.dndRef.bind(this);\n    this.handleOnAdd = this.onAdd.bind(this);\n  }\n\n  onAdd = async () => {\n    const { type, accounting } = this.props;\n\n    if (accounting && accounting.createOrUpdateAccountingPreferences) {\n      await accounting.createOrUpdateAccountingPreferences(\n        [\n          {\n            description: '',\n            enabled: true,\n            key: '',\n            order: (this.state.rows || []).length,\n            type,\n            value: '',\n          },\n        ],\n        type,\n      );\n    }\n  };\n\n  dndRef(node: React.ReactNode) {\n    if (node) {\n      this.drake = Dragula([node], {\n        accepts: (el: any, target: any, source: any, sibling: any) => {\n          return true;\n        },\n        copy: false,\n        copySortSource: false,\n        direction: 'vertical',\n        ignoreInputTextSelection: true,\n        invalid: (el: any, handle: any) => {\n          return false;\n        },\n        isContainer: (el: any) => {\n          return false;\n        },\n        mirrorContainer: document.body,\n        moves: (el: any, source: any, handle: any, sibling: any) => {\n          return handle.classList.contains('draggable');\n        },\n        removeOnSpill: false,\n        revertOnSpill: false,\n      });\n\n      let from: number = 0;\n      this.drake.on('drag', (el: any, source: any) => {\n        from = [...source.children].indexOf(el);\n      });\n      this.drake.on(\n        'drop',\n        async (el: any, target: any, source: any, sibling: any) => {\n          const { accounting } = this.props;\n          const to = [...target.children].indexOf(el);\n          let rows: any[] = (this.state.rows || []).slice(0);\n\n          if (typeof from !== 'undefined' && typeof to !== 'undefined') {\n            rows = arrayMove(rows, from, to);\n            let i: number = 0;\n            rows = rows.map((row: any) => {\n              return {\n                description:\n                  typeof row.description === 'string'\n                    ? `${row.description}`\n                    : '',\n                enabled: row.enabled,\n                id: row.id,\n                key: row.key || '',\n                order: row.enabled ? i++ : -1,\n                type: row.type,\n                value: typeof row.value === 'string' ? `${row.value}` : '',\n              };\n            });\n\n            if (accounting && accounting.createOrUpdateAccountingPreferences) {\n              await accounting.createOrUpdateAccountingPreferences(\n                rows,\n                this.props.type,\n              );\n            }\n          }\n        },\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.drake) {\n      this.drake.destroy();\n    }\n  }\n\n  render() {\n    const {\n      title,\n      type,\n      add,\n      editDescription,\n      editLabel,\n      editValue,\n      hasDescription,\n      remove,\n      reorder,\n    } = this.props;\n    const rows = this.state.rows || [];\n\n    return (\n      <div className=\"tag-manager\">\n        <Card title={title && <FormattedMessage id={title} />} center shadow>\n          <TagManagerRow\n            className=\"tag-manager-header\"\n            enabled\n            editDescription={false}\n            editLabel={false}\n            editValue={false}\n            hasDescription={true}\n            remove={false}\n            reorder={false}\n            type={type}\n            label={<FormattedMessage id=\"accounting_options.thead.label\" />}\n            description={\n              <FormattedMessage id=\"accounting_options.thead.description\" />\n            }\n            value={<FormattedMessage id=\"accounting_options.thead.account\" />}\n          />\n          <div\n            style={{\n              width: '100%',\n            }}\n            ref={this.handleDndRef}\n          >\n            {rows.map((row: ITagManagerRowProps, i) => {\n              const { key, order, ...props } = row;\n\n              return row.enabled ? (\n                <TagManagerRow\n                  {...{\n                    editDescription,\n                    editLabel,\n                    editValue,\n                    hasDescription,\n                    remove,\n                    reorder,\n                  }}\n                  type={type}\n                  key={`${i}`}\n                  order={i}\n                  {...{ ...props, label: key }}\n                />\n              ) : null;\n            })}\n          </div>\n          {add && (\n            <div onClick={this.handleOnAdd} className=\"tag-manager-row-add\">\n              <Icon value={IconValue.Plus} />\n            </div>\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default AccountingCtx.hoc()(TagManager);\n","import { Col, Row } from 'antd';\nimport { IconValue } from 'components/Assets/Icon';\nimport { Content } from 'components/Layout';\nimport { TagManager } from 'components/Rich';\nimport { ITagManagerRowProps } from 'components/Rich/TagManagerRow';\nimport { Heading } from 'components/Typo';\nimport * as AccountingCtx from 'context/Accounting';\nimport {\n  AccountingPreferenceType,\n  ArrayAccountingPreferenceType,\n} from 'context/Accounting/types';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport './AccountingOptions.module.less';\n\ninterface IProps extends RouteComponentProps {}\n\ninterface IState {}\n\nclass AccountingOptions extends React.PureComponent<IProps, IState> {\n  state = {};\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const types: {\n      [key: string]: {\n        common?: boolean;\n        add?: boolean;\n        editDescription?: boolean;\n        editLabel?: boolean;\n        editValue?: boolean;\n        hasDescription?: boolean;\n        remove?: boolean;\n        reorder?: boolean;\n        types: AccountingPreferenceType[];\n      };\n    } = {};\n\n    types.LEDGER = {\n      common: false,\n      editDescription: true,\n      editValue: true,\n      reorder: false,\n      types: [\n        AccountingPreferenceType.LEDGER_BANK,\n        AccountingPreferenceType.LEDGER_PURCHASE,\n        AccountingPreferenceType.LEDGER_SALES,\n        AccountingPreferenceType.LEDGER_MISC,\n      ],\n    };\n\n    types.BANK_ACCOUNT = {\n      common: false,\n      editDescription: true,\n      editLabel: true,\n      editValue: true,\n      hasDescription: true,\n      reorder: false,\n      types: [\n        AccountingPreferenceType.BANK_ACCOUNT,\n        AccountingPreferenceType.BANK_ACCOUNT_TREEZOR,\n      ],\n    };\n\n    types.PURCHASE_ACCOUNT = {\n      add: true,\n      common: false,\n      editDescription: true,\n      editLabel: true,\n      editValue: true,\n      hasDescription: true,\n      remove: true,\n      reorder: true,\n      types: [AccountingPreferenceType.PURCHASE_ACCOUNT],\n    };\n\n    types.VAT_ACCOUNT = {\n      add: false,\n      common: false,\n      editDescription: true,\n      editLabel: true,\n      editValue: true,\n      hasDescription: true,\n      remove: false,\n      reorder: false,\n      types: [AccountingPreferenceType.VAT_ACCOUNT],\n    };\n\n    return (\n      <Content>\n        <Row type=\"flex\">\n          <Heading\n            icon={IconValue.Tag}\n            title={'accounting_options.header.title'}\n            description={'accounting_options.header.description'}\n          />\n        </Row>\n        {Object.keys(types).map((label: string, i: number) => (\n          <Row\n            key={`${i}`}\n            type=\"flex\"\n            style={{\n              marginBottom: 30,\n            }}\n          >\n            <Col span={24}>\n              <AccountingCtx.Provider\n                common={types[label].common}\n                types={types[label].types as AccountingPreferenceType[]}\n              >\n                <AccountingCtx.Consumer>\n                  {({ accounting }) => {\n                    const preferences =\n                      (accounting &&\n                        accounting.preferences &&\n                        accounting.preferences.rows) ||\n                      [];\n\n                    return (\n                      <TagManager\n                        {...{\n                          add: types[label].add,\n                          editDescription: types[label].editDescription,\n                          editLabel: types[label].editLabel,\n                          editValue: types[label].editValue,\n                          hasDescription: types[label].hasDescription,\n                          remove: types[label].remove,\n                          reorder: types[label].reorder,\n                        }}\n                        type={label as AccountingPreferenceType}\n                        rows={preferences}\n                        title={`accounting_options.${label.toLowerCase()}.title`}\n                      />\n                    );\n                  }}\n                </AccountingCtx.Consumer>\n              </AccountingCtx.Provider>\n            </Col>\n          </Row>\n        ))}\n      </Content>\n    );\n  }\n}\n\nexport default AccountingOptions;\n","import { Avatar, Card } from 'antd';\nimport { CardProps } from 'antd/lib/card';\nimport { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport * as React from 'react';\n\n/**\n * @props\n */\ninterface IProps extends CardProps {\n  center?: boolean;\n  avatar?: React.ReactNode | string;\n  onClose?: () => void;\n  editable?: boolean;\n  onEdit?: () => void;\n  removable?: boolean;\n  onRemove?: () => void;\n  shadow?: boolean;\n  primary?: boolean;\n  title?: React.ReactNode;\n  titleAlign?: 'left' | 'right';\n}\n\n/**\n * @state\n *\n * error\n */\ninterface IState {}\n\n/**\n * @class Submit\n *\n */\nclass Default extends React.PureComponent<IProps, IState> {\n  onRemove = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { onRemove } = this.props;\n    onRemove && onRemove();\n  };\n\n  render() {\n    const {\n      avatar,\n      center,\n      children,\n      className,\n      onClose,\n      editable,\n      onEdit,\n      removable,\n      shadow,\n      title,\n      primary,\n      titleAlign,\n      ...rest\n    } = this.props;\n\n    return (\n      <Card\n        className={`card-item${center ? ' center ' : ''}${\n          shadow ? ' shadow ' : ''\n        }${primary ? ' primary ' : ''}${className ? ` ${className}` : ''}`}\n        {...rest}\n      >\n        {onClose && (\n          <div onClick={onClose} className=\"card-close\">\n            <Icon value={IconValue.Cross} />\n          </div>\n        )}\n        {editable && (\n          <div onClick={onEdit} className=\"card-edit\">\n            <Icon value={IconValue.Pencil} />\n          </div>\n        )}\n        {removable && (\n          <div onClick={this.onRemove} className=\"card-remove\">\n            <Icon value={IconValue.Trash} />\n          </div>\n        )}\n        {avatar && <Avatar className=\"card-avatar\">{avatar}</Avatar>}\n        {title && (\n          <div className={`card-title${titleAlign ? ` ${titleAlign}` : ''}`}>\n            {title}\n          </div>\n        )}\n        <div className=\"card-children\">{children}</div>\n      </Card>\n    );\n  }\n}\n\nexport default Default;\n","import { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport Skeleton from 'components/Skeleton';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Card from './Card';\n\n/**\n * @props\n */\ninterface IProps {\n  center?: boolean;\n  className?: string;\n  title?: React.ReactNode;\n  description?: string;\n  color?: string;\n  icon?: IconValue;\n  loading?: boolean;\n  style?: React.CSSProperties;\n}\n\nconst CondensedCard: React.FunctionComponent<IProps> = ({\n  className,\n  center,\n  title,\n  description,\n  icon,\n  style,\n  loading,\n  color,\n}) => {\n  return (\n    <Card\n      style={style}\n      center={center}\n      className={`condensed-card${className ? ` ${className}` : ''}`}\n      shadow\n    >\n      <div className=\"condensed-card-left\">\n        <Skeleton.Bloc\n          loading={Boolean(loading)}\n          className=\"condensed-card-title\"\n        >\n          {title}\n        </Skeleton.Bloc>\n        {description && (\n          <Skeleton.Bloc\n            loading={Boolean(loading)}\n            className=\"condensed-card-description\"\n          >\n            <FormattedMessage id={description} />\n          </Skeleton.Bloc>\n        )}\n      </div>\n      <div className={`condensed-card-right${color ? ` ${color}` : ''}`}>\n        <Icon value={icon} />\n      </div>\n    </Card>\n  );\n};\n\nexport default CondensedCard;\n","import { Col, Row } from 'antd';\nimport * as React from 'react';\n\n/**\n * @props\n */\ninterface IProps {\n  className?: string;\n  title?: React.ReactNode | string;\n  rows?: React.ReactNode[];\n  renderRow?: (row: React.ReactNode) => React.ReactNode;\n}\n\n/**\n * @state\n *\n * error\n */\ninterface IState {}\n\n/**\n * @class Submit\n *\n */\nclass Default extends React.PureComponent<IProps, IState> {\n  render() {\n    const { className, title, rows, renderRow } = this.props;\n\n    return (\n      <Row className={`${className ? 'className ' : ''}`}>\n        <div className=\"card-row-title\">{title}</div>\n        {rows &&\n          rows.map((row, i) => (\n            <Col className=\"card-row-item\" key={`${i}`}>\n              {renderRow ? renderRow(row) : row}\n            </Col>\n          ))}\n      </Row>\n    );\n  }\n}\n\nexport default Default;\n","import './Styles.module.less';\n\nimport Card from './Card';\nimport CondensedCard from './CondensedCard';\nimport CardRow from './CardRow';\n\nexport {\n  Card,\n  CardRow,\n  CondensedCard\n};\n","import * as React from 'react';\nimport {\n  AccountingPreferenceType,\n  IAccountingPreferenceInput,\n  IAccountingPreferences,\n} from './types';\n\ninterface IAccountingInterface {\n  createOrUpdateAccountingPreferences: (\n    inputAddress: IAccountingPreferenceInput[],\n    type: AccountingPreferenceType,\n  ) => Promise<IAccountingPreferences | null>;\n  export: () => Promise<string | void>;\n  preferences?: IAccountingPreferences;\n  accountingExports?: any;\n}\n\nexport interface IAccountingContextInterface {\n  accounting?: IAccountingInterface;\n}\n\nconst { Provider, Consumer } = React.createContext<IAccountingContextInterface>(\n  {\n    accounting: {\n      accountingExports: undefined,\n      createOrUpdateAccountingPreferences: async () => null,\n      export: async () => undefined,\n      preferences: undefined,\n    },\n  },\n);\n\nexport { Provider, Consumer };\n","import * as React from 'react';\nimport { wrapDisplayName } from 'recompose';\nimport { Consumer, IAccountingContextInterface } from './context';\n\nconst withAccounting = () => <OriginalProps extends {}>(\n  Component: React.ComponentType<OriginalProps & IAccountingContextInterface>,\n) => {\n  type ResultProps = OriginalProps & IAccountingContextInterface;\n\n  class WithAccounting extends React.Component<ResultProps> {\n    render() {\n      return (\n        <Consumer>{props => <Component {...this.props} {...props} />}</Consumer>\n      );\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    (WithAccounting as any).displayName = wrapDisplayName(\n      Component,\n      'withAccounting',\n    );\n  }\n\n  return WithAccounting;\n};\n\nexport default withAccounting;\n","import gql from 'graphql-tag';\n\nimport Company from '../Company/fragments';\n\nconst accountingExport = `\n  id\n  fileLink\n  enabled\n  createdAt\n  updatedAt\n`;\n\nconst accountingExportFragment = gql`\nfragment export on Export {\n  ${accountingExport}\n}`;\n\nconst accountingExportQuery = `\n  ...export\n  company {\n    ${Company.standalone}\n  }\n`;\n\nconst accounting = `\n  id\n  key\n  value\n  description\n  type\n  order\n  enabled\n  createdAt\n  updatedAt\n  company {\n    id\n  }\n`;\n\nconst accountingFragment = gql`\nfragment accountingPreference on AccountingPreference {\n  ${accounting}\n}`;\n\nconst accountingQuery = `\n  ...accountingPreference\n`;\n\nexport default {\n  accounting: {\n    fragment: accountingFragment,\n    query: accountingQuery,\n  },\n  accountingExport: {\n    fragment: accountingExportFragment,\n    query: accountingExportQuery,\n  },\n};\n","import gql from 'graphql-tag';\n\nimport fragments from './fragments';\n\nexport const createOrUpdateAccountingPreferences: any = gql`\n  ${fragments.accounting.fragment}\n\n  mutation createOrUpdateAccountingPreferences($input: [AccountingPreferenceInput!]!) {\n    createOrUpdateAccountingPreferences(input: $input) {\n      total\n      rows {\n        ${fragments.accounting.query}\n      }\n    }\n  }\n`;\n\nexport const accountingPreferences: any = gql`\n  ${fragments.accounting.fragment}\n\n  query accountingPreferences($types: [AccountingPreferenceType], $default: Boolean) {\n    accountingPreferences(types: $types, default: $default) {\n      total\n      rows {\n        ${fragments.accounting.query}\n      }\n    }\n  }\n`;\n\nexport const accountingExports: any = gql`\n  ${fragments.accountingExport.fragment}\n\n  query exports($limit: Int, $offset: Int) {\n    exports(limit: $limit, offset: $offset) {\n      total\n      rows {\n        ${fragments.accountingExport.query}\n      }\n    }\n  }\n`;\n\nexport const accountingExport: any = gql`\n  mutation {\n    export\n  }\n`;\n","import { ApolloClient } from 'apollo-client';\nimport * as Alert from 'context/Alert';\nimport * as User from 'context/User';\nimport * as React from 'react';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport {\n  errorOrSuccess,\n  mutate,\n  parseError,\n  request,\n  updateStoreRows,\n} from 'utils';\nimport { IAccountingContextInterface, Provider } from './context';\nimport {\n  accountingExport,\n  accountingExports,\n  accountingPreferences,\n  createOrUpdateAccountingPreferences,\n} from './queries';\nimport { AccountingPreferenceType, IAccountingPreferenceInput } from './types';\n\ninterface IState extends IAccountingContextInterface {}\n\ninterface IProps extends Alert.InjectedProps, User.InjectedProps {\n  export: boolean;\n  accountingExport: any;\n  createOrUpdateAccountingPreferences: any;\n  dataPreferences: any;\n  dataExports: any;\n  children: React.ReactNode;\n  client: ApolloClient<any>;\n  types: AccountingPreferenceType[];\n  common: boolean;\n}\n\nclass PartnersContextProvider extends React.PureComponent<IProps, IState> {\n  state = {\n    accounting: {\n      accountingExports: undefined,\n      createOrUpdateAccountingPreferences: async (\n        input: IAccountingPreferenceInput[],\n        type: AccountingPreferenceType,\n      ) => {\n        try {\n          const results = await this.props.createOrUpdateAccountingPreferences({\n            variables: { input },\n          });\n          this.props.dataPreferences.refetch();\n\n          return results.data;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n      export: async () => {\n        const { data } = await this.props.accountingExport();\n\n        return data && data.export;\n      },\n      preferences: undefined,\n    },\n  };\n\n  render() {\n    const { dataPreferences, dataExports } = this.props;\n\n    return (\n      <Provider\n        value={{\n          accounting: {\n            ...this.state.accounting,\n            accountingExports: dataExports,\n            preferences:\n              dataPreferences && dataPreferences.accountingPreferences,\n          },\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nconst accountingPreferencesHandler = {\n  options: (props: any) => {\n    return {\n      fetchPolicy: 'network-only', // should be removed but the accounting preferences options is not well handled\n      // accounting option only use custom preferences\n      // invoice control use both so when I add a new account in preferences\n      // control isn't update\n      // QUICK FIX\n      variables: {\n        default: props.common,\n        types: props.types,\n      },\n    };\n  },\n  props: (props: any) => {\n    return {\n      dataPreferences: props.data,\n    };\n  },\n  skip: (props: any) => !props.types,\n};\n\nconst accountingExportsHandler = {\n  options: (props: any) => {\n    return {\n      variables: {\n        limit: props.limit,\n        offset: props.offset,\n      },\n    };\n  },\n  props: (props: any) => {\n    return {\n      dataExports: props.data,\n    };\n  },\n  skip: (props: any) => !props.export,\n};\n\nexport default compose(\n  withApollo,\n  Alert.hoc(),\n  graphql(createOrUpdateAccountingPreferences, {\n    name: 'createOrUpdateAccountingPreferences',\n  }),\n  graphql(accountingPreferences, accountingPreferencesHandler),\n  graphql(accountingExports, accountingExportsHandler),\n  graphql(accountingExport, { name: 'accountingExport' }),\n)(PartnersContextProvider);\n","import { Consumer, IAccountingContextInterface } from './context';\nimport hoc from './hoc';\nimport Provider from './provider';\n\nexport interface InjectedProps extends IAccountingContextInterface {}\n\nexport { Provider, Consumer, hoc };\n","import { ICompany } from 'context/Company/types';\n\nexport enum AccountingPreferenceType {\n  LEDGER_BANK = 'LEDGER_BANK',\n  LEDGER_PURCHASE = 'LEDGER_PURCHASE',\n  LEDGER_SALES = 'LEDGER_SALES',\n  LEDGER_MISC = 'LEDGER_MISC',\n  VAT_ACCOUNT = 'VAT_ACCOUNT',\n  PURCHASE_ACCOUNT = 'PURCHASE_ACCOUNT',\n  BANK_ACCOUNT = 'BANK_ACCOUNT',\n  BANK_ACCOUNT_TREEZOR = 'BANK_ACCOUNT_TREEZOR',\n}\n\nexport const ArrayAccountingPreferenceType: any = Object.keys(\n  AccountingPreferenceType,\n).reduce((o, v, i) => ({ ...o, [v]: i }), {});\n\nexport interface IAccountingPreference {\n  id?: string;\n  key?: string;\n  value?: React.ReactNode;\n  description?: React.ReactNode;\n  type?: AccountingPreferenceType;\n  order?: number;\n  enabled?: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n  company?: ICompany;\n}\n\nexport interface IAccountingPreferences {\n  total: number;\n  rows: IAccountingPreference[];\n}\n\nexport interface IAccountingPreferenceInput {\n  id?: string;\n  key?: string;\n  value?: string;\n  description?: string;\n  type?: AccountingPreferenceType;\n  order?: number;\n  enabled?: boolean;\n}\n\nexport interface IAccountingExport {\n  id: string;\n  company: ICompany;\n  fileLink: string;\n  enabled: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface IAccountingExports {\n  total: number;\n  rows: IAccountingExport[];\n}\n"],"sourceRoot":""}