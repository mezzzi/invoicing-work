{"version":3,"sources":["screens/Company/Mandate.tsx","components/Card/Card.tsx","components/Card/CondensedCard.tsx","components/Card/CardRow.tsx","components/Card/index.js","context/Bank/context.ts","context/Bank/fragments.ts","context/Bank/queries.ts","context/Bank/provider.tsx","context/Bank/index.tsx","context/Bank/types.ts"],"names":["Mandate","props","_this","Object","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__","this","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_10__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_11__","call","state","modalRemoveVisible","modalVisible","openModal","e","preventDefault","setState","later","history","push","close","mandateId","sign","code","remove","_ref","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default","a","mark","_callee","id","removeMandate","wrap","_context","prev","next","sent","stop","_x","_x2","apply","arguments","showModalRemove","cancelRemove","_this2","_this$props","user","_this$state","intl","form","match","bankId","params","me","data","currentCompany","addresses","rows","react__WEBPACK_IMPORTED_MODULE_23__","components_Layout__WEBPACK_IMPORTED_MODULE_17__","className","antd_es_row__WEBPACK_IMPORTED_MODULE_5__","type","components_Typo__WEBPACK_IMPORTED_MODULE_18__","icon","IconValue","Wallet","title","description","context_Bank__WEBPACK_IMPORTED_MODULE_19__","_ref2","bank","generateCode","current","bankAccount","mandate","mandates","find","currentMandate","status","MandateStatus","Canceled","components_Dialog__WEBPACK_IMPORTED_MODULE_16__","onComplete","bind","onCancel","visible","onRemove","concat","components_Card__WEBPACK_IMPORTED_MODULE_15__","primary","center","style","flex","react_intl__WEBPACK_IMPORTED_MODULE_25__","moment","createdAt","format","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_3__","span","css","primaryColor","uppercase","firstname","lastname","address1","zipcode","city","iban","bic","key","href","staticAssets","filePath","download","target","Signed","components_Button__WEBPACK_IMPORTED_MODULE_14__","marginLeft","marginRight","onClick","BtnType","Default","Primary","React","compose","injectIntl","User","antd_es_form__WEBPACK_IMPORTED_MODULE_1__","create","stopPropagation","avatar","children","onClose","editable","onEdit","removable","shadow","titleAlign","rest","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_12__","antd_es_card__WEBPACK_IMPORTED_MODULE_1__","assign","components_Assets__WEBPACK_IMPORTED_MODULE_10__","value","Cross","Pencil","Trash","antd_es_avatar__WEBPACK_IMPORTED_MODULE_3__","components_Assets__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","components_Skeleton__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react_intl__WEBPACK_IMPORTED_MODULE_3__","_Card__WEBPACK_IMPORTED_MODULE_4__","CondensedCard","loading","color","Bloc","Boolean","renderRow","react__WEBPACK_IMPORTED_MODULE_9__","antd_es_row__WEBPACK_IMPORTED_MODULE_1__","map","row","i","_Card__WEBPACK_IMPORTED_MODULE_1__","d","__webpack_exports__","_CondensedCard__WEBPACK_IMPORTED_MODULE_2__","_CardRow__WEBPACK_IMPORTED_MODULE_3__","undefined","bankAccounts","changeDefaultBankAccount","_changeDefaultBankAccount","asyncToGenerator","regenerator_default","abrupt","createMandate","_createMandate","_callee2","_context2","createOrUpdate","_createOrUpdate","_callee3","_context3","_generateCode","_callee4","_context4","removeBankAccount","_removeBankAccount","_callee5","_context5","_removeMandate","_callee6","_context6","_sign","_callee7","_context7","Provider","Consumer","Bank_fragments","fragment","gql","_templateObject","Iban","query","Companies","standalone","_templateObject2","queries_templateObject","fragments","createOrUpdateBankAccount","queries_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","generateCodeMandate","_templateObject7","_templateObject8","signedMandate","_templateObject9","_templateObject10","PartnersContextProvider","result","variables","errorOrSuccess","alert","parseError","errors","t0","bankAccountId","inputBankAccount","update","cache","cached","readQuery","writeQuery","objectSpread","toConsumableArray","total","input","_x3","_x4","_x5","_x6","_x7","_x8","_x9","dataBankAccounts","dataBankAccount","react","withApollo","Alert","graphql","name","skip","list","options","provider"],"mappings":"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","file":"static/js/39.c3f040c2.chunk.js","sourcesContent":["import { Col, Form, Row } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport { BtnType, Button } from 'components/Button';\nimport { Card } from 'components/Card';\nimport { DialogCode, DialogMandateRemove } from 'components/Dialog';\nimport { Text } from 'components/Form';\nimport ControlIban from 'components/Form/ControlIban';\nimport { Content, FloatingActionFooter } from 'components/Layout';\nimport { Div, H3, Heading } from 'components/Typo';\nimport { IAddress } from 'context/Addresses/types';\nimport * as BankCtx from 'context/Bank';\nimport { IMandate, MandateStatus } from 'context/Bank/types';\nimport { ICompany } from 'context/Company/types';\nimport * as Iban from 'context/Iban';\nimport * as User from 'context/User';\nimport { IUser } from 'context/User/types';\nimport moment from 'moment';\nimport * as React from 'react';\nimport { compose } from 'react-apollo';\nimport { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';\nimport { RouteComponentProps } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport history from 'store/history';\nimport { staticAssets } from 'utils/common';\nimport './Bank.module.less';\n\ninterface IProps\n  extends RouteComponentProps,\n    FormComponentProps,\n    InjectedIntlProps,\n    User.InjectedProps {}\n\ninterface IState {\n  modalVisible: boolean;\n  modalRemoveVisible: boolean;\n}\n\nclass Mandate extends React.PureComponent<IProps, IState> {\n  state = {\n    modalRemoveVisible: false,\n    modalVisible: false,\n  };\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  openModal = (e?: React.FormEvent) => {\n    e && e.preventDefault();\n\n    this.setState({\n      modalVisible: true,\n    });\n  };\n\n  later = () => {\n    history.push('/company/bank');\n  };\n\n  close = (\n    mandateId: string,\n    sign?: (mandateId: string, code: string) => Promise<IMandate | null>,\n    code?: string,\n  ) => {\n    this.setState({\n      modalVisible: false,\n    });\n    if (code && mandateId && sign) {\n      sign(mandateId, code);\n    }\n  };\n\n  remove = async (\n    id: string,\n    removeMandate?: (id: string) => Promise<IMandate | null>,\n  ) => {\n    if (removeMandate) {\n      const mandate = await removeMandate(id);\n      if (mandate) {\n        history.push('/company/bank');\n      } else {\n        this.setState({\n          modalRemoveVisible: false,\n        });\n      }\n    }\n  };\n\n  showModalRemove = () => {\n    this.setState({\n      modalRemoveVisible: true,\n    });\n  };\n\n  cancelRemove = () => {\n    this.setState({\n      modalRemoveVisible: false,\n    });\n  };\n\n  render() {\n    const { user, intl, form } = this.props;\n    const { modalVisible, modalRemoveVisible } = this.state;\n    const match: any = this.props.match;\n    const bankId = match && match.params && match.params.bankId;\n    const me: IUser = user && user.data && user.data.me;\n    const currentCompany: ICompany | undefined = me && me.currentCompany;\n    const addresses: IAddress | undefined =\n      currentCompany &&\n      currentCompany.addresses &&\n      currentCompany.addresses.rows &&\n      currentCompany.addresses.rows[0];\n\n    return (\n      <Content className=\"mandate\">\n        <Row type=\"flex\">\n          <Heading\n            icon={IconValue.Wallet}\n            title={'bank.mandate_view.title'}\n            description={'bank.mandate_view.description'}\n          />\n        </Row>\n        {currentCompany && (\n          <BankCtx.Provider id={bankId}>\n            <BankCtx.Consumer>\n              {({ bank }) => {\n                const removeMandate = bank && bank.removeMandate;\n                const generateCode = bank && bank.generateCode;\n                const sign = bank && bank.sign;\n\n                const current =\n                  bank && bank.bankAccount && bank.bankAccount.bankAccount;\n\n                const mandate: IMandate | undefined =\n                  current &&\n                  current.mandates &&\n                  current.mandates.find(\n                    (currentMandate: IMandate) =>\n                      currentMandate.status !== MandateStatus.Canceled,\n                  );\n\n                return (\n                  mandate && (\n                    <>\n                      {modalVisible && (\n                        <DialogCode\n                          onComplete={this.close.bind(null, mandate.id, sign)}\n                          id={mandate.id}\n                          generateCode={generateCode}\n                          onCancel={this.close}\n                          visible={modalVisible}\n                        />\n                      )}\n                      {modalRemoveVisible && (\n                        <DialogMandateRemove\n                          onRemove={this.remove.bind(\n                            null,\n                            `${mandate.id}`,\n                            removeMandate,\n                          )}\n                          onCancel={this.cancelRemove}\n                          visible={modalRemoveVisible}\n                        />\n                      )}\n                      <Card primary center={false}>\n                        <Row type=\"flex\">\n                          <H3\n                            style={{\n                              flex: 1,\n                            }}\n                          >\n                            <FormattedMessage id=\"bank.mandate_view_detail.title\" />\n                          </H3>\n                          <Row>\n                            <div className=\"row-title\">\n                              <FormattedMessage id=\"bank.mandate_view_detail.date\" />\n                            </div>\n                            <div className=\"row-detail\">\n                              {mandate &&\n                                moment(mandate.createdAt).format('DD/MM/YYYY')}\n                            </div>\n                          </Row>\n                        </Row>\n                        <Row gutter={28}>\n                          <Col span={12}>\n                            <H3\n                              css={{\n                                primaryColor: true,\n                                uppercase: true,\n                              }}\n                            >\n                              <FormattedMessage id=\"bank.mandate_view_detail.debtor\" />\n                            </H3>\n                            <div className=\"row-detail\">\n                              {me.firstname} {me.lastname}\n                            </div>\n                            {addresses && (\n                              <>\n                                <div className=\"row-detail\">\n                                  {addresses.address1}\n                                </div>\n                                <div className=\"row-detail\">\n                                  {addresses.zipcode}, {addresses.city}\n                                </div>\n                              </>\n                            )}\n                            {current && (\n                              <>\n                                {current.iban && (\n                                  <>\n                                    <div className=\"row-title\">\n                                      <FormattedMessage id=\"bank.mandate_view_detail.iban\" />\n                                    </div>\n                                    <div className=\"row-detail\">\n                                      {current.iban.iban}\n                                    </div>\n                                    <div className=\"row-title\">\n                                      <FormattedMessage id=\"bank.mandate_view_detail.bic\" />\n                                    </div>\n                                    <div className=\"row-detail\">\n                                      {current.iban.bic}\n                                    </div>\n                                    <div className=\"row-title\">\n                                      <FormattedMessage id=\"bank.mandate_view_detail.bank\" />\n                                    </div>\n                                    <div className=\"row-detail\">\n                                      {current.iban.bank}\n                                    </div>\n                                  </>\n                                )}\n                              </>\n                            )}\n                          </Col>\n                          <Col span={12}>\n                            <H3\n                              css={{\n                                primaryColor: true,\n                                uppercase: true,\n                              }}\n                            >\n                              <FormattedMessage id=\"bank.mandate_view_detail.créditor\" />\n                            </H3>\n                            <div className=\"row-detail\">\n                              <FormattedMessage id=\"bank.mandate_view_detail.debtor_company\" />\n                            </div>\n                            <div className=\"row-detail\">\n                              <FormattedMessage id=\"bank.mandate_view_detail.debtor_address1\" />\n                            </div>\n                            <div className=\"row-detail\">\n                              <FormattedMessage id=\"bank.mandate_view_detail.debtor_zipcode\" />\n                              ,&nbsp;\n                              <FormattedMessage id=\"bank.mandate_view_detail.debtor_city\" />\n                            </div>\n                            <div className=\"row-title\">\n                              <FormattedMessage id=\"bank.mandate_view_detail.id_creditor\" />\n                            </div>\n                            <div className=\"row-detail\">\n                              <FormattedMessage id=\"bank.mandate_view_detail.debtor_id\" />\n                            </div>\n                            <a\n                              key=\"download\"\n                              href={\n                                mandate ? staticAssets(mandate.filePath) : '#'\n                              }\n                              download=\"rum.pdf\"\n                              target=\"_blank\"\n                            >\n                              <FormattedMessage id=\"bank.mandate_view_detail.rum\" />\n                            </a>\n                          </Col>\n                        </Row>\n                        <div className=\"row-mandate-explain\">\n                          <FormattedMessage id=\"bank.mandate_view_detail.description\" />\n                        </div>\n                      </Card>\n                      <FloatingActionFooter visible={true}>\n                        {/* <a\n                          className=\"ant-btn ant-btn-ghost\"\n                          key=\"download\"\n                          href={mandate ? staticAssets(mandate.filePath) : '#'}\n                          download=\"rum.pdf\"\n                          target=\"_blank\"\n                        >\n                          <Icon value={IconValue.Download} />\n                          <FormattedMessage id=\"bank.mandate_view_footer.download\" />\n                        </a> */}\n                        {mandate.status === MandateStatus.Signed && (\n                          <>\n                            <Button\n                              style={{\n                                marginLeft: 150,\n                                marginRight: 50,\n                              }}\n                              onClick={this.showModalRemove}\n                              type={BtnType.Default}\n                            >\n                              <FormattedMessage id=\"bank.mandate_view_footer.remove\" />\n                            </Button>\n                            <a\n                              style={{\n                                marginLeft: 'auto',\n                                marginRight: 50,\n                              }}\n                              className=\"ant-btn ant-btn-primary\"\n                              key=\"download\"\n                              href=\"/company/bank\"\n                            >\n                              <FormattedMessage id=\"bank.mandate_view_footer.later\" />\n                            </a>\n                          </>\n                        )}\n                        {mandate.status !== MandateStatus.Signed && (\n                          <Button\n                            style={{\n                              marginLeft: 'auto',\n                              marginRight: 50,\n                            }}\n                            onClick={this.openModal}\n                            type={BtnType.Primary}\n                          >\n                            <FormattedMessage id=\"bank.mandate_view_footer.sign\" />\n                          </Button>\n                        )}\n                      </FloatingActionFooter>\n                    </>\n                  )\n                );\n              }}\n            </BankCtx.Consumer>\n          </BankCtx.Provider>\n        )}\n      </Content>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  User.hoc(),\n  Form.create({}),\n)(Mandate);\n","import { Avatar, Card } from 'antd';\nimport { CardProps } from 'antd/lib/card';\nimport { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport * as React from 'react';\n\n/**\n * @props\n */\ninterface IProps extends CardProps {\n  center?: boolean;\n  avatar?: React.ReactNode | string;\n  onClose?: () => void;\n  editable?: boolean;\n  onEdit?: () => void;\n  removable?: boolean;\n  onRemove?: () => void;\n  shadow?: boolean;\n  primary?: boolean;\n  title?: React.ReactNode;\n  titleAlign?: 'left' | 'right';\n}\n\n/**\n * @state\n *\n * error\n */\ninterface IState {}\n\n/**\n * @class Submit\n *\n */\nclass Default extends React.PureComponent<IProps, IState> {\n  onRemove = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { onRemove } = this.props;\n    onRemove && onRemove();\n  };\n\n  render() {\n    const {\n      avatar,\n      center,\n      children,\n      className,\n      onClose,\n      editable,\n      onEdit,\n      removable,\n      shadow,\n      title,\n      primary,\n      titleAlign,\n      ...rest\n    } = this.props;\n\n    return (\n      <Card\n        className={`card-item${center ? ' center ' : ''}${\n          shadow ? ' shadow ' : ''\n        }${primary ? ' primary ' : ''}${className ? ` ${className}` : ''}`}\n        {...rest}\n      >\n        {onClose && (\n          <div onClick={onClose} className=\"card-close\">\n            <Icon value={IconValue.Cross} />\n          </div>\n        )}\n        {editable && (\n          <div onClick={onEdit} className=\"card-edit\">\n            <Icon value={IconValue.Pencil} />\n          </div>\n        )}\n        {removable && (\n          <div onClick={this.onRemove} className=\"card-remove\">\n            <Icon value={IconValue.Trash} />\n          </div>\n        )}\n        {avatar && <Avatar className=\"card-avatar\">{avatar}</Avatar>}\n        {title && (\n          <div className={`card-title${titleAlign ? ` ${titleAlign}` : ''}`}>\n            {title}\n          </div>\n        )}\n        <div className=\"card-children\">{children}</div>\n      </Card>\n    );\n  }\n}\n\nexport default Default;\n","import { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport Skeleton from 'components/Skeleton';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Card from './Card';\n\n/**\n * @props\n */\ninterface IProps {\n  center?: boolean;\n  className?: string;\n  title?: React.ReactNode;\n  description?: string;\n  color?: string;\n  icon?: IconValue;\n  loading?: boolean;\n  style?: React.CSSProperties;\n}\n\nconst CondensedCard: React.FunctionComponent<IProps> = ({\n  className,\n  center,\n  title,\n  description,\n  icon,\n  style,\n  loading,\n  color,\n}) => {\n  return (\n    <Card\n      style={style}\n      center={center}\n      className={`condensed-card${className ? ` ${className}` : ''}`}\n      shadow\n    >\n      <div className=\"condensed-card-left\">\n        <Skeleton.Bloc\n          loading={Boolean(loading)}\n          className=\"condensed-card-title\"\n        >\n          {title}\n        </Skeleton.Bloc>\n        {description && (\n          <Skeleton.Bloc\n            loading={Boolean(loading)}\n            className=\"condensed-card-description\"\n          >\n            <FormattedMessage id={description} />\n          </Skeleton.Bloc>\n        )}\n      </div>\n      <div className={`condensed-card-right${color ? ` ${color}` : ''}`}>\n        <Icon value={icon} />\n      </div>\n    </Card>\n  );\n};\n\nexport default CondensedCard;\n","import { Col, Row } from 'antd';\nimport * as React from 'react';\n\n/**\n * @props\n */\ninterface IProps {\n  className?: string;\n  title?: React.ReactNode | string;\n  rows?: React.ReactNode[];\n  renderRow?: (row: React.ReactNode) => React.ReactNode;\n}\n\n/**\n * @state\n *\n * error\n */\ninterface IState {}\n\n/**\n * @class Submit\n *\n */\nclass Default extends React.PureComponent<IProps, IState> {\n  render() {\n    const { className, title, rows, renderRow } = this.props;\n\n    return (\n      <Row className={`${className ? 'className ' : ''}`}>\n        <div className=\"card-row-title\">{title}</div>\n        {rows &&\n          rows.map((row, i) => (\n            <Col className=\"card-row-item\" key={`${i}`}>\n              {renderRow ? renderRow(row) : row}\n            </Col>\n          ))}\n      </Row>\n    );\n  }\n}\n\nexport default Default;\n","import './Styles.module.less';\n\nimport Card from './Card';\nimport CondensedCard from './CondensedCard';\nimport CardRow from './CardRow';\n\nexport {\n  Card,\n  CardRow,\n  CondensedCard\n};\n","import * as React from 'react';\nimport { IBankAccount, IInputBankAccount, IMandate } from './types';\n\ninterface IBanksInterface {\n  bankAccount?: any;\n  bankAccounts?: any;\n  changeDefaultBankAccount: (id: string) => Promise<IBankAccount[] | undefined>;\n  createMandate: (bankAccountId?: string) => Promise<IMandate | null>;\n  createOrUpdate: (\n    inputBankAccount: IInputBankAccount,\n    id?: string,\n  ) => Promise<IBankAccount | null>;\n  generateCode: (mandateId: string) => Promise<boolean | null>;\n  removeBankAccount: (id: string) => Promise<IBankAccount | null>;\n  removeMandate: (id: string) => Promise<IMandate | null>;\n  sign: (mandateId: string, code: string) => Promise<IMandate | null>;\n}\n\nexport interface IBanksContextInterface {\n  bank?: IBanksInterface;\n}\n\nconst { Provider, Consumer } = React.createContext<IBanksContextInterface>({\n  bank: {\n    bankAccount: undefined,\n    bankAccounts: undefined,\n    changeDefaultBankAccount: async () => undefined,\n    createMandate: async () => null,\n    createOrUpdate: async () => null,\n    generateCode: async () => null,\n    removeBankAccount: async () => null,\n    removeMandate: async () => null,\n    sign: async () => null,\n  },\n});\n\nexport { Provider, Consumer };\n","import gql from 'graphql-tag';\n\nimport Companies from '../Company/fragments';\nimport Iban from '../Iban/fragments';\nimport User from '../User/fragments';\n\nconst bankAccount = `\n  id\n  label\n  default\n  enabled\n`;\n\nconst mandate = `\n  id\n  treezorMandateId\n  filePath\n  status\n  rum\n  signatoryIp\n  signaturedAt\n  createdAt\n  updatedAt\n`;\n\nconst bankAccountFragment = gql`\n${Iban.fragment}\n${User.fragment}\n\nfragment bankAccount on BankAccount {\n  ${bankAccount}\n}`;\n\nconst bankAccountQuery = `\n  ...bankAccount\n  company {\n    ${Companies.standalone}\n  }\n  iban {\n    ${Iban.query}\n  }\n  mandates {\n    ${mandate}\n    signatory {\n      ${User.query}\n    }\n  }\n`;\n\nconst mandateFragment = gql`\n${User.fragment}\n\nfragment mandate on Mandate {\n  ${mandate}\n}`;\n\nconst mandateQuery = `\n  ...mandate\n  signatory {\n    ${User.query}\n  }\n`;\n\nexport default {\n  bank: {\n    fragment: bankAccountFragment,\n    query: bankAccountQuery,\n  },\n  mandate: {\n    fragment: mandateFragment,\n    query: mandateQuery,\n  },\n};\n","import gql from 'graphql-tag';\n\nimport fragments from './fragments';\n\nexport const bankAccounts: any = gql`\n  ${fragments.bank.fragment}\n\n  query bankAccounts {\n    bankAccounts {\n      total\n      rows {\n        ${fragments.bank.query}\n      }\n    }\n  }\n`;\n\nexport const createOrUpdateBankAccount: any = gql`\n  ${fragments.bank.fragment}\n\n  mutation createOrUpdateBankAccount($input: BankAccountInput!, $id: ID) {\n    createOrUpdateBankAccount(input: $input, id: $id) {\n      ${fragments.bank.query}\n    }\n  }\n`;\n\nexport const bankAccount: any = gql`\n  ${fragments.bank.fragment}\n\n  query bankAccount($id: ID!) {\n    bankAccount(id: $id) {\n      ${fragments.bank.query}\n    }\n  }\n`;\n\nexport const changeDefaultBankAccount: any = gql`\n  ${fragments.bank.fragment}\n\n  mutation changeDefaultBankAccount($id: ID!) {\n    changeDefaultBankAccount(id: $id) {\n      ${fragments.bank.query}\n    }\n  }\n`;\n\nexport const removeBankAccount: any = gql`\n  ${fragments.bank.fragment}\n\n  mutation removeBankAccount($id: ID!) {\n    removeBankAccount(id: $id) {\n      ${fragments.bank.query}\n    }\n  }\n`;\n\nexport const createMandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  mutation createMandate($bankAccountId: ID!) {\n    createMandate(bankAccountId: $bankAccountId) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n\nexport const mandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  query mandate($id: ID!) {\n    mandate(id: $id) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n\nexport const generateCodeMandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  mutation generateCodeMandate($id: ID!) {\n    generateCodeMandate(id: $id) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n\nexport const signedMandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  mutation signedMandate($id: ID!, $code: String!) {\n    signedMandate(id: $id, code: $code) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n\nexport const removeMandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  mutation removeMandate($id: ID!) {\n    removeMandate(id: $id) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n","import { ApolloClient } from 'apollo-client';\nimport * as Alert from 'context/Alert';\nimport * as User from 'context/User';\nimport * as React from 'react';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport { errorOrSuccess, parseError } from 'utils';\nimport { IBanksContextInterface, Provider } from './context';\nimport {\n  bankAccount,\n  bankAccounts,\n  changeDefaultBankAccount,\n  createMandate,\n  createOrUpdateBankAccount,\n  generateCodeMandate,\n  removeBankAccount,\n  removeMandate,\n  signedMandate,\n} from './queries';\nimport { IBankAccount, IInputBankAccount, IMandate } from './types';\n\ninterface IState extends IBanksContextInterface {}\n\ninterface IProps extends Alert.InjectedProps, User.InjectedProps {\n  list: boolean;\n  createOrUpdateBankAccount: any;\n  createMandate: any;\n  changeDefaultBankAccount: any;\n  generateCodeMandate: any;\n  signedMandate: any;\n  removeBankAccount: any;\n  removeMandate: any;\n  dataBankAccounts: any;\n  dataBankAccount: any;\n  children: React.ReactNode;\n  client: ApolloClient<any>;\n}\n\nclass PartnersContextProvider extends React.PureComponent<IProps, IState> {\n  state = {\n    bank: {\n      bankAccount: undefined,\n      bankAccounts: undefined,\n      changeDefaultBankAccount: async (\n        id: string,\n      ): Promise<IBankAccount[] | undefined> => {\n        try {\n          const result = await this.props.changeDefaultBankAccount({\n            variables: { id },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.form.success_change_default',\n          ]);\n          return result.data && result.data.changeDefaultBankAccount;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n      },\n      createMandate: async (bankAccountId?: string) => {\n        try {\n          const result = await this.props.createMandate({\n            variables: { bankAccountId },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.mandate.success_create',\n          ]);\n          return result.data && result.data.createMandate;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n      },\n      createOrUpdate: async (\n        inputBankAccount: IInputBankAccount,\n        id?: string,\n      ) => {\n        try {\n          const result = await this.props.createOrUpdateBankAccount({\n            update: (cache: any, { data }: any) => {\n              if (!id) {\n                const cached = cache.readQuery({\n                  query: bankAccounts,\n                });\n\n                cache.writeQuery({\n                  data: {\n                    bankAccounts: {\n                      ...(cached ? cached.bankAccounts : {}),\n                      rows: [data.createOrUpdateBankAccount].concat(\n                        ...(cached && cached.bankAccounts\n                          ? cached.bankAccounts.rows\n                          : []),\n                      ),\n                      total:\n                        cached && cached.bankAccounts\n                          ? cached.bankAccounts.total + 1\n                          : 1,\n                    },\n                  },\n                  query: bankAccounts,\n                });\n              }\n            },\n            variables: { input: inputBankAccount, id },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            id ? 'bank.form.success_updated' : 'bank.form.success_add',\n          ]);\n          return result.data && result.data.createOrUpdateBankAccount;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n      },\n      generateCode: async (mandateId: string): Promise<boolean | null> => {\n        try {\n          const result = await this.props.generateCodeMandate({\n            variables: { id: mandateId },\n          });\n          return !result.errors;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n      removeBankAccount: async (id: string): Promise<IBankAccount | null> => {\n        try {\n          const result = await this.props.removeBankAccount({\n            variables: { id },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.row.success_remove',\n          ]);\n          return result.data && result.data.removeBankAccount;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n      removeMandate: async (id: string): Promise<IMandate | null> => {\n        try {\n          const result = await this.props.removeMandate({\n            variables: { id },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.mandate.success_remove',\n          ]);\n          return result.data && result.data.removeMandate;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n      sign: async (\n        mandateId: string,\n        code: string,\n      ): Promise<IMandate | null> => {\n        try {\n          const result = await this.props.signedMandate({\n            variables: { id: mandateId, code },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.mandate.success_sign',\n          ]);\n          return result.data && result.data.signedMandate;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n    },\n  };\n\n  render() {\n    const { dataBankAccounts, dataBankAccount } = this.props;\n\n    return (\n      <Provider\n        value={{\n          bank: {\n            ...this.state.bank,\n            bankAccount: dataBankAccount,\n            bankAccounts: dataBankAccounts,\n          },\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nconst bankAccountsHandler = {\n  props: (props: any) => {\n    return {\n      dataBankAccounts: props.data,\n    };\n  },\n  skip: (props: any) => !props.list,\n};\n\nconst bankAccountHandler = {\n  options: (props: any) => {\n    return {\n      variables: {\n        id: props.id,\n      },\n    };\n  },\n  props: (props: any) => {\n    return {\n      dataBankAccount: props.data,\n    };\n  },\n  skip: (props: any) => !props.id,\n};\n\nexport default compose(\n  withApollo,\n  Alert.hoc(),\n  graphql(createOrUpdateBankAccount, { name: 'createOrUpdateBankAccount' }),\n  graphql(createMandate, { name: 'createMandate' }),\n  graphql(changeDefaultBankAccount, { name: 'changeDefaultBankAccount' }),\n  graphql(generateCodeMandate, { name: 'generateCodeMandate' }),\n  graphql(signedMandate, { name: 'signedMandate' }),\n  graphql(removeBankAccount, { name: 'removeBankAccount' }),\n  graphql(removeMandate, { name: 'removeMandate' }),\n  graphql(bankAccounts, bankAccountsHandler),\n  graphql(bankAccount, bankAccountHandler),\n)(PartnersContextProvider);\n","import { Consumer, IBanksContextInterface } from './context';\nimport hoc from './hoc';\nimport Provider from './provider';\n\nexport interface InjectedProps extends IBanksContextInterface {}\n\nexport { Provider, Consumer, hoc };\n","import { ICompany } from 'context/Company/types';\nimport { IIban } from 'context/Iban/types';\nimport { IUser } from 'context/User/types';\n\nexport enum MandateStatus {\n  Pending = 'PENDING',\n  Validated = 'VALIDATED',\n  Canceled = 'CANCELED',\n  Signed = 'SIGNED',\n}\n\nexport interface IMandate {\n  id: string;\n  bankAccount: IBankAccount;\n  treezorMandateId: string;\n  filePath: string;\n  rum: string;\n  status: MandateStatus;\n  signatory: IUser;\n  signatoryIp: string;\n  validationCode: string;\n  signaturedAt: Date;\n  createdAt: Date;\n  updatedAt: Date;\n}\nexport interface IBankAccount {\n  id: string;\n  company: ICompany;\n  iban: IIban;\n  label: string;\n  default: boolean;\n  enabled: boolean;\n  mandates: IMandate[];\n}\n\nexport interface IBankAccounts {\n  total: number;\n  rows: IBankAccount[];\n}\n\nexport interface IInputBankAccount {\n  iban?: string;\n  label: string;\n}\n"],"sourceRoot":""}