{"version":3,"sources":["screens/Profile/Edit.tsx"],"names":["ProfileEdit","props","_this","Object","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__","this","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_10__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_11__","call","state","passwordValue","passwordRef","handleChangePassword","changePassword","bind","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_13__","handleSetPasswordRef","setPasswordRef","handleSave","save","_this2","form","validateFields","_ref","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default","a","mark","_callee","err","values","user","_ref2","error","wrap","_context","prev","next","email","password","updateUser","variables","input","sent","data","errorOrSuccess","alert","parseError","stop","_x","_x2","apply","arguments","node","setState","value","_this$props","intl","me","react__WEBPACK_IMPORTED_MODULE_21__","components_Layout__WEBPACK_IMPORTED_MODULE_17__","footer","visible","style","display","flex","justifyContent","components_Button__WEBPACK_IMPORTED_MODULE_15__","onClick","marginRight","type","BtnType","Primary","className","react_intl__WEBPACK_IMPORTED_MODULE_23__","id","antd_es_row__WEBPACK_IMPORTED_MODULE_5__","components_Typo__WEBPACK_IMPORTED_MODULE_18__","icon","IconValue","Graduation","title","description","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_3__","span","components_Form__WEBPACK_IMPORTED_MODULE_16__","defaultValue","firstname","label","rules","message","formatMessage","required","lastname","disabled","React","compose","antd_es_form__WEBPACK_IMPORTED_MODULE_1__","create","injectIntl","User","Alert"],"mappings":"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","file":"static/js/32.fbafa12c.chunk.js","sourcesContent":["import { Col, Form, Row } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IconValue } from 'components/Assets/Icon';\nimport { BtnType, Button } from 'components/Button';\nimport { Date, Password, Select, SelectOption, Text } from 'components/Form';\nimport { Content, FloatingActionFooter } from 'components/Layout';\nimport { Heading } from 'components/Typo';\nimport { IAddress } from 'context/Addresses/types';\nimport * as Alert from 'context/Alert';\nimport { ICompany } from 'context/Company/types';\nimport * as User from 'context/User';\nimport { IUser } from 'context/User/types';\nimport * as React from 'react';\nimport { compose } from 'react-apollo';\nimport { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';\nimport { RouteComponentProps } from 'react-router';\nimport { errorOrSuccess, parseError } from 'utils';\nimport { escapeRegExp, toPickerDate } from 'utils/common';\nimport './Edit.module.less';\n\ninterface IProps\n  extends RouteComponentProps,\n    FormComponentProps,\n    InjectedIntlProps,\n    User.InjectedProps,\n    Alert.InjectedProps {}\n\ninterface IState {\n  passwordValue: string | null;\n}\n\nclass ProfileEdit extends React.PureComponent<IProps, IState> {\n  state = {\n    passwordValue: null,\n  };\n\n  passwordRef: HTMLInputElement | null = null;\n  handleChangePassword: ((node: React.ChangeEvent) => void) | undefined;\n  handleSetPasswordRef: ((node: HTMLInputElement) => void) | undefined;\n  handleSave: () => void;\n  constructor(props: any) {\n    super(props);\n\n    this.handleChangePassword = this.changePassword.bind(this);\n    this.handleSetPasswordRef = this.setPasswordRef.bind(this);\n    this.handleSave = this.save.bind(this);\n  }\n\n  save() {\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        const user = this.props.user;\n\n        delete values['validate-password'];\n        delete values.email;\n        if (values.password === null) {\n          delete values.password;\n        }\n        if (user && user.updateUser) {\n          const { data, error } = await user.updateUser({\n            variables: {\n              input: values,\n            },\n          });\n          errorOrSuccess(this.props.alert, parseError(error), [\n            'profile.informations.save_success',\n          ]);\n        }\n      }\n    });\n  }\n\n  setPasswordRef(node: HTMLInputElement) {\n    this.passwordRef = node;\n  }\n\n  changePassword() {\n    this.setState({\n      passwordValue: this.passwordRef && this.passwordRef.value,\n    });\n  }\n\n  render() {\n    const { user, intl, form } = this.props;\n    const { passwordValue } = this.state;\n    const me: IUser = user && user.data && user.data.me;\n\n    return (\n      <Content\n        footer={\n          <FloatingActionFooter visible={true}>\n            <div\n              style={{\n                display: 'flex',\n                flex: 1,\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                onClick={this.handleSave}\n                style={{ marginRight: 50 }}\n                type={BtnType.Primary}\n                className=\"btn-control-save\"\n              >\n                <FormattedMessage id=\"profile.informations.save_btn\" />\n              </Button>\n            </div>\n          </FloatingActionFooter>\n        }\n      >\n        <Row type=\"flex\">\n          <Heading\n            icon={IconValue.Graduation}\n            title={'profile.header.title'}\n            description={'profile.header.description'}\n          />\n        </Row>\n        <Row gutter={90} type=\"flex\">\n          {me && (\n            <Col span={12}>\n              <Text\n                defaultValue={me.firstname}\n                id=\"firstname\"\n                label={<FormattedMessage id=\"profile.informations.firstname\" />}\n                rules={[\n                  {\n                    message: intl.formatMessage({\n                      id: 'profile.informations.firstname_error',\n                    }),\n                    required: true,\n                  },\n                ]}\n                form={form}\n              />\n              <Text\n                defaultValue={me.lastname}\n                id=\"lastname\"\n                label={<FormattedMessage id=\"profile.informations.lastname\" />}\n                rules={[\n                  {\n                    message: intl.formatMessage({\n                      id: 'profile.informations.lastname_error',\n                    }),\n                    required: true,\n                  },\n                ]}\n                form={form}\n              />\n              <Text\n                defaultValue={me.email}\n                id=\"email\"\n                disabled\n                label={<FormattedMessage id=\"profile.informations.email\" />}\n                form={form}\n              />\n              {/* <Password\n                label={<FormattedMessage id=\"signup.form.password\" />}\n                rules={[\n                  {\n                    message: intl.formatMessage({\n                      id: 'signup.form.password_strong_error'\n                    }),\n                    pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[\\!\\â€œ\\#\\$\\%\\&\\â€˜\\(\\)\\*\\+\\,\\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~])(?=.{8,})/,\n                    required: false\n                  }\n                ]}\n                inputRef={this.handleSetPasswordRef}\n                onChange={this.handleChangePassword}\n                form={form}\n                hint={intl.formatMessage({\n                  id: 'signup.form.password_hint'\n                })}\n              />\n              <Password\n                label={<FormattedMessage id=\"signup.form.comfirm_password\" />}\n                form={form}\n                rules={[\n                  {\n                    message: intl.formatMessage({\n                      id: 'signup.form.comfirm_password_error'\n                    }),\n                    pattern: new RegExp(`^${escapeRegExp(passwordValue)}$`),\n                    required: passwordValue ? true : false\n                  }\n                ]}\n                id=\"validate-password\"\n              /> */}\n            </Col>\n          )}\n        </Row>\n      </Content>\n    );\n  }\n}\n\nexport default compose(\n  Form.create({}),\n  injectIntl,\n  User.hoc(),\n  Alert.hoc(),\n)(ProfileEdit);\n"],"sourceRoot":""}