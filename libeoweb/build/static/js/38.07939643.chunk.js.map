{"version":3,"sources":["screens/Company/BankAdd.tsx","components/Card/Card.tsx","components/Card/CondensedCard.tsx","components/Card/CardRow.tsx","components/Card/index.js","context/Bank/context.ts","context/Bank/fragments.ts","context/Bank/queries.ts","context/Bank/provider.tsx","context/Bank/index.tsx","context/Iban/queries.ts","context/Iban/context.ts","context/Iban/hoc.tsx","context/Iban/provider.tsx","context/Iban/index.tsx","context/Iban/types.ts","components/Form/ControlIban.tsx"],"names":["BankAdd","props","_this","Object","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__","this","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_10__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_11__","call","state","bank_name","undefined","bic","submit","_ref","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default","a","mark","_callee2","createOrUpdate","e","wrap","_context2","prev","next","preventDefault","form","validateFields","_ref2","_callee","err","values","match","id","bank","_context","params","isIban","iban","setFields","errors","Error","intl","formatMessage","value","abrupt","label","sent","mandates","length","history","push","concat","stop","_x3","_x4","apply","arguments","_x","_x2","close","ibanUpdate","setState","name","_this2","_this$props","user","_this$state","me","data","currentCompany","react__WEBPACK_IMPORTED_MODULE_23__","components_Layout__WEBPACK_IMPORTED_MODULE_18__","antd_es_row__WEBPACK_IMPORTED_MODULE_5__","type","components_Typo__WEBPACK_IMPORTED_MODULE_19__","icon","IconValue","Wallet","title","description","context_Bank__WEBPACK_IMPORTED_MODULE_20__","_ref3","current","bankAccount","currentBic","currentBankName","components_Card__WEBPACK_IMPORTED_MODULE_15__","onClose","primary","center","css","primaryColor","uppercase","react_intl__WEBPACK_IMPORTED_MODULE_25__","antd_es_form__WEBPACK_IMPORTED_MODULE_1__","className","onSubmit","bind","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_3__","span","components_Form__WEBPACK_IMPORTED_MODULE_16__","defaultValue","rules","message","required","context_Iban__WEBPACK_IMPORTED_MODULE_21__","siren","components_Form_ControlIban__WEBPACK_IMPORTED_MODULE_17__","onChange","disabled","justify","components_Button__WEBPACK_IMPORTED_MODULE_14__","BtnType","Primary","React","compose","injectIntl","User","create","Default","onRemove","stopPropagation","avatar","children","editable","onEdit","removable","shadow","titleAlign","rest","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_12__","antd_es_card__WEBPACK_IMPORTED_MODULE_1__","assign","onClick","components_Assets__WEBPACK_IMPORTED_MODULE_10__","Cross","Pencil","Trash","antd_es_avatar__WEBPACK_IMPORTED_MODULE_3__","components_Assets__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","components_Skeleton__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react_intl__WEBPACK_IMPORTED_MODULE_3__","_Card__WEBPACK_IMPORTED_MODULE_4__","CondensedCard","style","loading","color","Bloc","Boolean","rows","renderRow","react__WEBPACK_IMPORTED_MODULE_9__","antd_es_row__WEBPACK_IMPORTED_MODULE_1__","map","row","i","key","_Card__WEBPACK_IMPORTED_MODULE_1__","d","__webpack_exports__","_CondensedCard__WEBPACK_IMPORTED_MODULE_2__","_CardRow__WEBPACK_IMPORTED_MODULE_3__","bankAccounts","changeDefaultBankAccount","_changeDefaultBankAccount","asyncToGenerator","regenerator_default","createMandate","_createMandate","_createOrUpdate","_callee3","_context3","generateCode","_generateCode","_callee4","_context4","removeBankAccount","_removeBankAccount","_callee5","_context5","removeMandate","_removeMandate","_callee6","_context6","sign","_sign","_callee7","_context7","Provider","Consumer","mandate","Bank_fragments","fragment","gql","_templateObject","Iban","query","Companies","standalone","_templateObject2","queries_templateObject","fragments","createOrUpdateBankAccount","queries_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","generateCodeMandate","_templateObject7","_templateObject8","signedMandate","_templateObject9","_templateObject10","PartnersContextProvider","result","variables","errorOrSuccess","alert","parseError","t0","bankAccountId","inputBankAccount","update","cache","cached","readQuery","writeQuery","objectSpread","toConsumableArray","total","input","mandateId","_x5","_x6","_x7","code","_x8","_x9","dataBankAccounts","dataBankAccount","react","withApollo","Alert","graphql","skip","list","options","provider","checkIban","ibans","withIban","Component","_React$Component","WithIban","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","dataIbans","fetchPolicy","hoc","IbanStatus","ControlIban","ibanStatus","ibanStatusError","isNew","onChangeIbanValue","client","status","PASSED","FAILED","onChangeIban","option","_ref4","node","target","currentTarget","keyUp","handleRenderIban","renderIban","assertThisInitialized","currentValue","newState","newIbans","found","filter","item","unshift","find","ibanStatusIcon","_this$props2","showNew","dropdown","objectWithoutProperties","BLACKLIST","FAKE","Assets","Checkmark","suffix","tag","index_es","Form","onChangeSelect","showSearch","onInputKeyUp","filterOption"],"mappings":"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","file":"static/js/38.07939643.chunk.js","sourcesContent":["import { Col, Form, Row } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IconValue } from 'components/Assets/Icon';\nimport { BtnType, Button } from 'components/Button';\nimport { Card } from 'components/Card';\nimport { Text } from 'components/Form';\nimport ControlIban from 'components/Form/ControlIban';\nimport { Content } from 'components/Layout';\nimport { H3, Heading } from 'components/Typo';\nimport * as BankCtx from 'context/Bank';\nimport { IBankAccount, IInputBankAccount } from 'context/Bank/types';\nimport { ICompany } from 'context/Company/types';\nimport * as Iban from 'context/Iban';\nimport * as User from 'context/User';\nimport { IUser } from 'context/User/types';\nimport * as React from 'react';\nimport { compose } from 'react-apollo';\nimport { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';\nimport { RouteComponentProps } from 'react-router';\nimport history from 'store/history';\nimport { isIban } from 'utils/common';\nimport './Bank.module.less';\n\ninterface IProps\n  extends RouteComponentProps,\n    FormComponentProps,\n    InjectedIntlProps,\n    User.InjectedProps {}\n\ninterface IState {\n  bic?: string;\n  bank_name?: string;\n}\n\nclass BankAdd extends React.PureComponent<IProps, IState> {\n  state = {\n    bank_name: undefined,\n    bic: undefined,\n  };\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  submit = async (\n    createOrUpdate?: (\n      inputBankAccount: IInputBankAccount,\n      id?: string,\n    ) => Promise<IBankAccount | null>,\n    e?: React.FormEvent,\n  ) => {\n    e && e.preventDefault();\n    this.props.form.validateFields(async (err: any, values: any) => {\n      const match: any = this.props.match;\n      const id = match && match.params && match.params.id;\n\n      if (!id && !isIban(values.iban)) {\n        this.props.form.setFields({\n          iban: {\n            errors: [\n              new Error(\n                this.props.intl.formatMessage({\n                  id: 'common.control.iban_error',\n                }),\n              ),\n            ],\n            value: values.iban,\n          },\n        });\n        return;\n      }\n\n      if (!err) {\n        if (createOrUpdate) {\n          let bank: IBankAccount | null;\n          if (id) {\n            bank = await createOrUpdate({ label: values.label }, id);\n          } else {\n            bank = await createOrUpdate({\n              iban: values.iban,\n              label: values.label,\n            });\n          }\n\n          if (\n            (bank && !bank.mandates) ||\n            (bank && bank.mandates.length === 0)\n          ) {\n            history.push(`/company/bank/mandate/add/${bank.id}?bank`);\n          } else {\n            history.push('/company/bank');\n          }\n        }\n      }\n    });\n  };\n\n  close = () => {\n    history.push('/company/bank');\n  };\n\n  ibanUpdate = (iban: any) => {\n    this.setState({\n      bank_name: iban && iban.name,\n      bic: iban && iban.bic,\n    });\n  };\n\n  render() {\n    const { user, intl, form } = this.props;\n    const { bic, bank_name } = this.state;\n    const match: any = this.props.match;\n    const id = match && match.params && match.params.id;\n    const me: IUser = user && user.data && user.data.me;\n    const currentCompany: ICompany = me && me.currentCompany;\n\n    return (\n      <Content>\n        <Row type=\"flex\">\n          <Heading\n            icon={IconValue.Wallet}\n            title={'bank.header.title'}\n            description={'bank.header.description'}\n          />\n        </Row>\n        {currentCompany && (\n          <BankCtx.Provider id={id}>\n            <BankCtx.Consumer>\n              {({ bank }) => {\n                const current =\n                  bank && bank.bankAccount && bank.bankAccount.bankAccount;\n\n                const currentBic =\n                  bic || (current && current.iban && current.iban.bic);\n                const currentBankName =\n                  bank_name || (current && current.iban && current.iban.bank);\n\n                return (\n                  <Card onClose={this.close} primary center={false}>\n                    <H3\n                      css={{\n                        primaryColor: true,\n                        uppercase: true,\n                      }}\n                    >\n                      <FormattedMessage id=\"bank.form.title\" />\n                    </H3>\n                    <Form\n                      className=\"form-bank\"\n                      onSubmit={this.submit.bind(\n                        null,\n                        bank && bank.createOrUpdate,\n                      )}\n                    >\n                      <Row gutter={28}>\n                        <Col span={8}>\n                          <Text\n                            id=\"label\"\n                            defaultValue={current && current.label}\n                            label={<FormattedMessage id=\"bank.form.label\" />}\n                            rules={[\n                              {\n                                message: intl.formatMessage({\n                                  id: 'bank.form.label_error',\n                                }),\n                                required: true,\n                              },\n                            ]}\n                            form={form}\n                          />\n                        </Col>\n                        <Col span={8}>\n                          <Iban.Provider siren={currentCompany.siren}>\n                            <ControlIban\n                              onChange={this.ibanUpdate}\n                              disabled={id ? true : false}\n                              value={\n                                current && current.iban && current.iban.iban\n                              }\n                              siren={currentCompany.siren}\n                              form={form}\n                            />\n                          </Iban.Provider>\n                        </Col>\n                      </Row>\n                      <Row gutter={28}>\n                        <Col span={8}>\n                          <Text\n                            id=\"bic\"\n                            defaultValue={currentBic}\n                            disabled\n                            label={<FormattedMessage id=\"bank.form.bic\" />}\n                            form={form}\n                          />\n                        </Col>\n                        <Col span={8}>\n                          <Text\n                            id=\"bankName\"\n                            disabled\n                            defaultValue={currentBankName}\n                            label={\n                              <FormattedMessage id=\"bank.form.bank_name\" />\n                            }\n                            form={form}\n                          />\n                        </Col>\n                      </Row>\n                      <Row type=\"flex\" justify=\"end\">\n                        <Button submit type={BtnType.Primary}>\n                          {id ? (\n                            <FormattedMessage id=\"bank.form.update\" />\n                          ) : (\n                            <FormattedMessage id=\"bank.form.submit\" />\n                          )}\n                        </Button>\n                      </Row>\n                    </Form>\n                  </Card>\n                );\n              }}\n            </BankCtx.Consumer>\n          </BankCtx.Provider>\n        )}\n      </Content>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  User.hoc(),\n  Form.create({}),\n)(BankAdd);\n","import { Avatar, Card } from 'antd';\nimport { CardProps } from 'antd/lib/card';\nimport { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport * as React from 'react';\n\n/**\n * @props\n */\ninterface IProps extends CardProps {\n  center?: boolean;\n  avatar?: React.ReactNode | string;\n  onClose?: () => void;\n  editable?: boolean;\n  onEdit?: () => void;\n  removable?: boolean;\n  onRemove?: () => void;\n  shadow?: boolean;\n  primary?: boolean;\n  title?: React.ReactNode;\n  titleAlign?: 'left' | 'right';\n}\n\n/**\n * @state\n *\n * error\n */\ninterface IState {}\n\n/**\n * @class Submit\n *\n */\nclass Default extends React.PureComponent<IProps, IState> {\n  onRemove = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { onRemove } = this.props;\n    onRemove && onRemove();\n  };\n\n  render() {\n    const {\n      avatar,\n      center,\n      children,\n      className,\n      onClose,\n      editable,\n      onEdit,\n      removable,\n      shadow,\n      title,\n      primary,\n      titleAlign,\n      ...rest\n    } = this.props;\n\n    return (\n      <Card\n        className={`card-item${center ? ' center ' : ''}${\n          shadow ? ' shadow ' : ''\n        }${primary ? ' primary ' : ''}${className ? ` ${className}` : ''}`}\n        {...rest}\n      >\n        {onClose && (\n          <div onClick={onClose} className=\"card-close\">\n            <Icon value={IconValue.Cross} />\n          </div>\n        )}\n        {editable && (\n          <div onClick={onEdit} className=\"card-edit\">\n            <Icon value={IconValue.Pencil} />\n          </div>\n        )}\n        {removable && (\n          <div onClick={this.onRemove} className=\"card-remove\">\n            <Icon value={IconValue.Trash} />\n          </div>\n        )}\n        {avatar && <Avatar className=\"card-avatar\">{avatar}</Avatar>}\n        {title && (\n          <div className={`card-title${titleAlign ? ` ${titleAlign}` : ''}`}>\n            {title}\n          </div>\n        )}\n        <div className=\"card-children\">{children}</div>\n      </Card>\n    );\n  }\n}\n\nexport default Default;\n","import { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport Skeleton from 'components/Skeleton';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Card from './Card';\n\n/**\n * @props\n */\ninterface IProps {\n  center?: boolean;\n  className?: string;\n  title?: React.ReactNode;\n  description?: string;\n  color?: string;\n  icon?: IconValue;\n  loading?: boolean;\n  style?: React.CSSProperties;\n}\n\nconst CondensedCard: React.FunctionComponent<IProps> = ({\n  className,\n  center,\n  title,\n  description,\n  icon,\n  style,\n  loading,\n  color,\n}) => {\n  return (\n    <Card\n      style={style}\n      center={center}\n      className={`condensed-card${className ? ` ${className}` : ''}`}\n      shadow\n    >\n      <div className=\"condensed-card-left\">\n        <Skeleton.Bloc\n          loading={Boolean(loading)}\n          className=\"condensed-card-title\"\n        >\n          {title}\n        </Skeleton.Bloc>\n        {description && (\n          <Skeleton.Bloc\n            loading={Boolean(loading)}\n            className=\"condensed-card-description\"\n          >\n            <FormattedMessage id={description} />\n          </Skeleton.Bloc>\n        )}\n      </div>\n      <div className={`condensed-card-right${color ? ` ${color}` : ''}`}>\n        <Icon value={icon} />\n      </div>\n    </Card>\n  );\n};\n\nexport default CondensedCard;\n","import { Col, Row } from 'antd';\nimport * as React from 'react';\n\n/**\n * @props\n */\ninterface IProps {\n  className?: string;\n  title?: React.ReactNode | string;\n  rows?: React.ReactNode[];\n  renderRow?: (row: React.ReactNode) => React.ReactNode;\n}\n\n/**\n * @state\n *\n * error\n */\ninterface IState {}\n\n/**\n * @class Submit\n *\n */\nclass Default extends React.PureComponent<IProps, IState> {\n  render() {\n    const { className, title, rows, renderRow } = this.props;\n\n    return (\n      <Row className={`${className ? 'className ' : ''}`}>\n        <div className=\"card-row-title\">{title}</div>\n        {rows &&\n          rows.map((row, i) => (\n            <Col className=\"card-row-item\" key={`${i}`}>\n              {renderRow ? renderRow(row) : row}\n            </Col>\n          ))}\n      </Row>\n    );\n  }\n}\n\nexport default Default;\n","import './Styles.module.less';\n\nimport Card from './Card';\nimport CondensedCard from './CondensedCard';\nimport CardRow from './CardRow';\n\nexport {\n  Card,\n  CardRow,\n  CondensedCard\n};\n","import * as React from 'react';\nimport { IBankAccount, IInputBankAccount, IMandate } from './types';\n\ninterface IBanksInterface {\n  bankAccount?: any;\n  bankAccounts?: any;\n  changeDefaultBankAccount: (id: string) => Promise<IBankAccount[] | undefined>;\n  createMandate: (bankAccountId?: string) => Promise<IMandate | null>;\n  createOrUpdate: (\n    inputBankAccount: IInputBankAccount,\n    id?: string,\n  ) => Promise<IBankAccount | null>;\n  generateCode: (mandateId: string) => Promise<boolean | null>;\n  removeBankAccount: (id: string) => Promise<IBankAccount | null>;\n  removeMandate: (id: string) => Promise<IMandate | null>;\n  sign: (mandateId: string, code: string) => Promise<IMandate | null>;\n}\n\nexport interface IBanksContextInterface {\n  bank?: IBanksInterface;\n}\n\nconst { Provider, Consumer } = React.createContext<IBanksContextInterface>({\n  bank: {\n    bankAccount: undefined,\n    bankAccounts: undefined,\n    changeDefaultBankAccount: async () => undefined,\n    createMandate: async () => null,\n    createOrUpdate: async () => null,\n    generateCode: async () => null,\n    removeBankAccount: async () => null,\n    removeMandate: async () => null,\n    sign: async () => null,\n  },\n});\n\nexport { Provider, Consumer };\n","import gql from 'graphql-tag';\n\nimport Companies from '../Company/fragments';\nimport Iban from '../Iban/fragments';\nimport User from '../User/fragments';\n\nconst bankAccount = `\n  id\n  label\n  default\n  enabled\n`;\n\nconst mandate = `\n  id\n  treezorMandateId\n  filePath\n  status\n  rum\n  signatoryIp\n  signaturedAt\n  createdAt\n  updatedAt\n`;\n\nconst bankAccountFragment = gql`\n${Iban.fragment}\n${User.fragment}\n\nfragment bankAccount on BankAccount {\n  ${bankAccount}\n}`;\n\nconst bankAccountQuery = `\n  ...bankAccount\n  company {\n    ${Companies.standalone}\n  }\n  iban {\n    ${Iban.query}\n  }\n  mandates {\n    ${mandate}\n    signatory {\n      ${User.query}\n    }\n  }\n`;\n\nconst mandateFragment = gql`\n${User.fragment}\n\nfragment mandate on Mandate {\n  ${mandate}\n}`;\n\nconst mandateQuery = `\n  ...mandate\n  signatory {\n    ${User.query}\n  }\n`;\n\nexport default {\n  bank: {\n    fragment: bankAccountFragment,\n    query: bankAccountQuery,\n  },\n  mandate: {\n    fragment: mandateFragment,\n    query: mandateQuery,\n  },\n};\n","import gql from 'graphql-tag';\n\nimport fragments from './fragments';\n\nexport const bankAccounts: any = gql`\n  ${fragments.bank.fragment}\n\n  query bankAccounts {\n    bankAccounts {\n      total\n      rows {\n        ${fragments.bank.query}\n      }\n    }\n  }\n`;\n\nexport const createOrUpdateBankAccount: any = gql`\n  ${fragments.bank.fragment}\n\n  mutation createOrUpdateBankAccount($input: BankAccountInput!, $id: ID) {\n    createOrUpdateBankAccount(input: $input, id: $id) {\n      ${fragments.bank.query}\n    }\n  }\n`;\n\nexport const bankAccount: any = gql`\n  ${fragments.bank.fragment}\n\n  query bankAccount($id: ID!) {\n    bankAccount(id: $id) {\n      ${fragments.bank.query}\n    }\n  }\n`;\n\nexport const changeDefaultBankAccount: any = gql`\n  ${fragments.bank.fragment}\n\n  mutation changeDefaultBankAccount($id: ID!) {\n    changeDefaultBankAccount(id: $id) {\n      ${fragments.bank.query}\n    }\n  }\n`;\n\nexport const removeBankAccount: any = gql`\n  ${fragments.bank.fragment}\n\n  mutation removeBankAccount($id: ID!) {\n    removeBankAccount(id: $id) {\n      ${fragments.bank.query}\n    }\n  }\n`;\n\nexport const createMandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  mutation createMandate($bankAccountId: ID!) {\n    createMandate(bankAccountId: $bankAccountId) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n\nexport const mandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  query mandate($id: ID!) {\n    mandate(id: $id) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n\nexport const generateCodeMandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  mutation generateCodeMandate($id: ID!) {\n    generateCodeMandate(id: $id) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n\nexport const signedMandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  mutation signedMandate($id: ID!, $code: String!) {\n    signedMandate(id: $id, code: $code) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n\nexport const removeMandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  mutation removeMandate($id: ID!) {\n    removeMandate(id: $id) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n","import { ApolloClient } from 'apollo-client';\nimport * as Alert from 'context/Alert';\nimport * as User from 'context/User';\nimport * as React from 'react';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport { errorOrSuccess, parseError } from 'utils';\nimport { IBanksContextInterface, Provider } from './context';\nimport {\n  bankAccount,\n  bankAccounts,\n  changeDefaultBankAccount,\n  createMandate,\n  createOrUpdateBankAccount,\n  generateCodeMandate,\n  removeBankAccount,\n  removeMandate,\n  signedMandate,\n} from './queries';\nimport { IBankAccount, IInputBankAccount, IMandate } from './types';\n\ninterface IState extends IBanksContextInterface {}\n\ninterface IProps extends Alert.InjectedProps, User.InjectedProps {\n  list: boolean;\n  createOrUpdateBankAccount: any;\n  createMandate: any;\n  changeDefaultBankAccount: any;\n  generateCodeMandate: any;\n  signedMandate: any;\n  removeBankAccount: any;\n  removeMandate: any;\n  dataBankAccounts: any;\n  dataBankAccount: any;\n  children: React.ReactNode;\n  client: ApolloClient<any>;\n}\n\nclass PartnersContextProvider extends React.PureComponent<IProps, IState> {\n  state = {\n    bank: {\n      bankAccount: undefined,\n      bankAccounts: undefined,\n      changeDefaultBankAccount: async (\n        id: string,\n      ): Promise<IBankAccount[] | undefined> => {\n        try {\n          const result = await this.props.changeDefaultBankAccount({\n            variables: { id },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.form.success_change_default',\n          ]);\n          return result.data && result.data.changeDefaultBankAccount;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n      },\n      createMandate: async (bankAccountId?: string) => {\n        try {\n          const result = await this.props.createMandate({\n            variables: { bankAccountId },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.mandate.success_create',\n          ]);\n          return result.data && result.data.createMandate;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n      },\n      createOrUpdate: async (\n        inputBankAccount: IInputBankAccount,\n        id?: string,\n      ) => {\n        try {\n          const result = await this.props.createOrUpdateBankAccount({\n            update: (cache: any, { data }: any) => {\n              if (!id) {\n                const cached = cache.readQuery({\n                  query: bankAccounts,\n                });\n\n                cache.writeQuery({\n                  data: {\n                    bankAccounts: {\n                      ...(cached ? cached.bankAccounts : {}),\n                      rows: [data.createOrUpdateBankAccount].concat(\n                        ...(cached && cached.bankAccounts\n                          ? cached.bankAccounts.rows\n                          : []),\n                      ),\n                      total:\n                        cached && cached.bankAccounts\n                          ? cached.bankAccounts.total + 1\n                          : 1,\n                    },\n                  },\n                  query: bankAccounts,\n                });\n              }\n            },\n            variables: { input: inputBankAccount, id },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            id ? 'bank.form.success_updated' : 'bank.form.success_add',\n          ]);\n          return result.data && result.data.createOrUpdateBankAccount;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n      },\n      generateCode: async (mandateId: string): Promise<boolean | null> => {\n        try {\n          const result = await this.props.generateCodeMandate({\n            variables: { id: mandateId },\n          });\n          return !result.errors;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n      removeBankAccount: async (id: string): Promise<IBankAccount | null> => {\n        try {\n          const result = await this.props.removeBankAccount({\n            variables: { id },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.row.success_remove',\n          ]);\n          return result.data && result.data.removeBankAccount;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n      removeMandate: async (id: string): Promise<IMandate | null> => {\n        try {\n          const result = await this.props.removeMandate({\n            variables: { id },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.mandate.success_remove',\n          ]);\n          return result.data && result.data.removeMandate;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n      sign: async (\n        mandateId: string,\n        code: string,\n      ): Promise<IMandate | null> => {\n        try {\n          const result = await this.props.signedMandate({\n            variables: { id: mandateId, code },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.mandate.success_sign',\n          ]);\n          return result.data && result.data.signedMandate;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n    },\n  };\n\n  render() {\n    const { dataBankAccounts, dataBankAccount } = this.props;\n\n    return (\n      <Provider\n        value={{\n          bank: {\n            ...this.state.bank,\n            bankAccount: dataBankAccount,\n            bankAccounts: dataBankAccounts,\n          },\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nconst bankAccountsHandler = {\n  props: (props: any) => {\n    return {\n      dataBankAccounts: props.data,\n    };\n  },\n  skip: (props: any) => !props.list,\n};\n\nconst bankAccountHandler = {\n  options: (props: any) => {\n    return {\n      variables: {\n        id: props.id,\n      },\n    };\n  },\n  props: (props: any) => {\n    return {\n      dataBankAccount: props.data,\n    };\n  },\n  skip: (props: any) => !props.id,\n};\n\nexport default compose(\n  withApollo,\n  Alert.hoc(),\n  graphql(createOrUpdateBankAccount, { name: 'createOrUpdateBankAccount' }),\n  graphql(createMandate, { name: 'createMandate' }),\n  graphql(changeDefaultBankAccount, { name: 'changeDefaultBankAccount' }),\n  graphql(generateCodeMandate, { name: 'generateCodeMandate' }),\n  graphql(signedMandate, { name: 'signedMandate' }),\n  graphql(removeBankAccount, { name: 'removeBankAccount' }),\n  graphql(removeMandate, { name: 'removeMandate' }),\n  graphql(bankAccounts, bankAccountsHandler),\n  graphql(bankAccount, bankAccountHandler),\n)(PartnersContextProvider);\n","import { Consumer, IBanksContextInterface } from './context';\nimport hoc from './hoc';\nimport Provider from './provider';\n\nexport interface InjectedProps extends IBanksContextInterface {}\n\nexport { Provider, Consumer, hoc };\n","import gql from 'graphql-tag';\n\nimport fragments from './fragments';\n\nexport const checkIban: any = gql`\n  query checkIban($iban: String!) {\n    checkIban(iban: $iban) {\n      iban\n      bic\n      status\n      name\n    }\n  }\n`;\n\nexport const ibans: any = gql`\n  ${fragments.fragment}\n\n  query ibans($siren: String!) {\n    ibans(siren: $siren) {\n      total\n      rows {\n        ${fragments.query}\n      }\n    }\n  }\n`;\n","import * as React from 'react';\nimport { IIbans } from './types';\n\ninterface IIbanInterface {\n  ibans?: IIbans;\n}\n\nexport interface IIbanContextInterface {\n  iban?: IIbanInterface;\n}\n\nconst { Provider, Consumer } = React.createContext<IIbanContextInterface>({\n  iban: {\n    ibans: undefined,\n  },\n});\n\nexport { Provider, Consumer };\n","import * as React from 'react';\nimport { wrapDisplayName } from 'recompose';\nimport { Consumer, IIbanContextInterface } from './context';\n\nconst withIban = () => <OriginalProps extends {}>(\n  Component: React.ComponentType<OriginalProps & IIbanContextInterface>,\n) => {\n  type ResultProps = OriginalProps & IIbanContextInterface;\n\n  class WithIban extends React.Component<ResultProps> {\n    render() {\n      return (\n        <Consumer>{props => <Component {...this.props} {...props} />}</Consumer>\n      );\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    (WithIban as any).displayName = wrapDisplayName(Component, 'withIban');\n  }\n\n  return WithIban;\n};\n\nexport default withIban;\n","import { ApolloClient } from 'apollo-client';\nimport * as Alert from 'context/Alert';\nimport * as User from 'context/User';\nimport * as React from 'react';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport { IIbanContextInterface, Provider } from './context';\nimport { ibans } from './queries';\nimport { IIban } from './types';\n\ninterface IState extends IIbanContextInterface {\n  ibans?: IIban[];\n}\n\ninterface IProps extends Alert.InjectedProps, User.InjectedProps {\n  ibans: any;\n  siren: string;\n  dataIbans: any;\n  children: React.ReactNode;\n  client: ApolloClient<any>;\n}\n\nclass PartnersContextProvider extends React.PureComponent<IProps, IState> {\n  state = {\n    iban: {\n      ibans: undefined,\n    },\n  };\n\n  render() {\n    const { dataIbans } = this.props;\n\n    return (\n      <Provider\n        value={{\n          iban: {\n            ibans: dataIbans && dataIbans.ibans,\n          },\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nconst ibansHandler = {\n  options: (props: any) => {\n    return {\n      fetchPolicy: 'network-only',\n      variables: {\n        siren: props.siren,\n      },\n    };\n  },\n  props: (props: any) => {\n    return {\n      dataIbans: props.data,\n    };\n  },\n  skip: (props: any) => !props.siren,\n};\n\nexport default compose(\n  withApollo,\n  Alert.hoc(),\n  graphql(ibans, ibansHandler),\n)(PartnersContextProvider);\n","import { Consumer, IIbanContextInterface } from './context';\nimport hoc from './hoc';\nimport Provider from './provider';\n\nexport interface InjectedProps extends IIbanContextInterface {}\n\nexport { Provider, Consumer, hoc };\n","import { ICompany } from 'context/Company/types';\nimport { IUser } from 'context/User/types';\n\nexport enum IbanStatus {\n  PASSED = 'passed',\n  FAILED = 'failed',\n  BLACKLIST = 'blacklist',\n  FAKE = 'fake',\n}\n\nexport interface IIban {\n  id: string;\n  iban: string;\n  readerCompany: ICompany;\n  treezorBeneficiaryId: number;\n  createdBy: IUser;\n  company: ICompany;\n  result: string;\n  returnCode: number;\n  bic: string;\n  country: string;\n  bankCode: string;\n  bank: string;\n  bankAddress: string;\n  branch: string;\n  branchCode: string;\n  inSclDirectory: string;\n  sct: string;\n  sdd: string;\n  cor1: string;\n  b2b: string;\n  scc: string;\n  jsonIbanBic: JSON;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface IIbans {\n  total: number;\n  rows: IIban[];\n}\n","import { Tag, Tooltip } from 'antd';\nimport ApolloClient from 'apollo-client';\nimport { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport { Option, Select, Text } from 'components/Form';\nimport * as Iban from 'context/Iban';\nimport { checkIban } from 'context/Iban/queries';\nimport { IbanStatus, IIban } from 'context/Iban/types';\nimport * as React from 'react';\nimport { compose, withApollo } from 'react-apollo';\nimport { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';\nimport { isIban } from 'utils/common';\n\ninterface IProps extends Iban.InjectedProps, InjectedIntlProps {\n  id: string;\n  dropdown: boolean;\n  showNew: boolean;\n  client: ApolloClient<any>;\n  form: any;\n  value: string;\n  onChange?: (iban: any) => void;\n}\n\ninterface IState {\n  ibanStatus?: any;\n  ibanStatusError: boolean;\n  isNew: boolean;\n  ibans: string[];\n  value?: string;\n}\n\nclass ControlIban extends React.PureComponent<IProps, IState> {\n  static getDerivedStateFromProps(props: IProps, state: IState) {\n    const { iban } = props;\n    const ibans = iban && iban.ibans && iban.ibans.rows;\n    let currentValue = state.value;\n\n    let newState = null;\n    if (!state.value && props.value) {\n      currentValue = props.value;\n      newState = {\n        value: props.value,\n      };\n    }\n\n    const newIbans: string[] = [];\n    let found = false;\n    if (ibans) {\n      ibans.filter(item => {\n        if (item.iban === currentValue) {\n          found = true;\n        }\n        if (props.value === item.iban) {\n          return false;\n        }\n        if (currentValue === item.iban) {\n          return false;\n        }\n        newIbans.push(item.iban);\n      });\n    }\n    if (props.value && props.value !== '' && currentValue !== props.value) {\n      newIbans.unshift(props.value);\n    }\n    if (currentValue && currentValue !== '') {\n      newIbans.unshift(currentValue);\n    }\n\n    newState = {\n      ...newState,\n      ibans: newIbans,\n      isNew: !found,\n    };\n\n    return newState;\n  }\n  state = {\n    ibanStatus: undefined,\n    ibanStatusError: false,\n    ibans: [],\n    isNew: false,\n    value: undefined,\n  };\n\n  handleRenderIban: (row: any, i: number) => React.ReactNode;\n\n  constructor(props: any) {\n    super(props);\n\n    this.handleRenderIban = this.renderIban.bind(this);\n  }\n\n  renderIban(row: any, i: number) {\n    return <div>{row.iban}</div>;\n  }\n\n  onChangeIbanValue = async (iban: string, id?: string) => {\n    const test = isIban(iban);\n    let ibanStatus: any;\n\n    if (test) {\n      if (!id) {\n        const { data } = await this.props.client.query({\n          query: checkIban,\n          variables: { iban },\n        });\n        ibanStatus = data.checkIban;\n      } else {\n        ibanStatus = {\n          status: IbanStatus.PASSED,\n        };\n      }\n    } else if (iban !== '') {\n      ibanStatus = {\n        status: IbanStatus.FAILED,\n      };\n    }\n\n    this.props.onChange && this.props.onChange(ibanStatus);\n\n    this.setState({\n      ibanStatus,\n      value: iban,\n    });\n  };\n\n  onChangeIban = async (\n    value: any,\n    option: React.ReactElement<any> | Array<React.ReactElement<any>>,\n  ) => {\n    await this.onChangeIbanValue(value);\n  };\n\n  onChange = async (node: React.ChangeEvent<Element>) => {\n    const target: any = node.currentTarget;\n    await this.onChangeIbanValue(target.value);\n  };\n\n  getIban(ibans: IIban[], value: string) {\n    return ibans && ibans.find(iban => value === iban.iban);\n  }\n\n  async componentDidMount() {\n    const { value, iban } = this.props;\n\n    if (value && value !== '') {\n      const ibans = iban && iban.ibans && iban.ibans.rows;\n      const found =\n        ibans && ibans.find((item: IIban, i) => value === item.iban);\n\n      if (!found) {\n        await this.onChangeIbanValue(value);\n      }\n    }\n  }\n\n  keyUp = (value: string) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { form, intl, showNew, dropdown, value, ...rest } = this.props;\n    const { isNew, ibans } = this.state;\n    const ibanStatus: any = this.state.ibanStatus;\n\n    let ibanStatusIcon: React.ReactNode;\n\n    if (typeof ibanStatus !== 'undefined' && ibanStatus && ibanStatus.status) {\n      switch (ibanStatus.status) {\n        case IbanStatus.BLACKLIST:\n          ibanStatusIcon = (\n            <div className=\"iban-error\">\n              <Icon value={IconValue.Cross} />\n            </div>\n          );\n          break;\n        case IbanStatus.FAILED:\n          ibanStatusIcon = (\n            <div className=\"iban-error\">\n              <Icon value={IconValue.Cross} />\n            </div>\n          );\n          break;\n        case IbanStatus.FAKE:\n          ibanStatusIcon = (\n            <div className=\"iban-error\">\n              <Icon value={IconValue.Cross} />\n            </div>\n          );\n          break;\n        case IbanStatus.PASSED:\n          ibanStatusIcon = (\n            <div className=\"iban-success\">\n              <Icon value={IconValue.Checkmark} />\n            </div>\n          );\n          break;\n      }\n    }\n\n    const suffix = (\n      <>\n        {showNew &&\n          isNew &&\n          ibanStatus &&\n          ibanStatus.status === IbanStatus.PASSED && (\n            <Tag>{<FormattedMessage id=\"common.control.iban_new\" />}</Tag>\n          )}\n        {ibanStatusIcon}\n      </>\n    );\n\n    return dropdown ? (\n      <Select\n        {...rest}\n        suffix={suffix}\n        onChangeSelect={this.onChangeIban}\n        defaultValue={value}\n        showSearch\n        onInputKeyUp={this.keyUp}\n        form={form}\n        filterOption={false}\n        label={<FormattedMessage id=\"common.control.iban\" />}\n        id={'iban'}\n        rules={[\n          {\n            message: intl.formatMessage({\n              id: 'common.control.iban_error',\n            }),\n            required: true,\n          },\n        ]}\n        options={\n          ibans\n            ? ibans.map((item: string, i: number) => {\n                return (\n                  item &&\n                  item !== '' && (\n                    <Option value={item} key={item}>\n                      {item}\n                    </Option>\n                  )\n                );\n              })\n            : []\n        }\n      />\n    ) : (\n      <Text\n        {...rest}\n        suffix={suffix}\n        onChange={this.onChange}\n        defaultValue={value}\n        showSearch\n        onInputKeyUp={this.keyUp}\n        id=\"iban\"\n        label={<FormattedMessage id=\"common.control.iban\" />}\n        rules={[\n          {\n            message: intl.formatMessage({\n              id: 'common.control.iban_error',\n            }),\n            required: true,\n          },\n        ]}\n        form={form}\n      />\n    );\n  }\n}\n\nexport default compose(\n  withApollo,\n  injectIntl,\n  Iban.hoc(),\n)(ControlIban);\n"],"sourceRoot":""}