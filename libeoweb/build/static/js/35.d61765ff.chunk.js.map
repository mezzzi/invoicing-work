{"version":3,"sources":["screens/Company/AccountingExport.tsx","components/Table/TableImport.tsx","components/Table/List.tsx","components/Table/Empty.tsx","components/Table/Common.tsx","components/Table/index.js","components/Loading/Loading.tsx","components/Infinity/index.tsx","context/Accounting/context.ts","context/Accounting/hoc.tsx","context/Accounting/fragments.ts","context/Accounting/queries.ts","context/Accounting/provider.tsx","context/Accounting/index.tsx"],"names":["AccountingExport","props","_this","Object","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__","this","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_8__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__","call","state","handleExport","_ref","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default","a","mark","_callee","accountingExports","refetch","url","wrap","_context","prev","next","sent","window","open","staticAssets","stop","_x","_x2","apply","arguments","onDownload","row","fileLink","more","_ref2","_callee2","fetchMore","total","length","_context2","updateQuery","_ref3","fetchMoreResult","exports","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","rows","concat","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","variables","limit","offset","_x3","_x4","_x5","_this2","intl","react__WEBPACK_IMPORTED_MODULE_18__","context_Accounting__WEBPACK_IMPORTED_MODULE_17__","export","_ref4","accounting","components_Infinity__WEBPACK_IMPORTED_MODULE_13__","hasMore","loadMore","bind","components_Layout__WEBPACK_IMPORTED_MODULE_14__","key","antd_es_row__WEBPACK_IMPORTED_MODULE_1__","type","components_Typo__WEBPACK_IMPORTED_MODULE_16__","icon","IconValue","Export","title","description","button","buttonCta","onClick","react_router_dom__WEBPACK_IMPORTED_MODULE_20__","to","components_Assets__WEBPACK_IMPORTED_MODULE_11__","value","Gear","react_intl__WEBPACK_IMPORTED_MODULE_19__","id","components_Table__WEBPACK_IMPORTED_MODULE_15__","className","columns","dataIndex","render","index","createdAt","toPickerDate","format","formatMessage","match","Download","React","injectIntl","TableImport","classCallCheck","possibleConstructorReturn","getPrototypeOf","selectedRowKeys","handleRow","assertThisInitialized","handleHeaderRow","headerRow","handleRowClassName","rowClassName","handlSelectedRowKeysChange","selectedRowKeysChange","record","rowIndex","_this$props","dataSource","onClickRow","event","onClickHeader","invoices","map","invoice","indexOf","push","onSelectRows","setState","status","InvoiceStatus","Scanning","Importing","Imported","selectedId","_this$props2","selectable","empty","react","table","pagination","onRow","rowSelection","onChange","undefined","rowKey","bordered","compose","Upload","PurcharseList","devises","polling","handleRowClick","rowClick","handleLoadInvoices","loadInvoices","handleCtaClick","ctaClick","e","stopPropagation","onCtaClick","currencies","all","current","pageSize","header","width","headers","invoicesLoadings","objectSpread","number","dueDate","name","brandName","ocrSirenFeedback","Balance","balance","walletId","data","color","Change","walletCreditId","ArrowUp","walletDebitId","ArrowDown","Assets","ChevronRight","Button","actions","currency","symbol","badge","toLowerCase","lowerValue","Planned","Paid","children","tag","Btn","btnLoading","ToPay","loading","BtnType","Primary","index_es","Default","Scanned","Link","disabled","Table_TableImport","onChangePage","renderHeaders","defaultProps","Empty","randomImg","Math","round","random","randomText","_this$state","NoData1","NoData2","NoData0","Common","es_row","style","__webpack_require__","d","__webpack_exports__","Table_Common","List","Table_Empty","Loading","fontSize","spin","Infinity","regenerator_default","handleRef","node","scrollRef","addEventListener","offsetHeight","scrollTop","scrollHeight","useWindow","ref","components_Loading_Loading","createOrUpdateAccountingPreferences","_createOrUpdateAccountingPreferences","asyncToGenerator","abrupt","_export2","preferences","Provider","Consumer","withAccounting","Component","_React$Component","WithAccounting","inherits","createClass","assign","accountingExportFragment","gql","_templateObject","accountingExportQuery","Company","standalone","Accounting_fragments","fragment","_templateObject2","query","accountingExport","queries_templateObject","fragments","accountingPreferences","queries_templateObject2","_templateObject3","_templateObject4","PartnersContextProvider","input","results","dataPreferences","t0","errorOrSuccess","alert","parseError","dataExports","withApollo","Alert","graphql","options","fetchPolicy","default","common","types","skip","provider","hoc"],"mappings":"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","file":"static/js/35.d61765ff.chunk.js","sourcesContent":["import { Col, Row } from 'antd';\nimport { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport { BtnType, Button } from 'components/Button';\nimport Infinity from 'components/Infinity';\nimport { Content } from 'components/Layout';\nimport { Table } from 'components/Table';\nimport { Heading, SubHeading } from 'components/Typo';\nimport * as AccountingCtx from 'context/Accounting';\nimport { IAccountingExport } from 'context/Accounting/types';\nimport * as React from 'react';\nimport { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';\nimport { RouteComponentProps } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport { staticAssets, toPickerDate } from 'utils/common';\nimport './AccountingExport.module.less';\n\ninterface IProps extends RouteComponentProps, InjectedIntlProps {}\n\ninterface IState {}\n\nclass AccountingExport extends React.PureComponent<IProps, IState> {\n  state = {};\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  handleExport = async (accountingExports: any, refetch: () => void) => {\n    if (accountingExports) {\n      const url = await accountingExports();\n      if (url) {\n        window.open(staticAssets(url), '_blank');\n        await refetch();\n      }\n    }\n  };\n\n  onDownload = (row: IAccountingExport) => {\n    if (row.fileLink) {\n      window.open(staticAssets(row.fileLink), '_blank');\n    }\n  };\n\n  more = async (fetchMore: any, total: number, length: number) => {\n    if (fetchMore) {\n      await fetchMore({\n        updateQuery: (prev: any, { fetchMoreResult }: any) => {\n          if (!fetchMoreResult.exports) {\n            return prev;\n          }\n\n          return {\n            ...prev,\n            exports: {\n              ...prev.exports,\n              rows: [...prev.exports.rows, ...fetchMoreResult.exports.rows],\n            },\n          };\n        },\n        variables: {\n          limit: 10,\n          offset: length || 0,\n        },\n      });\n    }\n  };\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <AccountingCtx.Provider export limit={16} offset={0}>\n        <AccountingCtx.Consumer>\n          {({ accounting }) => {\n            const accountingExports =\n              (accounting &&\n                accounting.accountingExports &&\n                accounting.accountingExports.exports) ||\n              [];\n\n            const total = accountingExports ? accountingExports.total : 0;\n            const rows = accountingExports ? accountingExports.rows : null;\n\n            return (\n              <Infinity\n                hasMore={rows ? total > rows.length : false}\n                loadMore={this.more.bind(\n                  null,\n                  accounting &&\n                    accounting.accountingExports &&\n                    accounting.accountingExports.fetchMore,\n                  total,\n                  rows ? rows.length : 0,\n                )}\n              >\n                <Content key=\"table-export\">\n                  <Row type=\"flex\">\n                    <Heading\n                      icon={IconValue.Export}\n                      title={'accounting_export.header.title'}\n                      description={'accounting_export.header.description'}\n                      button={'accounting_export.header.button'}\n                      buttonCta={'accounting_export.header.button_cta'}\n                      onClick={this.handleExport.bind(\n                        null,\n                        accounting && accounting.export,\n                        accounting &&\n                          accounting.accountingExports &&\n                          accounting.accountingExports.refetch,\n                      )}\n                    />\n                    <SubHeading title={'accounting_export.subheader.title'}>\n                      <NavLink to=\"/company/accounting/options\">\n                        <Icon value={IconValue.Gear} />\n                        <FormattedMessage id=\"accounting_export.subheader.link\" />\n                      </NavLink>\n                    </SubHeading>\n                    {rows && (\n                      <Table\n                        className=\"table-export\"\n                        rows={rows}\n                        columns={[\n                          {\n                            dataIndex: 'createdAt',\n                            key: 'createdAt',\n                            render: (value: any, row: any, index: any) => {\n                              return (\n                                row.createdAt &&\n                                toPickerDate(row.createdAt).format('DD/MM/YYYY')\n                              );\n                            },\n                            title: intl.formatMessage({\n                              id: 'accounting_export.table.createdAt',\n                            }),\n                          },\n                          {\n                            dataIndex: 'fileLink',\n                            key: 'fileLink',\n                            render: (value: any, row: any, index: any) => {\n                              const match = value.match(/([^\\/]*?)\\.csv/);\n                              return (match && match[1]) || '';\n                            },\n                            title: intl.formatMessage({\n                              id: 'accounting_export.table.fileLink',\n                            }),\n                          },\n                          {\n                            dataIndex: 'csv',\n                            key: 'csv',\n                            render: (value: any, row: any, index: any) => {\n                              return 'CSV';\n                            },\n                            title: intl.formatMessage({\n                              id: 'accounting_export.table.csv',\n                            }),\n                          },\n                          {\n                            className: 'td-pointer',\n                            dataIndex: 'download',\n                            key: 'download',\n                            render: (value: any, row: any, index: any) => {\n                              return (\n                                <div onClick={this.onDownload.bind(null, row)}>\n                                  <Icon value={IconValue.Download} />\n                                </div>\n                              );\n                            },\n                            title: intl.formatMessage({\n                              id: 'accounting_export.table.download',\n                            }),\n                          },\n                        ]}\n                      />\n                    )}\n                  </Row>\n                </Content>\n              </Infinity>\n            );\n          }}\n        </AccountingCtx.Consumer>\n      </AccountingCtx.Provider>\n    );\n  }\n}\n\nexport default injectIntl(AccountingExport);\n","import { Table } from 'antd';\nimport { BtnType, Button } from 'components/Button';\nimport { IInvoice, InvoiceStatus } from 'context/Invoice/types';\nimport * as Upload from 'context/Upload';\nimport * as React from 'react';\nimport { compose } from 'react-apollo';\nimport { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';\nimport { Empty } from '.';\nimport './Table.module.less';\n\ninterface IProps extends InjectedIntlProps, Upload.InjectedProps {\n  empty?: React.ReactNode;\n  dataSource: any;\n  selectable?: boolean;\n  columns: any;\n  selectedId?: string;\n  onSelectRows?: (invoices: IInvoice[]) => void;\n  onClickRow?: (invoice: IInvoice) => void;\n  onClickHeader?: (event: any) => void;\n  onChangePage(current?: number, pageSize?: number): any;\n}\n\ninterface IState {\n  selectedRowKeys: string[];\n}\n\nclass TableImport extends React.PureComponent<IProps, IState> {\n  state = {\n    selectedRowKeys: [],\n  };\n\n  handleRow: (record: any, rowIndex: number) => void;\n  handleHeaderRow: (event: any) => void;\n  handleRowClassName: (record: any, index: number) => string;\n  handlSelectedRowKeysChange: (selectedRowKeys: any) => void;\n\n  constructor(props: any) {\n    super(props);\n\n    this.handleRow = this.row.bind(this);\n    this.handleHeaderRow = this.headerRow.bind(this);\n    this.handleRowClassName = this.rowClassName.bind(this);\n    this.handlSelectedRowKeysChange = this.selectedRowKeysChange.bind(this);\n  }\n\n  row(record: any, rowIndex: number) {\n    const { dataSource, onClickRow } = this.props;\n    return {\n      onClick: () => {\n        onClickRow && onClickRow(dataSource[rowIndex] as IInvoice);\n      },\n    };\n  }\n\n  headerRow(event: any) {\n    this.props.onClickHeader && this.props.onClickHeader(event);\n  }\n\n  selectedRowKeysChange(selectedRowKeys: any) {\n    const invoices: IInvoice[] = [];\n    this.props.dataSource.map((invoice: IInvoice) =>\n      selectedRowKeys.indexOf(invoice.id) > -1 ? invoices.push(invoice) : null,\n    );\n    this.props.onSelectRows && this.props.onSelectRows(invoices);\n    this.setState({ selectedRowKeys });\n  }\n\n  rowClassName(record: any, index: number) {\n    let className = '';\n    switch (record.status) {\n      case InvoiceStatus.Scanning:\n        className = 'tr-invoice-loading';\n        break;\n      case InvoiceStatus.Importing:\n        className = 'tr-invoice-loading';\n        break;\n      case InvoiceStatus.Imported:\n        className = 'tr-invoice-loading';\n        break;\n      default:\n        className = 'tr-invoice';\n        break;\n    }\n\n    if (\n      record.id &&\n      this.props.selectedId &&\n      record.id === this.props.selectedId\n    ) {\n      className = `${className} ant-table-row-selected`;\n    }\n\n    return className;\n  }\n\n  render() {\n    const { dataSource, selectable, columns, intl, empty } = this.props;\n    const { selectedRowKeys } = this.state;\n\n    return (\n      <div className=\"table-invoices\">\n        {dataSource && dataSource.length > 0 ? (\n          <Table\n            pagination={false}\n            onRow={this.handleRow}\n            rowSelection={\n              selectable\n                ? {\n                    onChange: this.handlSelectedRowKeysChange,\n                    selectedRowKeys,\n                  }\n                : undefined\n            }\n            rowKey=\"id\"\n            bordered={false}\n            rowClassName={this.handleRowClassName}\n            dataSource={dataSource}\n            columns={columns}\n          />\n        ) : (\n          empty\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  Upload.hoc(),\n)(TableImport);\n","import { Badge, Col, Row, Tag } from 'antd';\nimport { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport { BtnType, Button, InvoiceActions } from 'components/Button';\nimport { Loading } from 'components/Loading';\nimport { TableImport } from 'components/Table';\nimport * as BalanceCtx from 'context/Balance';\nimport { IInvoice, InvoiceStatus } from 'context/Invoice/types';\nimport { IInvoices } from 'context/Invoices/types';\nimport { ITransactions } from 'context/Transactions/types';\nimport * as React from 'react';\nimport { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { toPickerDate } from 'utils/common';\nimport currencies from 'utils/currencies';\nimport './List.module.less';\n\ninterface IProps extends InjectedIntlProps {\n  invoices?: IInvoices | ITransactions;\n  empty?: React.ReactNode;\n  selectable?: boolean;\n  className?: string;\n  headers: any[];\n  loading?: boolean;\n  invoicesLoadings?: string[];\n  onClickRow?: (invoice: IInvoice) => void;\n  onCtaClick?: (invoice: IInvoice) => void;\n  onSelectRows?: (invoices: IInvoice[]) => void;\n  selectedId?: string;\n}\n\ninterface IState {\n  devises?: any;\n  limit?: number;\n  offset?: number;\n  polling: boolean;\n}\n\nclass PurcharseList extends React.PureComponent<IProps, IState> {\n  static defaultProps = {\n    selectable: false,\n  };\n\n  state = {\n    devises: undefined,\n    limit: 8,\n    offset: 0,\n    polling: false,\n  };\n\n  handleRowClick: (invoice: IInvoice) => void;\n  handleCtaClick: (invoice: IInvoice, e: React.FormEvent<Element>) => void;\n  handleLoadInvoices: (current?: number, pageSize?: number) => void;\n  constructor(props: any) {\n    super(props);\n\n    this.handleRowClick = this.rowClick.bind(this);\n    this.handleLoadInvoices = this.loadInvoices.bind(this);\n    this.handleCtaClick = this.ctaClick.bind(this);\n  }\n\n  ctaClick(invoice: IInvoice, e: React.FormEvent<Element>) {\n    e.stopPropagation();\n    this.props.onCtaClick && this.props.onCtaClick(invoice);\n  }\n\n  rowClick(invoice: IInvoice) {\n    this.props.onClickRow && this.props.onClickRow(invoice);\n  }\n\n  async componentDidMount() {\n    const devises = await currencies.all();\n    this.setState({ devises });\n  }\n\n  loadInvoices(current?: number, pageSize?: number) {\n    const offset =\n      pageSize && current ? current * pageSize - pageSize : undefined;\n\n    this.setState({\n      limit: pageSize,\n      offset,\n    });\n  }\n\n  header(header: any) {\n    const { intl } = this.props;\n    return {\n      className: `td-${header.key}`,\n      dataIndex: header.key,\n      key: header.key,\n      title:\n        header.title !== undefined\n          ? header.title\n          : intl.formatMessage({\n              id: `purchase.table.${header.key}`,\n            }),\n      width: header.width,\n    };\n  }\n\n  renderHeaders(): any {\n    const { intl, headers, invoicesLoadings } = this.props;\n\n    return (\n      headers &&\n      headers.map(header => {\n        switch (header.key) {\n          case 'concatened':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                const contatenedValue = `${\n                  row.number ? `${row.number}${row.dueDate ? ' / ' : ''}` : ''\n                }${\n                  row.dueDate\n                    ? toPickerDate(row.dueDate).format('DD/MM/YYYY')\n                    : ''\n                }`;\n                return contatenedValue || '';\n              },\n            };\n          case 'companyEmitter':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                if (value && (value.name || value.brandName)) {\n                  return value.name || value.brandName;\n                } else if (row.ocrSirenFeedback && row.ocrSirenFeedback) {\n                  return (\n                    row.ocrSirenFeedback.name || row.ocrSirenFeedback.brandName\n                  );\n                }\n              },\n            };\n          case 'transactionType':\n            return {\n              ...this.header({\n                ...header,\n                title: null,\n                width: 50,\n              }),\n              render: (value: any, row: any, index: any) => {\n                return (\n                  <BalanceCtx.Consumer>\n                    {({ balance }) => {\n                      const walletId =\n                        balance &&\n                        balance.data.balance &&\n                        balance.data.balance.walletId;\n                      let color = 'table-color';\n                      let icon = IconValue.Change;\n                      if (walletId === row.walletCreditId) {\n                        color = 'table-color-payin';\n                        icon = IconValue.ArrowUp;\n                      } else if (walletId === row.walletDebitId) {\n                        color = 'table-color-payout';\n                        icon = IconValue.ArrowDown;\n                      }\n                      return <Icon className={color} value={icon} />;\n                    }}\n                  </BalanceCtx.Consumer>\n                );\n              },\n            };\n          case 'chevron':\n            return {\n              ...this.header({\n                ...header,\n                title: null,\n              }),\n              render: (value: any, row: any, index: any) => {\n                return <Icon value={IconValue.ChevronRight} />;\n              },\n            };\n          case 'actions':\n            return {\n              ...this.header({\n                ...header,\n                title: null,\n                width: 20,\n              }),\n              render: (value: any, row: any, index: any) => {\n                return (\n                  <InvoiceActions\n                    actions={header.actions}\n                    invoice={row as IInvoice}\n                  />\n                );\n              },\n            };\n          case 'companyReceiver':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                if (value && (value.name || value.brandName)) {\n                  return value.name || value.brandName;\n                }\n                return '';\n              },\n            };\n          case 'importAt':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                return value && toPickerDate(value).format('DD/MM/YYYY');\n              },\n            };\n          case 'createdDate':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                return value && toPickerDate(value).format('DD/MM/YYYY');\n              },\n            };\n          case 'dueDate':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                return value && toPickerDate(value).format('DD/MM/YYYY');\n              },\n            };\n          case 'totalWoT':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                const devises: any = this.state.devises;\n                const currency =\n                  devises &&\n                  devises[row.currency] &&\n                  devises[row.currency].symbol;\n                return value && `${value} ${currency}`;\n              },\n            };\n          case 'total':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                const devises: any = this.state.devises;\n                const currency =\n                  devises &&\n                  devises[row.currency] &&\n                  devises[row.currency].symbol;\n                return value && `${value} ${currency}`;\n              },\n            };\n          case 'amount':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                const devises: any = this.state.devises;\n                const currency =\n                  devises &&\n                  devises[row.currency] &&\n                  devises[row.currency].symbol;\n\n                return (\n                  <BalanceCtx.Consumer>\n                    {({ balance }) => {\n                      const walletId = balance && balance.data.balance.walletId;\n                      let color;\n                      if (walletId === row.walletCreditId) {\n                        color = 'payin';\n                      } else if (walletId === row.walletDebitId) {\n                        color = 'payout';\n                      }\n                      return (\n                        <span className={`table-color-${color}`}>\n                          {value && `${value} ${currency}`}\n                        </span>\n                      );\n                    }}\n                  </BalanceCtx.Consumer>\n                );\n              },\n            };\n          case 'walletDebitId':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                return (\n                  <BalanceCtx.Consumer>\n                    {({ balance }) => {\n                      const walletId = balance && balance.data.balance.walletId;\n                      if (walletId === value) {\n                        return intl.formatMessage({\n                          id: `balance.table.my_libeo_account`,\n                        });\n                      } else {\n                        return value;\n                      }\n                    }}\n                  </BalanceCtx.Consumer>\n                );\n              },\n            };\n          case 'walletCreditId':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                return (\n                  <BalanceCtx.Consumer>\n                    {({ balance }) => {\n                      const walletId = balance && balance.data.balance.walletId;\n                      if (walletId === value) {\n                        return intl.formatMessage({\n                          id: `balance.table.my_libeo_account`,\n                        });\n                      } else {\n                        return value;\n                      }\n                    }}\n                  </BalanceCtx.Consumer>\n                );\n              },\n            };\n          case 'error':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                return (\n                  <Badge\n                    status={value ? 'error' : 'success'}\n                    className={`status-${row.status.toLowerCase()}`}\n                  />\n                );\n              },\n            };\n          case 'status':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                const lowerValue = value.toLowerCase();\n                let color: string = '';\n                if (value === InvoiceStatus.Planned) {\n                  color = 'disabled';\n                }\n                if (value === InvoiceStatus.Paid) {\n                  color = 'success';\n                }\n                return {\n                  children: (\n                    <Tag className={`ant-tag-${color}`}>\n                      {intl.formatMessage({\n                        id: `purchase.table.status_${lowerValue}`,\n                      })}\n                    </Tag>\n                  ),\n                };\n              },\n            };\n          case 'cta':\n            return {\n              ...this.header(header),\n              render: (value: any, row: any, index: any) => {\n                let Btn;\n                const btnLoading =\n                  invoicesLoadings && invoicesLoadings.indexOf(row.id) > -1;\n\n                switch (row.status) {\n                  case InvoiceStatus.ToPay:\n                    Btn = (\n                      <Button\n                        loading={btnLoading}\n                        onClick={this.handleCtaClick.bind(null, row)}\n                        type={BtnType.Primary}\n                        className=\"btn-invoice-to-pay\"\n                      >\n                        <FormattedMessage id=\"invoice.status.to_pay\" />\n                      </Button>\n                    );\n                    break;\n                  case InvoiceStatus.Planned:\n                    Btn = (\n                      <Button\n                        loading={btnLoading}\n                        onClick={this.handleCtaClick.bind(null, row)}\n                        type={BtnType.Default}\n                        className=\"btn-invoice-planned\"\n                      >\n                        <FormattedMessage id=\"invoice.status.planned\" />\n                      </Button>\n                    );\n                    break;\n                  case InvoiceStatus.Scanned:\n                    Btn = (\n                      <Link to={`/invoice/draft/${row.id}`}>\n                        <Button\n                          loading={btnLoading}\n                          type={BtnType.Primary}\n                          className=\"btn-invoice-scanned\"\n                        >\n                          <FormattedMessage id=\"invoice.status.scanned\" />\n                        </Button>\n                      </Link>\n                    );\n                    break;\n                  case InvoiceStatus.Scanning:\n                    Btn = (\n                      <Button disabled loading className=\"btn-invoice-loading\">\n                        <FormattedMessage id=\"invoice.status.scanning\" />\n                      </Button>\n                    );\n                    break;\n                  case InvoiceStatus.Paid:\n                    Btn = null;\n                    break;\n                  default:\n                    Btn = (\n                      <Button disabled loading className=\"btn-invoice-loading\">\n                        <FormattedMessage id=\"invoice.status.upload\" />\n                      </Button>\n                    );\n                    break;\n                }\n                return {\n                  children: Btn,\n                };\n              },\n              title: null,\n            };\n          default:\n            return this.header(header);\n        }\n      })\n    );\n  }\n\n  render() {\n    const {\n      selectable,\n      invoices,\n      onSelectRows,\n      selectedId,\n      empty,\n    } = this.props;\n\n    return invoices && invoices.rows ? (\n      <TableImport\n        empty={empty}\n        selectedId={selectedId}\n        onSelectRows={onSelectRows}\n        selectable={selectable}\n        onClickRow={this.handleRowClick}\n        onChangePage={this.handleLoadInvoices}\n        dataSource={invoices.rows}\n        columns={this.renderHeaders()}\n      />\n    ) : null;\n  }\n}\n\nexport default injectIntl(PurcharseList);\n","import { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\ninterface IProps {\n  children?: React.ReactNode;\n}\n\ninterface IState {\n  randomImg: number;\n  randomText: number;\n}\n\nclass Empty extends React.PureComponent<IProps, IState> {\n  static defaultProps = {};\n\n  state = {\n    randomImg: Math.round(Math.random() * 2),\n    randomText: Math.round(Math.random() * 3),\n  };\n\n  render() {\n    const { children } = this.props;\n    const { randomText, randomImg } = this.state;\n\n    let icon: IconValue;\n    switch (randomImg) {\n      case 1:\n        icon = IconValue.NoData1;\n        break;\n      case 2:\n        icon = IconValue.NoData2;\n        break;\n      default:\n        icon = IconValue.NoData0;\n        break;\n    }\n\n    return (\n      <div className=\"empty-table\">\n        <div className=\"svg-responsive\">\n          <Icon value={icon} />\n        </div>\n        <FormattedMessage id={`purchase.table.no_data_${randomText}`} />\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Empty;\n","import { Row, Table } from 'antd';\nimport { Loading } from 'components/Loading';\nimport { IInvoice } from 'context/Invoice/types';\nimport * as React from 'react';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { Empty } from '.';\n\ninterface IProps extends InjectedIntlProps {\n  rows?: any[];\n  selectable?: boolean;\n  className?: string;\n  columns: any[];\n  hasMore?: boolean;\n  loadMore?: (more: any) => Promise<void>;\n  onClickRow?: (invoice: IInvoice) => void;\n}\n\ninterface IState {\n  limit?: number;\n  offset?: number;\n}\n\nclass Common extends React.PureComponent<IProps, IState> {\n  static defaultProps = {};\n\n  state = {\n    limit: 8,\n    offset: 0,\n  };\n\n  render() {\n    const { className, rows, hasMore, columns, intl } = this.props;\n\n    return (\n      <Row\n        style={{\n          width: '100%',\n        }}\n      >\n        {rows && rows.length > 0 && (\n          <Table\n            key=\"table\"\n            className={className}\n            pagination={false}\n            rowKey=\"id\"\n            bordered={false}\n            dataSource={rows}\n            columns={columns}\n          />\n        )}\n      </Row>\n    );\n  }\n}\n\nexport default injectIntl(Common);\n","import TableImport from './TableImport';\nimport List from './List';\nimport Empty from './Empty';\nimport Common from './Common';\nimport './Common.module.less';\n\nexport {\n  TableImport,\n  Common as Table,\n  List,\n  Empty\n};\n","import { Icon } from 'antd';\nimport * as React from 'react';\n\n/**\n * @props\n */\ninterface IProps {}\ninterface IState {}\n\nclass Loading extends React.PureComponent<IProps, IState> {\n  render() {\n    return (\n      <Icon className=\"loading\" type=\"loading\" style={{ fontSize: 24 }} spin />\n    );\n  }\n}\n\nexport default Loading;\n","import { Loading } from 'components/Loading';\nimport * as React from 'react';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport './Styles.module.less';\n\ninterface IProps extends InjectedIntlProps {\n  className?: string;\n  useWindow?: boolean;\n  hasMore?: boolean;\n  loadMore?: (more: any) => Promise<void>;\n}\n\ninterface IState {\n  loading?: boolean;\n}\n\nclass Infinity extends React.PureComponent<IProps, IState> {\n  static defaultProps = {};\n\n  state = {\n    loading: false,\n  };\n\n  scrollRef: any;\n\n  more = async (more?: number) => {\n    const { hasMore } = this.props;\n\n    if (hasMore) {\n      this.setState({ loading: true });\n      if (this.props.loadMore) {\n        await this.props.loadMore(more);\n      }\n      this.setState({ loading: false });\n    }\n  };\n  handleRef = (node: React.ReactNode) => {\n    if (node) {\n      this.scrollRef = node;\n      this.scrollRef.addEventListener('scroll', (e: any) => {\n        const { loading } = this.state;\n\n        if (\n          !loading &&\n          this.scrollRef &&\n          this.scrollRef.offsetHeight + this.scrollRef.scrollTop >=\n            this.scrollRef.scrollHeight\n        ) {\n          this.more();\n        }\n      });\n    }\n  };\n\n  render() {\n    const { children, hasMore, useWindow } = this.props;\n    const { loading } = this.state;\n\n    return (\n      children && (\n        <div\n          ref={this.handleRef}\n          className={`infinity${useWindow === false ? '' : ' use-window'}`}\n        >\n          {children}\n          {hasMore && loading ? <Loading key=\"loading\" /> : null}\n        </div>\n      )\n    );\n  }\n}\n\nexport default injectIntl(Infinity);\n","import * as React from 'react';\nimport {\n  AccountingPreferenceType,\n  IAccountingPreferenceInput,\n  IAccountingPreferences,\n} from './types';\n\ninterface IAccountingInterface {\n  createOrUpdateAccountingPreferences: (\n    inputAddress: IAccountingPreferenceInput[],\n    type: AccountingPreferenceType,\n  ) => Promise<IAccountingPreferences | null>;\n  export: () => Promise<string | void>;\n  preferences?: IAccountingPreferences;\n  accountingExports?: any;\n}\n\nexport interface IAccountingContextInterface {\n  accounting?: IAccountingInterface;\n}\n\nconst { Provider, Consumer } = React.createContext<IAccountingContextInterface>(\n  {\n    accounting: {\n      accountingExports: undefined,\n      createOrUpdateAccountingPreferences: async () => null,\n      export: async () => undefined,\n      preferences: undefined,\n    },\n  },\n);\n\nexport { Provider, Consumer };\n","import * as React from 'react';\nimport { wrapDisplayName } from 'recompose';\nimport { Consumer, IAccountingContextInterface } from './context';\n\nconst withAccounting = () => <OriginalProps extends {}>(\n  Component: React.ComponentType<OriginalProps & IAccountingContextInterface>,\n) => {\n  type ResultProps = OriginalProps & IAccountingContextInterface;\n\n  class WithAccounting extends React.Component<ResultProps> {\n    render() {\n      return (\n        <Consumer>{props => <Component {...this.props} {...props} />}</Consumer>\n      );\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    (WithAccounting as any).displayName = wrapDisplayName(\n      Component,\n      'withAccounting',\n    );\n  }\n\n  return WithAccounting;\n};\n\nexport default withAccounting;\n","import gql from 'graphql-tag';\n\nimport Company from '../Company/fragments';\n\nconst accountingExport = `\n  id\n  fileLink\n  enabled\n  createdAt\n  updatedAt\n`;\n\nconst accountingExportFragment = gql`\nfragment export on Export {\n  ${accountingExport}\n}`;\n\nconst accountingExportQuery = `\n  ...export\n  company {\n    ${Company.standalone}\n  }\n`;\n\nconst accounting = `\n  id\n  key\n  value\n  description\n  type\n  order\n  enabled\n  createdAt\n  updatedAt\n  company {\n    id\n  }\n`;\n\nconst accountingFragment = gql`\nfragment accountingPreference on AccountingPreference {\n  ${accounting}\n}`;\n\nconst accountingQuery = `\n  ...accountingPreference\n`;\n\nexport default {\n  accounting: {\n    fragment: accountingFragment,\n    query: accountingQuery,\n  },\n  accountingExport: {\n    fragment: accountingExportFragment,\n    query: accountingExportQuery,\n  },\n};\n","import gql from 'graphql-tag';\n\nimport fragments from './fragments';\n\nexport const createOrUpdateAccountingPreferences: any = gql`\n  ${fragments.accounting.fragment}\n\n  mutation createOrUpdateAccountingPreferences($input: [AccountingPreferenceInput!]!) {\n    createOrUpdateAccountingPreferences(input: $input) {\n      total\n      rows {\n        ${fragments.accounting.query}\n      }\n    }\n  }\n`;\n\nexport const accountingPreferences: any = gql`\n  ${fragments.accounting.fragment}\n\n  query accountingPreferences($types: [AccountingPreferenceType], $default: Boolean) {\n    accountingPreferences(types: $types, default: $default) {\n      total\n      rows {\n        ${fragments.accounting.query}\n      }\n    }\n  }\n`;\n\nexport const accountingExports: any = gql`\n  ${fragments.accountingExport.fragment}\n\n  query exports($limit: Int, $offset: Int) {\n    exports(limit: $limit, offset: $offset) {\n      total\n      rows {\n        ${fragments.accountingExport.query}\n      }\n    }\n  }\n`;\n\nexport const accountingExport: any = gql`\n  mutation {\n    export\n  }\n`;\n","import { ApolloClient } from 'apollo-client';\nimport * as Alert from 'context/Alert';\nimport * as User from 'context/User';\nimport * as React from 'react';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport {\n  errorOrSuccess,\n  mutate,\n  parseError,\n  request,\n  updateStoreRows,\n} from 'utils';\nimport { IAccountingContextInterface, Provider } from './context';\nimport {\n  accountingExport,\n  accountingExports,\n  accountingPreferences,\n  createOrUpdateAccountingPreferences,\n} from './queries';\nimport { AccountingPreferenceType, IAccountingPreferenceInput } from './types';\n\ninterface IState extends IAccountingContextInterface {}\n\ninterface IProps extends Alert.InjectedProps, User.InjectedProps {\n  export: boolean;\n  accountingExport: any;\n  createOrUpdateAccountingPreferences: any;\n  dataPreferences: any;\n  dataExports: any;\n  children: React.ReactNode;\n  client: ApolloClient<any>;\n  types: AccountingPreferenceType[];\n  common: boolean;\n}\n\nclass PartnersContextProvider extends React.PureComponent<IProps, IState> {\n  state = {\n    accounting: {\n      accountingExports: undefined,\n      createOrUpdateAccountingPreferences: async (\n        input: IAccountingPreferenceInput[],\n        type: AccountingPreferenceType,\n      ) => {\n        try {\n          const results = await this.props.createOrUpdateAccountingPreferences({\n            variables: { input },\n          });\n          this.props.dataPreferences.refetch();\n\n          return results.data;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n      export: async () => {\n        const { data } = await this.props.accountingExport();\n\n        return data && data.export;\n      },\n      preferences: undefined,\n    },\n  };\n\n  render() {\n    const { dataPreferences, dataExports } = this.props;\n\n    return (\n      <Provider\n        value={{\n          accounting: {\n            ...this.state.accounting,\n            accountingExports: dataExports,\n            preferences:\n              dataPreferences && dataPreferences.accountingPreferences,\n          },\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nconst accountingPreferencesHandler = {\n  options: (props: any) => {\n    return {\n      fetchPolicy: 'network-only', // should be removed but the accounting preferences options is not well handled\n      // accounting option only use custom preferences\n      // invoice control use both so when I add a new account in preferences\n      // control isn't update\n      // QUICK FIX\n      variables: {\n        default: props.common,\n        types: props.types,\n      },\n    };\n  },\n  props: (props: any) => {\n    return {\n      dataPreferences: props.data,\n    };\n  },\n  skip: (props: any) => !props.types,\n};\n\nconst accountingExportsHandler = {\n  options: (props: any) => {\n    return {\n      variables: {\n        limit: props.limit,\n        offset: props.offset,\n      },\n    };\n  },\n  props: (props: any) => {\n    return {\n      dataExports: props.data,\n    };\n  },\n  skip: (props: any) => !props.export,\n};\n\nexport default compose(\n  withApollo,\n  Alert.hoc(),\n  graphql(createOrUpdateAccountingPreferences, {\n    name: 'createOrUpdateAccountingPreferences',\n  }),\n  graphql(accountingPreferences, accountingPreferencesHandler),\n  graphql(accountingExports, accountingExportsHandler),\n  graphql(accountingExport, { name: 'accountingExport' }),\n)(PartnersContextProvider);\n","import { Consumer, IAccountingContextInterface } from './context';\nimport hoc from './hoc';\nimport Provider from './provider';\n\nexport interface InjectedProps extends IAccountingContextInterface {}\n\nexport { Provider, Consumer, hoc };\n"],"sourceRoot":""}