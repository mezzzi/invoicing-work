{"version":3,"sources":["screens/Kyc/4Beneficiary/Wrapper.tsx","screens/Kyc/4Beneficiary/index.js","screens/Kyc/FormBeneficiary/context/context.tsx","screens/Kyc/FormBeneficiary/context/hoc.tsx","screens/Kyc/FormBeneficiary/context/index.tsx","context/Beneficiaries/context.ts","context/Beneficiaries/hoc.tsx","context/Beneficiaries/fragments.ts","context/Beneficiaries/queries.ts","context/Beneficiaries/provider.tsx","context/Beneficiaries/index.tsx"],"names":["List","React","__webpack_require__","e","then","bind","Form1","Promise","all","Form2","Form3","Form4","Wrapper","react","Beneficiaries","representatives","beneficiaries","context","baseUrl","nextUrl","currentStep","nextStep","Route","exact","path","component","Context","undefined","currentUserId","employeeType","isCurrent","removeBeneficiary","removeDocument","saveBeneficiary","tempBeneficiary","type","updateTempBeneficiary","updateValues","values","Consumer","Provider","state","_removeBeneficiary","Object","asyncToGenerator","regenerator_default","a","mark","_callee","userId","remove","wrap","_context","prev","next","_this","props","stop","_x","apply","this","arguments","_removeDocument","_callee2","documentId","document","newDocuments","_context2","sent","documents","rows","map","doc","push","abrupt","setState","objectSpread","_x2","_saveBeneficiary","_callee3","beneficiary","currentBeneficiary","userTag","isHosted","updateBeneficiary","create","result","_userId","_context3","getBeneficiary","JSON","parse","isCurrentUser","__typename","_x3","_updateTempBeneficiary","_callee4","_context4","_x4","_x5","find","getBeneficiaryCurrent","getBeneficiaryById","value","children","composedProvider","compose","withTempBeneficiaryHoc","Component","_React$Component","WithTempBeneficiaryHoc","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","assign","d","__webpack_exports__","hoc","_create","withBeneficiaries","WithBeneficiaries","documentFragment","gql","_templateObject","fragments","fragment","_templateObject2","query","representative","_templateObject3","queries_templateObject","queries_templateObject2","createBeneficiary","queries_templateObject3","_templateObject4","_templateObject5","CompanyContextProvider","input","results","country","birthCountry","nationality","specifiedUSPerson","update","cache","_ref","data","cached","readQuery","variables","limit","offset","writeQuery","concat","total","errors","t0","_remove","id","_ref2","_this$props","dataRepresentatives","dataBeneficiaries","withApollo","Alert","graphql","options","skip","name","provider"],"mappings":"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","file":"static/js/113.e26b1c75.chunk.js","sourcesContent":["import { KycRoute } from 'components/Route';\nimport * as Beneficiaries from 'context/Beneficiaries';\nimport * as Company from 'context/Company';\nimport * as React from 'react';\nimport { Provider } from '../FormBeneficiary/context/index';\n\nconst List = React.lazy(() => import('./List'));\nconst Form1 = React.lazy(() => import('../FormBeneficiary/Form1'));\nconst Form2 = React.lazy(() => import('../FormBeneficiary/Form2'));\nconst Form3 = React.lazy(() => import('../FormBeneficiary/Form3'));\nconst Form4 = React.lazy(() => import('../FormBeneficiary/Form4'));\n\ninterface IProps {}\ninterface IState {}\n\nclass Wrapper extends React.PureComponent<IProps, IState> {\n  render() {\n    return (\n      <Beneficiaries.Provider representatives beneficiaries>\n        <Provider\n          baseUrl=\"/kyc/beneficiary\"\n          nextUrl=\"/kyc/beneficiary\"\n          currentStep=\"BENEFICIARIES\"\n          nextStep=\"BENEFICIARIES\"\n        >\n          <KycRoute exact path=\"/kyc/beneficiary\" component={List} />\n          <KycRoute path=\"/kyc/beneficiary/part-1\" component={Form1} />\n          <KycRoute path=\"/kyc/beneficiary/part-2\" component={Form2} />\n          <KycRoute path=\"/kyc/beneficiary/part-3\" component={Form3} />\n          <KycRoute path=\"/kyc/beneficiary/part-4\" component={Form4} />\n        </Provider>\n      </Beneficiaries.Provider>\n    );\n  }\n}\n\nexport default Wrapper;\n","import './Styles.module.less';\n\nimport Wrapper from './Wrapper';\n\nexport default Wrapper;\n","import * as Beneficiaries from 'context/Beneficiaries';\nimport {\n  IBeneficiaryInput,\n  IDocument,\n  IDocumentInput,\n} from 'context/Beneficiaries/types';\nimport * as React from 'react';\nimport { compose } from 'react-apollo';\n\nexport type beneciaryStep =\n  | 'who'\n  | 'common'\n  | 'address'\n  | 'complementary'\n  | 'power';\n\nexport type beneciaryType =\n  | 'beneciary_not_listed'\n  | 'not_beneciary'\n  | 'beneciary';\n\nexport interface ITempBeneficiaryContext {\n  type?: beneciaryType;\n  baseUrl?: string;\n  nextUrl?: string;\n  currentUserId?: number;\n  tempBeneficiary?: IBeneficiaryInput;\n  employeeType?: number;\n  removeBeneficiary: (userId: number) => void;\n  isCurrent?: boolean;\n  removeDocument: (documentId: number) => void;\n  saveBeneficiary: (Beneficiary?: IBeneficiaryInput) => void;\n  currentStep?: string;\n  nextStep?: string;\n  updateTempBeneficiary: (userId?: number, employeeType?: number) => void;\n  updateValues: (values: any) => void;\n  values: any;\n}\n\nconst Context = React.createContext<ITempBeneficiaryContext>({\n  baseUrl: '',\n  currentStep: undefined,\n  currentUserId: undefined,\n  employeeType: undefined,\n  isCurrent: undefined,\n  nextStep: undefined,\n  nextUrl: '',\n  removeBeneficiary: () => {},\n  removeDocument: () => {},\n  saveBeneficiary: () => {},\n  tempBeneficiary: undefined,\n  type: undefined,\n  updateTempBeneficiary: () => {},\n  updateValues: () => {},\n  values: {},\n});\n\nconst Consumer = Context.Consumer;\n\ninterface IProps extends Beneficiaries.InjectedProps {\n  children: React.ReactNode;\n  isCurrent?: boolean;\n  baseUrl?: string;\n  nextUrl?: string;\n  currentStep?: string;\n  nextStep?: string;\n}\n\ninterface IState extends ITempBeneficiaryContext {}\n\nclass Provider extends React.PureComponent<IProps, IState> {\n  state = {\n    baseUrl: '',\n    currentStep: undefined,\n    currentUserId: undefined,\n    employeeType: undefined,\n    isCurrent: undefined,\n    nextStep: undefined,\n    nextUrl: '',\n    removeBeneficiary: async (userId: number) => {\n      const remove =\n        this.props.beneficiaries && this.props.beneficiaries.remove;\n      if (remove && userId) {\n        await remove(userId);\n      }\n    },\n    removeDocument: async (documentId: number) => {\n      const tempBeneficiary: any = this.state.tempBeneficiary;\n      const removeDocument =\n        this.props.beneficiaries && this.props.beneficiaries.removeDocument;\n\n      if (removeDocument) {\n        const document = await removeDocument(documentId);\n        const newDocuments: IDocument[] = [];\n        if (document && tempBeneficiary && tempBeneficiary.documents) {\n          tempBeneficiary.documents.rows.map((doc: IDocument) => {\n            if (doc.documentId !== document.documentId) {\n              newDocuments.push(document);\n            }\n          });\n          return this.setState({\n            tempBeneficiary: {\n              ...tempBeneficiary,\n              documents: newDocuments,\n            },\n          });\n        }\n      }\n    },\n    saveBeneficiary: async (beneficiary?: IBeneficiaryInput) => {\n      const currentBeneficiary = this.getBeneficiary();\n      const currentUserId =\n        this.state.currentUserId ||\n        (currentBeneficiary && currentBeneficiary.userId);\n      const userTag: any =\n        currentBeneficiary &&\n        currentBeneficiary.userTag &&\n        JSON.parse(currentBeneficiary.userTag);\n      let isHosted = false;\n      if (beneficiary && typeof beneficiary.isHosted !== 'undefined') {\n        isHosted = beneficiary.isHosted;\n      } else if (userTag && userTag.isHosted) {\n        isHosted = userTag.isHosted;\n      }\n\n      const updateBeneficiary: IBeneficiaryInput = {\n        ...beneficiary,\n        isCurrentUser: this.props.isCurrent,\n        isHosted,\n        userId: currentUserId,\n      };\n      if (!updateBeneficiary.userId) {\n        // update only if not allready exist\n        updateBeneficiary.employeeType = this.state.employeeType;\n      }\n\n      delete (beneficiary as any).__typename;\n      const create =\n        this.props.beneficiaries && this.props.beneficiaries.create;\n      if (create && beneficiary) {\n        const result: any = await create(updateBeneficiary);\n        if (result) {\n          const userId: number = (result as any).userId;\n          this.setState({\n            currentUserId: userId,\n          });\n        }\n      }\n    },\n    tempBeneficiary: undefined,\n    type: undefined,\n    updateTempBeneficiary: async (userId?: number, employeeType?: number) => {\n      return this.setState({\n        currentUserId: userId,\n        employeeType,\n      });\n    },\n    updateValues: (values: any) => {\n      this.setState({\n        values,\n      });\n    },\n    values: {},\n  };\n\n  getBeneficiaryById(userId?: number): IBeneficiaryInput | undefined {\n    const beneficiaries =\n      this.props.beneficiaries &&\n      this.props.beneficiaries.beneficiaries &&\n      this.props.beneficiaries.beneficiaries.beneficiaries &&\n      this.props.beneficiaries.beneficiaries.beneficiaries.rows;\n\n    const tempBeneficiary: IBeneficiaryInput | undefined =\n      this.props.beneficiaries &&\n      beneficiaries &&\n      beneficiaries.find(\n        (beneficiary: IBeneficiaryInput) =>\n          userId === beneficiary.userId && beneficiary,\n      );\n\n    return tempBeneficiary;\n  }\n\n  getBeneficiaryCurrent(): IBeneficiaryInput | undefined {\n    const beneficiaries =\n      this.props.beneficiaries &&\n      this.props.beneficiaries.beneficiaries &&\n      this.props.beneficiaries.beneficiaries.beneficiaries &&\n      this.props.beneficiaries.beneficiaries.beneficiaries.rows;\n\n    const tempBeneficiary: IBeneficiaryInput | undefined =\n      this.props.beneficiaries &&\n      beneficiaries &&\n      beneficiaries.find(\n        (beneficiary: IBeneficiaryInput) =>\n          beneficiary.userTag && JSON.parse(beneficiary.userTag).userId,\n      );\n\n    return tempBeneficiary;\n  }\n\n  getBeneficiary(): IBeneficiaryInput | undefined {\n    let currentUserId: number | undefined = this.state.currentUserId;\n    const { isCurrent } = this.props;\n    let tempBeneficiary;\n    if (!currentUserId && isCurrent) {\n      tempBeneficiary = this.getBeneficiaryCurrent();\n      if (tempBeneficiary && tempBeneficiary.userId) {\n        currentUserId = tempBeneficiary.userId;\n      }\n    } else if (currentUserId) {\n      tempBeneficiary = this.getBeneficiaryById(currentUserId);\n    }\n    return tempBeneficiary;\n  }\n\n  render() {\n    const { values } = this.state;\n    const tempBeneficiary = this.getBeneficiary();\n\n    return (\n      <Context.Provider\n        value={{\n          ...this.state,\n          baseUrl: this.props.baseUrl,\n          currentStep: this.props.currentStep,\n          isCurrent: this.props.isCurrent,\n          nextStep: this.props.nextStep,\n          nextUrl: this.props.nextUrl,\n          tempBeneficiary,\n          values: {\n            ...tempBeneficiary,\n            ...values,\n          },\n        }}\n      >\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nconst composedProvider = compose(Beneficiaries.hoc())(Provider);\n\nexport { composedProvider as Provider, Consumer };\n","import * as React from 'react';\nimport { wrapDisplayName } from 'recompose';\nimport { Consumer, ITempBeneficiaryContext } from './context';\n\nconst withTempBeneficiaryHoc = () => <OriginalProps extends {}>(\n  Component: React.ComponentType<OriginalProps & ITempBeneficiaryContext>,\n) => {\n  type ResultProps = OriginalProps & ITempBeneficiaryContext;\n\n  class WithTempBeneficiaryHoc extends React.Component<ResultProps> {\n    render() {\n      return (\n        <Consumer>{props => <Component {...this.props} {...props} />}</Consumer>\n      );\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    (WithTempBeneficiaryHoc as any).displayName = wrapDisplayName(\n      Component,\n      'withTempBeneficiaryHoc',\n    );\n  }\n\n  return WithTempBeneficiaryHoc;\n};\n\nexport default withTempBeneficiaryHoc;\n","import { Consumer, ITempBeneficiaryContext, Provider } from './context';\nimport hoc from './hoc';\n\nexport interface InjectedProps extends ITempBeneficiaryContext {}\n\nexport { Provider, Consumer, hoc };\n","import * as React from 'react';\nimport { IBeneficiary, IBeneficiaryInput, IDocument } from './types';\n\ninterface IBeneficiariesInterface {\n  beneficiaries?: any;\n  create: (input: IBeneficiaryInput) => Promise<IBeneficiary | null>;\n  remove: (id: number) => void;\n  removeDocument: (id: number) => Promise<IDocument | null>;\n  representatives?: any;\n}\n\nexport interface IBeneficiariesContextInterface {\n  beneficiaries?: IBeneficiariesInterface;\n}\n\nconst { Provider, Consumer } = React.createContext<\n  IBeneficiariesContextInterface\n>({\n  beneficiaries: {\n    create: async () => null,\n    remove: () => {},\n    removeDocument: async () => null,\n    representatives: undefined,\n  },\n});\n\nexport { Provider, Consumer };\n","import * as React from 'react';\nimport { wrapDisplayName } from 'recompose';\nimport { Consumer, IBeneficiariesContextInterface } from './context';\n\nconst withBeneficiaries = () => <OriginalProps extends {}>(\n  Component: React.ComponentType<\n    OriginalProps & IBeneficiariesContextInterface\n  >,\n) => {\n  type ResultProps = OriginalProps & IBeneficiariesContextInterface;\n\n  class WithBeneficiaries extends React.Component<ResultProps> {\n    render() {\n      return (\n        <Consumer>{props => <Component {...this.props} {...props} />}</Consumer>\n      );\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    (WithBeneficiaries as any).displayName = wrapDisplayName(\n      Component,\n      'withBeneficiaries',\n    );\n  }\n\n  return WithBeneficiaries;\n};\n\nexport default withBeneficiaries;\n","import gql from 'graphql-tag';\n\nconst sddB2bWhitelist = `\n  uniqueMandateReference\n  isRecurrent\n  walletId\n`;\n\nconst document = `\n  documentId\n  documentTag\n  documentStatus\n  documentTypeId\n  documentType\n  residenceId\n  clientId\n  userId\n  userLastname\n  userFirstname\n  fileName\n  temporaryUrl\n  temporaryUrlThumb\n  createdDate\n  modifiedDate\n`;\n\nconst documentFragment = gql`\n\nfragment document on Document {\n  ${document}\n}`;\n\nconst beneficiary = `\n  userId\n  title\n  firstname\n  lastname\n  nationality\n  placeOfBirth\n  userStatus\n  birthCountry\n  employeeType\n  userTag\n  birthday\n  specifiedUSPerson\n  incomeRange\n  personalAssets\n  occupation\n  controllingPersonType\n  phone\n  address1\n  address2\n  postcode\n  city\n  country\n  taxResidence\n`;\n\nconst beneficiaryFragment = gql`\n${documentFragment}\n\nfragment beneficiary on Beneficiary {\n  ${beneficiary}\n}`;\n\nconst beneficiaryQuery = `\n  ...beneficiary\n  documents {\n    total\n    rows {\n      ...document\n    }\n  }\n`;\n\nconst representative = `\n  firstname\n  lastname\n  fullnames\n  birthday\n  parentType\n  userTypeId\n`;\n\nconst representativeFragment = gql`\nfragment representative on Representative {\n  ${representative}\n}`;\n\nconst representativeQuery = `\n  ...representative\n`;\n\nexport default {\n  beneficiary: {\n    fragment: beneficiaryFragment,\n    query: beneficiaryQuery,\n  },\n  document: {\n    fragment: documentFragment,\n    query: document,\n  },\n  representative: {\n    fragment: representativeFragment,\n    query: representativeQuery,\n  },\n};\n","import gql from 'graphql-tag';\n\nimport fragments from './fragments';\n\nexport const beneficiaries: any = gql`\n  ${fragments.beneficiary.fragment}\n\n  query beneficiaries {\n    beneficiaries {\n      total\n      rows {\n        ${fragments.beneficiary.query}\n      }\n    }\n  }\n`;\n\nexport const representatives: any = gql`\n  ${fragments.representative.fragment}\n\n  query representatives {\n    representatives {\n      total\n      rows {\n        ${fragments.representative.query}\n      }\n    }\n  }\n`;\n\nexport const createBeneficiary: any = gql`\n  ${fragments.beneficiary.fragment}\n\n  mutation createBeneficiary($input: BeneficiaryInput!) {\n    createBeneficiary(input: $input) {\n      ${fragments.beneficiary.query}\n    }\n  }\n`;\n\nexport const removeBeneficiary: any = gql`\n  ${fragments.beneficiary.fragment}\n\n  mutation removeBeneficiary($id: Int!) {\n    removeBeneficiary(id: $id) {\n      ${fragments.beneficiary.query}\n    }\n  }\n`;\n\nexport const removeDocument: any = gql`\n  mutation removeDocument($id: Int!) {\n    removeDocument(id: $id) {\n      ${fragments.document.query}\n    }\n  }\n`;\n","import { ApolloClient } from 'apollo-client';\nimport * as Alert from 'context/Alert';\nimport * as React from 'react';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport { IBeneficiariesContextInterface, Provider } from './context';\nimport {\n  beneficiaries,\n  createBeneficiary,\n  removeBeneficiary,\n  removeDocument,\n  representatives,\n} from './queries';\nimport { IBeneficiary, IBeneficiaryInput, IDocument } from './types';\n\ninterface IState extends IBeneficiariesContextInterface {}\n\ninterface IProps extends Alert.InjectedProps {\n  beneficiaries: boolean;\n  children: React.ReactNode;\n  client: ApolloClient<any>;\n  createBeneficiary: any;\n  dataBeneficiaries?: any;\n  dataRepresentatives?: any;\n  removeDocument: any;\n  removeBeneficiary: any;\n  representatives: boolean;\n}\n\nclass CompanyContextProvider extends React.PureComponent<IProps, IState> {\n  state = {\n    beneficiaries: {\n      create: async (\n        input: IBeneficiaryInput,\n      ): Promise<IBeneficiary | null> => {\n        if (\n          input.country === 'US' ||\n          input.birthCountry === 'US' ||\n          input.nationality === 'US'\n        ) {\n          input.specifiedUSPerson = 1;\n        } else {\n          input.specifiedUSPerson = 0;\n        }\n        try {\n          const results = await this.props.createBeneficiary({\n            update: (cache: any, { data }: any) => {\n              if (!input.userId) {\n                const cached = cache.readQuery({\n                  query: beneficiaries,\n                  variables: {\n                    limit: 100,\n                    offset: 0,\n                  },\n                });\n\n                cache.writeQuery({\n                  data: {\n                    beneficiaries: {\n                      ...cached.beneficiaries,\n                      rows: [data.createBeneficiary].concat(\n                        cached.beneficiaries.rows,\n                      ),\n                      total: cached.beneficiaries.total + 1,\n                    },\n                  },\n                  query: beneficiaries,\n                  variables: {\n                    limit: 100,\n                    offset: 0,\n                  },\n                });\n              }\n            },\n            variables: { input },\n          });\n\n          const beneficiary: IBeneficiary = results.data.createBeneficiary;\n          if (results.errors) {\n            return null;\n          }\n          return beneficiary;\n        } catch (e) {\n          return null;\n        }\n      },\n      remove: async (id: number) => {\n        try {\n          await this.props.removeBeneficiary({\n            variables: { id },\n          });\n        } catch (e) {}\n      },\n      removeDocument: async (documentId: number): Promise<IDocument | null> => {\n        try {\n          const { errors, data } = await this.props.removeDocument({\n            variables: { id: documentId },\n          });\n          if (errors) {\n            return null;\n          }\n          return data.removeDocument;\n        } catch (e) {\n          return null;\n        }\n      },\n    },\n  };\n\n  render() {\n    const { dataRepresentatives, dataBeneficiaries } = this.props;\n\n    return (\n      <Provider\n        value={{\n          beneficiaries: {\n            ...this.state.beneficiaries,\n            beneficiaries: dataBeneficiaries ? dataBeneficiaries : undefined,\n            representatives: dataRepresentatives\n              ? dataRepresentatives\n              : undefined,\n          },\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nconst representativesHandler = {\n  props: (props: any) => {\n    return {\n      dataRepresentatives: props.data,\n    };\n  },\n  skip: (props: any) => !props.representatives,\n};\n\nconst beneficiariesHandler = {\n  options: (props: any) => {\n    return {\n      variables: {\n        limit: 100,\n        offset: 0,\n      },\n    };\n  },\n  props: (props: any) => {\n    return {\n      dataBeneficiaries: props.data,\n    };\n  },\n  skip: (props: any) => !props.beneficiaries,\n};\n\nexport default compose(\n  withApollo,\n  Alert.hoc(),\n  graphql(beneficiaries, beneficiariesHandler),\n  graphql(representatives, representativesHandler),\n  graphql(removeBeneficiary, {\n    name: 'removeBeneficiary',\n  }),\n  graphql(createBeneficiary, {\n    name: 'createBeneficiary',\n  }),\n  graphql(removeDocument, {\n    name: 'removeDocument',\n  }),\n)(CompanyContextProvider as any);\n","import { Consumer, IBeneficiariesContextInterface } from './context';\nimport hoc from './hoc';\nimport Provider from './provider';\n\nexport interface InjectedProps extends IBeneficiariesContextInterface {}\n\nexport { Provider, Consumer, hoc };\n"],"sourceRoot":""}