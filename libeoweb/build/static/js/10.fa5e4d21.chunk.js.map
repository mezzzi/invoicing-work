{"version":3,"sources":["assets/icons/search.svg","components/Loading/Loading.tsx","components/Infinity/index.tsx","context/Company/types.ts","components/Search/AutocompleteSiren.tsx","components/Search/NotFound.tsx","components/Search/Autocomplete.tsx","components/Search/AutocompleteContact.tsx","components/Search/index.js"],"names":["React","__webpack_require__","Search","props","createElement","key","d","id","stroke","strokeWidth","fill","fillRule","transform","xlinkHref","defaultProps","width","height","viewBox","version","module","exports","default","Loading","react","icon","className","type","style","fontSize","spin","Infinity","state","loading","more","_callee","regenerator_default","a","wrap","_context","prev","next","_this","hasMore","setState","loadMore","stop","handleRef","node","scrollRef","addEventListener","e","offsetHeight","scrollTop","scrollHeight","_this$props","this","children","useWindow","ref","concat","components_Loading_Loading","injectIntl","ICompanyStatus","IKycStatus","IPartnerOrder","Object","keys","reduce","o","v","i","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","AutocompleteSiren","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__","call","typing","value","_ref","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","fetchMore","total","length","updateQuery","_ref2","fetchMoreResult","searchCompanies","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","rows","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","variables","limit","offset","_x","_x2","_x3","apply","arguments","handleChange","change","bind","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_10__","handleSearch","search","onValueChange","_this2","onSelect","form","_this$props2","rest","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_this$state","react__WEBPACK_IMPORTED_MODULE_14__","context_Siren__WEBPACK_IMPORTED_MODULE_12__","_ref3","siren","data","components_Search__WEBPACK_IMPORTED_MODULE_11__","assign","placeholder","undefined","onSearch","User","NotFound","Assets","IconValue","EmptySearch","index_es","SearchAutocomplete","classCallCheck","possibleConstructorReturn","getPrototypeOf","open","handleClickOutside","clickOutside","assertThisInitialized","handleClickFooter","clickFooter","handleSetWrapperRef","setWrapperRef","handleFocus","focus","handleBlur","blur","wrapperRef","event","target","contains","onLeave","onBlur","onFocus","currentTarget","company","inputCompany","addresses","map","address","address1","address2","city","country","siret","zipcode","brandName","capital","category","domainName","incorporationAt","legalForm","naf","nafNorm","name","numberEmployees","phone","slogan","vatNumber","document","ButtonStatus","Button","onClick","select","BtnType","Default","status","already","self","disabled","exist","unknown","footer","dataSource","item","concatenedAddress","CompanyAvatar","tag","marginTop","renderButton","Search_NotFound","components_Infinity","rules","intl","inline","Form","IType","onChange","enterButton","formatMessage","autoComplete","label","renderSearch","SearchIcon","searchIcon","SearchAutocompleteContact","contacts","newContact","handleShowContactSearch","showContactSearch","handleAddContact","addContact","handleCancelContact","cancelContact","handleRemove","remove","contact","toConsumableArray","currentContact","push","emails","email","j","fullname","firstname","lastname","RegExp","test","_this3","onSubmit","refetchPartner","companyId","_this$state2","contactsIds","Cross","prefix","color","Plus","Contacts","onCancel","Primary","__webpack_exports__","Autocomplete","AutocompleteContact"],"mappings":"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","file":"static/js/10.fa5e4d21.chunk.js","sourcesContent":["var React = require('react');\n\nfunction Search (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},React.createElement(\"path\",{\"d\":\"M14.6804348,4.40652169 C11.5206522,4.40652169 8.95217389,7.01195649 8.95217389,10.1902174 C8.95217389,11.5391304 9.41413042,12.7586957 10.1717391,13.7565217 L4.73913039,19.2630435 C4.42499995,19.5956522 4.42499995,20.1130435 4.73913039,20.427174 C4.90543474,20.5934783 5.10869561,20.6673914 5.31195648,20.6673914 C5.53369561,20.6673914 5.73695648,20.5934783 5.90326083,20.427174 L11.3358696,14.9206522 C12.2782609,15.6043478 13.423913,15.9923913 14.6619565,15.9923913 C17.8217392,15.9923913 20.3902174,13.3869565 20.3902174,10.2086956 C20.3902174,7.03043475 17.8402174,4.40652169 14.6804348,4.40652169 Z M14.6804348,14.5326087 C12.3336957,14.5326087 10.4304348,12.5923913 10.4304348,10.2086956 C10.4304348,7.82499997 12.3336957,5.88478257 14.6804348,5.88478257 C17.0271739,5.88478257 18.9304348,7.82499997 18.9304348,10.2086956 C18.9304348,12.5923913 17.0271739,14.5326087 14.6804348,14.5326087 Z M17.5445652,10.2826087 C17.5076087,10.5967391 17.2304348,10.8369565 16.9163044,10.8369565 C16.8793479,10.8369565 16.8608696,10.8369565 16.8239131,10.8369565 C16.4728261,10.7815217 16.2326087,10.4673913 16.2695652,10.1163043 C16.3989131,9.15543476 15.3271739,8.65652172 15.2717391,8.63804346 C14.9576087,8.49021737 14.8097826,8.10217389 14.9576087,7.78804345 C15.1054348,7.47391301 15.475,7.32608693 15.8076087,7.45543475 C15.8815218,7.47391301 17.8032609,8.36086954 17.5445652,10.2826087 Z M16.1956522,11.6869565 C16.325,11.8163043 16.4173913,12.0195652 16.4173913,12.2043478 C16.4173913,12.4076087 16.3434783,12.5923913 16.1956522,12.7217391 C16.0663044,12.851087 15.8630435,12.9434783 15.6782609,12.9434783 C15.4934783,12.9434783 15.2902174,12.8695652 15.1608696,12.7217391 C15.0315218,12.5923913 14.9391304,12.3891304 14.9391304,12.2043478 C14.9391304,12.0195652 15.0130435,11.8163043 15.1608696,11.6869565 C15.2902174,11.5576087 15.4934783,11.4652174 15.6782609,11.4652174 C15.8630435,11.4652174 16.0478261,11.5391304 16.1956522,11.6869565 Z\",\"id\":\"search-1\"})),React.createElement(\"g\",{\"id\":\"Mon-réseau\",\"stroke\":\"none\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",{\"id\":\"05_01_Mon-réseau_Add_Company\",\"transform\":\"translate(-459.000000, -159.000000)\"},React.createElement(\"g\",{\"id\":\"Popin\",\"transform\":\"translate(440.000000, 139.000000)\"},React.createElement(\"g\",{\"id\":\"Icons/search\",\"transform\":\"translate(15.000000, 16.000000)\"},[React.createElement(\"mask\",{\"id\":\"mask-search-2\",\"fill\":\"white\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#search-1\"})),React.createElement(\"use\",{\"id\":\"search\",\"fill\":\"currentColor\",\"fillRule\":\"nonzero\",\"xlinkHref\":\"#search-1\",\"key\":1})]))))]);\n}\n\nSearch.defaultProps = {\"width\":\"17px\",\"height\":\"17px\",\"viewBox\":\"0 0 17 17\",\"version\":\"1.1\"};\n\nmodule.exports = Search;\n\nSearch.default = Search;\n","import { Icon } from 'antd';\nimport * as React from 'react';\n\n/**\n * @props\n */\ninterface IProps {}\ninterface IState {}\n\nclass Loading extends React.PureComponent<IProps, IState> {\n  render() {\n    return (\n      <Icon className=\"loading\" type=\"loading\" style={{ fontSize: 24 }} spin />\n    );\n  }\n}\n\nexport default Loading;\n","import { Loading } from 'components/Loading';\nimport * as React from 'react';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport './Styles.module.less';\n\ninterface IProps extends InjectedIntlProps {\n  className?: string;\n  useWindow?: boolean;\n  hasMore?: boolean;\n  loadMore?: (more: any) => Promise<void>;\n}\n\ninterface IState {\n  loading?: boolean;\n}\n\nclass Infinity extends React.PureComponent<IProps, IState> {\n  static defaultProps = {};\n\n  state = {\n    loading: false,\n  };\n\n  scrollRef: any;\n\n  more = async (more?: number) => {\n    const { hasMore } = this.props;\n\n    if (hasMore) {\n      this.setState({ loading: true });\n      if (this.props.loadMore) {\n        await this.props.loadMore(more);\n      }\n      this.setState({ loading: false });\n    }\n  };\n  handleRef = (node: React.ReactNode) => {\n    if (node) {\n      this.scrollRef = node;\n      this.scrollRef.addEventListener('scroll', (e: any) => {\n        const { loading } = this.state;\n\n        if (\n          !loading &&\n          this.scrollRef &&\n          this.scrollRef.offsetHeight + this.scrollRef.scrollTop >=\n            this.scrollRef.scrollHeight\n        ) {\n          this.more();\n        }\n      });\n    }\n  };\n\n  render() {\n    const { children, hasMore, useWindow } = this.props;\n    const { loading } = this.state;\n\n    return (\n      children && (\n        <div\n          ref={this.handleRef}\n          className={`infinity${useWindow === false ? '' : ' use-window'}`}\n        >\n          {children}\n          {hasMore && loading ? <Loading key=\"loading\" /> : null}\n        </div>\n      )\n    );\n  }\n}\n\nexport default injectIntl(Infinity);\n","import { IAddress, IInputAddress } from 'context/Addresses/types';\nimport { IContact, IInputContact } from 'context/Contacts/types';\n\nexport enum ICompanyStatus {\n  unknown = 'UNKNOW',\n  exist = 'EXIST',\n  already = 'ALREADY',\n  self = 'SELF',\n}\n\nexport enum IKycStatus {\n  CONTRACT_SIGNED = 'CONTRACT_SIGNED',\n  BENEFICIARIES_ADDED = 'BENEFICIARIES_ADDED',\n  BENEFICIARIES_VALIDATED = 'BENEFICIARIES_VALIDATED',\n  PENDING = 'PENDING',\n  SUMMARY = 'SUMMARY',\n  VALIDATED = 'VALIDATED',\n  REFUSED = 'REFUSED',\n}\n\nexport const KycStatus: any = Object.keys(IKycStatus).reduce(\n  (o, v, i) => ({ ...o, [v]: i }),\n  {},\n);\n\nexport enum IPartnerOrder {\n  createdAt_ASC = 'createdAt_ASC',\n  createdAt_DESC = 'createdAt_DESC',\n  updatedAt_ASC = 'updatedAt_ASC',\n  updatedAt_DESC = 'updatedAt_DESC',\n}\n\nexport interface ICompany {\n  id: number;\n  siren: string;\n  siret: string;\n  name: string;\n  brandName: string;\n  naf: string;\n  nafNorm: string;\n  numberEmployees: string;\n  legalForm: string;\n  category: string;\n  incorporateAt: number;\n  vatNumber: string;\n  source: string;\n  slogan: string;\n  domainName: string;\n  capital: number;\n  invoicesSent: number;\n  invoicesReceived: number;\n  phone: string;\n  treezorEmail: string;\n  treezorUserId: number;\n  treezorWalletId: number;\n  treezorIban: string;\n  treezorBic: string;\n  incorporationAt: Date;\n  createdAt: Date;\n  updatedAt: Date;\n  status: ICompanyStatus;\n  kycStep: string;\n  kycStatus: IKycStatus;\n  addresses?: {\n    total: number;\n    rows: IAddress[];\n  };\n  contacts?: {\n    total: number;\n    rows: IContact[];\n  };\n}\n\nexport interface ICompanies {\n  total: number;\n  rows: ICompany[];\n}\n\nexport interface IInputCompany {\n  siren?: string;\n  siret?: string;\n  name?: string;\n  brandName?: string;\n  naf?: string;\n  nafNorm?: string;\n  numberEmployees?: string;\n  legalForm?: string;\n  slogan?: string;\n  domainName?: string;\n  category?: string;\n  vatNumber?: string;\n  incorporationAt?: Date;\n  capital?: number;\n  legalAnnualTurnOver?: string;\n  legalNetIncomeRange?: string;\n  phone?: string;\n  addresses?: IInputAddress[];\n}\n","import { Autocomplete } from 'components/Search';\nimport * as Siren from 'context/Siren';\nimport * as User from 'context/User';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { IAutocompleteProps, IAutocompleteState } from './Autocomplete';\n\ninterface IProps extends User.InjectedProps, IAutocompleteProps {\n  placeholder?: string;\n  footer?: React.ReactNode;\n}\ninterface IState extends IAutocompleteState {\n  typing: boolean;\n}\n\nclass AutocompleteSiren extends React.PureComponent<IProps, IState> {\n  state = {\n    typing: false,\n    value: '',\n  };\n\n  handleChange: (value: string) => void;\n  handleSearch: (value: string) => void;\n\n  constructor(props: any) {\n    super(props);\n\n    this.handleChange = this.change.bind(this);\n    this.handleSearch = this.search.bind(this);\n  }\n\n  change(value: string) {\n    const { onValueChange } = this.props;\n    onValueChange && onValueChange(value);\n    this.setState({ typing: true });\n  }\n\n  more = async (fetchMore: any, total: number, length: number) => {\n    if (fetchMore) {\n      await fetchMore({\n        updateQuery: (prev: any, { fetchMoreResult }: any) => {\n          if (!fetchMoreResult.searchCompanies) {\n            return prev;\n          }\n\n          return {\n            ...prev,\n            searchCompanies: {\n              ...prev.searchCompanies,\n              rows: [\n                ...prev.searchCompanies.rows,\n                ...fetchMoreResult.searchCompanies.rows,\n              ],\n            },\n          };\n        },\n        variables: {\n          limit: 10,\n          offset: length || 0,\n        },\n      });\n    }\n  };\n\n  search(value: string) {\n    this.setState({ value, typing: false });\n  }\n\n  render() {\n    const { onSelect, type, form } = this.props;\n    const { onValueChange, ...rest } = this.props;\n    const { value, typing } = this.state;\n\n    return (\n      <Siren.Provider value={value} limit={10} offset={0}>\n        <Siren.Consumer>\n          {({ siren }) => {\n            let rows;\n            let total;\n            let loading;\n            let hasMore;\n            let fetchMore;\n\n            if (!typing) {\n              rows =\n                siren &&\n                siren.data &&\n                siren.data.searchCompanies &&\n                siren.data.searchCompanies.rows\n                  ? siren.data.searchCompanies.rows\n                  : [];\n              total =\n                siren &&\n                siren.data &&\n                siren.data.searchCompanies &&\n                siren.data.searchCompanies.total;\n\n              fetchMore = siren && siren.data && siren.data.fetchMore;\n              loading = siren && siren.data && siren.data.loading;\n\n              hasMore =\n                rows && rows.length && total ? rows.length < total : false;\n            }\n\n            return (\n              <Autocomplete\n                placeholder={this.props.placeholder}\n                hasMore={hasMore}\n                rows={!loading ? rows : undefined}\n                form={form}\n                onSearch={this.handleSearch}\n                loadMore={this.more.bind(\n                  null,\n                  fetchMore,\n                  total,\n                  rows && rows.length,\n                )}\n                type={type}\n                onSelect={onSelect}\n                onValueChange={this.handleChange}\n                {...rest}\n              />\n            );\n          }}\n        </Siren.Consumer>\n      </Siren.Provider>\n    );\n  }\n}\n\nexport default injectIntl(User.hoc()(AutocompleteSiren));\n","import * as React from 'react';\n\nimport { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport { FormattedMessage } from 'react-intl';\n\nconst NotFound = () => (\n  <div className=\"option-not-found\">\n    <Icon value={IconValue.EmptySearch} />\n    <p className=\"not-found-title\">\n      <FormattedMessage id=\"search.company.search_not_found\" />\n    </p>\n    <p className=\"not-found-description\">\n      <FormattedMessage id=\"search.company.no_data\" />\n    </p>\n  </div>\n);\n\nexport default NotFound;\n","import { Tag } from 'antd';\nimport CompanyAvatar from 'components/Avatar/CompanyAvatar';\nimport { BtnType, Button } from 'components/Button';\nimport { Search } from 'components/Form';\nimport { InputRules, IType } from 'components/Form/Default';\nimport Infinity from 'components/Infinity';\nimport { IInputAddress } from 'context/Addresses/types';\nimport { ICompany, ICompanyStatus, IInputCompany } from 'context/Company/types';\nimport * as React from 'react';\nimport { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';\nimport NotFound from './NotFound';\n\nexport interface IAutocompleteProps extends InjectedIntlProps {\n  placeholder?: string;\n  form?: any;\n  footer?: React.ReactNode;\n  onSelect?: (item: IInputCompany) => void;\n  onSearch?: (value: string) => void;\n  onValueChange?: (value: string) => void;\n  loadMore?: (more: any) => Promise<void>;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  onLeave?: () => void;\n  rows?: ICompany[];\n  rules?: InputRules[];\n  hasMore?: boolean;\n  loading?: boolean;\n  inline?: boolean;\n  type: string;\n}\n\nexport interface IAutocompleteState {\n  value: string;\n  open?: boolean;\n}\n\nclass SearchAutocomplete extends React.PureComponent<\n  IAutocompleteProps,\n  IAutocompleteState\n> {\n  state = {\n    open: false,\n    value: '',\n  };\n\n  handleSetWrapperRef: (node: HTMLDivElement) => void;\n  handleSearch: (value: string) => void;\n  handleChange: (node: React.ChangeEvent<Element>) => void;\n  handleFocus?: (event: React.FocusEvent<HTMLInputElement>) => any;\n  handleBlur?: (event: React.FocusEvent<HTMLInputElement>) => any;\n  handleClickOutside?: (event: Event) => void;\n  handleClickFooter?: () => void;\n\n  wrapperRef?: HTMLDivElement;\n\n  constructor(props: any) {\n    super(props);\n\n    this.handleClickOutside = this.clickOutside.bind(this);\n    this.handleClickFooter = this.clickFooter.bind(this);\n    this.handleSetWrapperRef = this.setWrapperRef.bind(this);\n    this.handleSearch = this.search.bind(this);\n    this.handleChange = this.change.bind(this);\n    this.handleFocus = this.focus.bind(this);\n    this.handleBlur = this.blur.bind(this);\n  }\n\n  setWrapperRef(node: HTMLDivElement) {\n    if (node) {\n      this.wrapperRef = node;\n    }\n  }\n\n  clickOutside(event: Event) {\n    const target: HTMLElement = event.target as HTMLElement;\n    if (target && this.wrapperRef && !this.wrapperRef.contains(target)) {\n      this.props.onLeave && this.props.onLeave();\n      this.setState({ open: false });\n    }\n\n    return true;\n  }\n\n  clickFooter() {\n    this.setState({\n      open: false,\n      value: '',\n    });\n  }\n\n  blur(event: React.FocusEvent<HTMLInputElement>) {\n    this.props.onBlur && this.props.onBlur();\n  }\n\n  focus(event: React.FocusEvent<HTMLInputElement>) {\n    this.props.onFocus && this.props.onFocus();\n    this.setState({ open: true });\n  }\n\n  search(value: string): void {\n    const { onSearch } = this.props;\n    this.setState({ value });\n    onSearch && onSearch(value);\n  }\n\n  change(node: React.ChangeEvent<Element>): void {\n    const { onValueChange } = this.props;\n    const target: any = node.currentTarget;\n    onValueChange && onValueChange(target.value);\n  }\n\n  select(company: ICompany) {\n    const { onSelect } = this.props;\n\n    const addresses: IInputAddress[] =\n      company.addresses && company.addresses.rows\n        ? company.addresses.rows.map(address => {\n            return {\n              address1: address.address1,\n              address2: address.address2,\n              city: address.city,\n              country: address.country,\n              siret: address.siret,\n              zipcode: address.zipcode,\n            };\n          })\n        : [];\n\n    const inputCompany: IInputCompany = {\n      addresses,\n      brandName: company.brandName,\n      capital: company.capital,\n      category: company.category,\n      domainName: company.domainName,\n      incorporationAt: company.incorporationAt,\n      legalForm: company.legalForm,\n      naf: company.naf,\n      nafNorm: company.nafNorm,\n      name: company.name,\n      numberEmployees: company.numberEmployees,\n      phone: company.phone,\n      siren: company.siren,\n      siret: company.siret,\n      slogan: company.slogan,\n      vatNumber: company.vatNumber,\n    };\n\n    onSelect && onSelect(inputCompany);\n    this.setState({ open: false });\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this\n      .handleClickOutside as EventListener);\n  }\n\n  componentWillUnmount() {\n    this.wrapperRef = undefined;\n    document.addEventListener('click', this\n      .handleClickOutside as EventListener);\n    const { onSearch } = this.props;\n    this.setState({ value: '' });\n    onSearch && onSearch('');\n  }\n\n  renderButton(company: ICompany, type: string): React.ReactNode {\n    let ButtonStatus: React.ReactNode = (\n      <Button onClick={this.select.bind(this, company)} type={BtnType.Default}>\n        <FormattedMessage id=\"search.company.btn_add\" />\n      </Button>\n    );\n\n    if (type === 'invoices') {\n      return (ButtonStatus = (\n        <Button\n          onClick={this.select.bind(this, company)}\n          type={BtnType.Default}\n        >\n          {company.status === ICompanyStatus.already ? (\n            <FormattedMessage id=\"search.company.btn_invoice_choose\" />\n          ) : (\n            <FormattedMessage id=\"search.company.btn_invoice_add\" />\n          )}\n        </Button>\n      ));\n    }\n    switch (company.status) {\n      case ICompanyStatus.self:\n        if (type === 'companies' || type === 'partners') {\n          ButtonStatus = (\n            <Button disabled={true}>\n              <FormattedMessage id=\"search.company.btn_self\" />\n            </Button>\n          );\n        }\n        break;\n      case ICompanyStatus.already:\n        if (type === 'partners') {\n          ButtonStatus = (\n            <Button disabled={true}>\n              <FormattedMessage id=\"search.company.btn_already\" />\n            </Button>\n          );\n        } else {\n          ButtonStatus = (\n            <Button disabled={true}>\n              <FormattedMessage id=\"search.company.btn_exist\" />\n            </Button>\n          );\n        }\n        break;\n      case ICompanyStatus.exist:\n        if (type === 'companies') {\n          ButtonStatus = (\n            <Button disabled={true}>\n              <FormattedMessage id=\"search.company.btn_exist\" />\n            </Button>\n          );\n        }\n        break;\n      case ICompanyStatus.unknown:\n        ButtonStatus = (\n          <Button\n            onClick={this.select.bind(this, company)}\n            type={BtnType.Default}\n          >\n            <FormattedMessage id=\"search.company.btn_add\" />\n          </Button>\n        );\n        break;\n    }\n\n    return ButtonStatus;\n  }\n\n  renderSearch() {\n    const { type, rows, loading, hasMore, loadMore, footer } = this.props;\n    const { open, value } = this.state;\n\n    let dataSource: any = [];\n    if (!loading && rows && rows.length > 0) {\n      dataSource = rows.map((item: ICompany, i: number) => {\n        let concatenedAddress: string | null = null;\n        if (item.addresses && item.addresses.rows && item.addresses.rows[0]) {\n          const address = item.addresses.rows[0];\n          concatenedAddress = `${\n            address.address1 ? `${address.address1} ` : ''\n          }${address.zipcode ? `${address.zipcode} ` : ''}${\n            address.city ? `${address.city} ` : ''\n          }${address.country ? `${address.country}` : ''}`;\n        }\n\n        return (\n          <div className=\"search-result-item\" key={`${i}`}>\n            <div className=\"option-avatar\">\n              <CompanyAvatar company={item} />\n            </div>\n            <div className=\"option-info\">\n              <div className=\"company-title\">{item.name || item.brandName}</div>\n              {concatenedAddress && (\n                <div className=\"company-address\">{concatenedAddress}</div>\n              )}\n              <div className=\"company-siret\">\n                <FormattedMessage id=\"search.company.siret\" />: {item.siret}\n              </div>\n              <div>\n                {item.status === ICompanyStatus.already && (\n                  <Tag\n                    style={{\n                      marginTop: 5,\n                    }}\n                  >\n                    <FormattedMessage id=\"search.company.tag_partner\" />\n                  </Tag>\n                )}\n              </div>\n            </div>\n            <div className=\"option-cta\">{this.renderButton(item, type)}</div>\n          </div>\n        );\n      });\n    } else if (\n      !loading &&\n      rows &&\n      rows.length === 0 &&\n      value &&\n      value.length > 0\n    ) {\n      dataSource = [\n        <div key=\"0\" className=\"search-result-item\">\n          <NotFound />\n        </div>,\n      ];\n    }\n\n    return (\n      dataSource.length > 0 &&\n      open && (\n        <div className=\"search-result-outer\">\n          <div className=\"search-result\">\n            <Infinity hasMore={hasMore} loadMore={loadMore} useWindow={false}>\n              {dataSource}\n            </Infinity>\n          </div>\n          {footer && (\n            <div\n              onClick={this.handleClickFooter}\n              className=\"search-result-footer\"\n            >\n              {footer}\n            </div>\n          )}\n        </div>\n      )\n    );\n  }\n\n  render() {\n    const { form, rules, intl, type, inline } = this.props;\n\n    return (\n      <div\n        ref={this.handleSetWrapperRef}\n        className={`search-autocomplete ${type}`}\n      >\n        <Search\n          rules={rules}\n          form={form}\n          type={IType.Search}\n          onSearch={this.handleSearch}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onFocus={this.handleFocus}\n          enterButton={intl.formatMessage({\n            id: 'search.company.btn_search',\n          })}\n          className={'input-autocomplete'}\n          autoComplete={'off'}\n          placeholder={\n            !inline && this.props.placeholder\n              ? intl.formatMessage({\n                  id: this.props.placeholder,\n                })\n              : undefined\n          }\n          label={\n            inline && this.props.placeholder\n              ? intl.formatMessage({\n                  id: this.props.placeholder,\n                })\n              : null\n          }\n        >\n          {this.renderSearch()}\n        </Search>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(SearchAutocomplete);\n","import { Tag } from 'antd';\nimport { Search } from 'components/Form';\nimport { InputRules, IType } from 'components/Form/Default';\nimport * as React from 'react';\nimport { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';\n\nimport searchIcon from '-!svg-react-loader!assets/icons/search.svg';\nimport { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport { BtnType, Button } from 'components/Button';\nimport { ContactSearch } from 'components/Contacts';\nimport { IContact } from 'context/Contacts/types';\nimport { IEmail } from 'context/Emails/types';\nconst SearchIcon: any = searchIcon;\n\nexport interface IAutocompleteProps extends InjectedIntlProps {\n  placeholder?: string;\n  refetchPartner: () => void;\n  onSubmit?: (contactsIds?: string[]) => void;\n  companyId?: number;\n  form?: any;\n  onSelect?: (item: IContact) => void;\n  onSearch?: (value: string) => void;\n  onValueChange?: (value: string) => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  onLeave?: () => void;\n  rows?: IContact[];\n  rules?: InputRules[];\n  inline?: boolean;\n  type: string;\n}\n\nexport interface IAutocompleteState {\n  contacts: IContact[];\n  value: string;\n  open?: boolean;\n  newContact: boolean;\n}\n\nclass SearchAutocompleteContact extends React.PureComponent<\n  IAutocompleteProps,\n  IAutocompleteState\n> {\n  state = {\n    contacts: [],\n    newContact: false,\n    open: false,\n    value: '',\n  };\n\n  handleSetWrapperRef: (node: HTMLDivElement) => void;\n  handleAddContact: (contact: IContact) => void;\n  handleCancelContact: () => void;\n  handleShowContactSearch: () => void;\n  handleSearch: (value: string) => void;\n  handleRemove: (contact: IContact) => void;\n  handleChange: (node: React.ChangeEvent<Element>) => void;\n  handleFocus?: (event: React.FocusEvent<HTMLInputElement>) => any;\n  handleBlur?: (event: React.FocusEvent<HTMLInputElement>) => any;\n  handleClickOutside?: (event: Event) => void;\n\n  wrapperRef?: HTMLDivElement;\n\n  constructor(props: any) {\n    super(props);\n\n    this.handleClickOutside = this.clickOutside.bind(this);\n    this.handleShowContactSearch = this.showContactSearch.bind(this);\n    this.handleAddContact = this.addContact.bind(this);\n    this.handleCancelContact = this.cancelContact.bind(this);\n    this.handleSetWrapperRef = this.setWrapperRef.bind(this);\n    this.handleSearch = this.search.bind(this);\n    this.handleRemove = this.remove.bind(this);\n    this.handleChange = this.change.bind(this);\n    this.handleFocus = this.focus.bind(this);\n    this.handleBlur = this.blur.bind(this);\n  }\n\n  setWrapperRef(node: HTMLDivElement) {\n    if (node) {\n      this.wrapperRef = node;\n    }\n  }\n\n  showContactSearch() {\n    this.setState({\n      newContact: true,\n    });\n  }\n\n  addContact(contact: IContact) {\n    this.setState({\n      contacts: [...this.state.contacts, contact],\n      newContact: false,\n    });\n  }\n\n  cancelContact() {\n    this.setState({\n      newContact: false,\n    });\n  }\n\n  clickOutside(event: Event) {\n    const target: HTMLElement = event.target as HTMLElement;\n    if (target && this.wrapperRef && !this.wrapperRef.contains(target)) {\n      this.props.onLeave && this.props.onLeave();\n      this.setState({ open: false });\n    }\n\n    return true;\n  }\n\n  remove(contact: IContact) {\n    const contacts: IContact[] = [];\n    this.state.contacts.map((currentContact: IContact) => {\n      if (contact.id !== currentContact.id) {\n        contacts.push(currentContact);\n      }\n    });\n    this.setState({\n      contacts,\n    });\n  }\n\n  blur(event: React.FocusEvent<HTMLInputElement>) {\n    this.props.onBlur && this.props.onBlur();\n  }\n\n  focus(event: React.FocusEvent<HTMLInputElement>) {\n    this.props.onFocus && this.props.onFocus();\n    this.setState({ open: true });\n  }\n\n  search(value: string): void {\n    // const { onSearch } = this.props;\n    // this.setState({ value });\n    // onSearch && onSearch(value);\n  }\n\n  change(node: React.ChangeEvent<Element>): void {\n    const { onValueChange } = this.props;\n    const target: any = node.currentTarget;\n    this.setState({ value: target.value });\n    onValueChange && onValueChange(target.value);\n  }\n\n  select(contact: IContact) {\n    const { onSelect } = this.props;\n\n    this.setState({\n      contacts: [...this.state.contacts, contact],\n    });\n\n    onSelect && onSelect(contact);\n    this.setState({ open: false });\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this\n      .handleClickOutside as EventListener);\n  }\n\n  componentWillUnmount() {\n    this.wrapperRef = undefined;\n    document.addEventListener('click', this\n      .handleClickOutside as EventListener);\n    const { onSearch } = this.props;\n    this.setState({ value: '' });\n    onSearch && onSearch('');\n  }\n\n  renderSearch() {\n    const { rows, form, intl } = this.props;\n    const { open, value } = this.state;\n\n    if (!open) {\n      return;\n    }\n\n    const dataSource: any = [];\n    if (rows && rows.length > 0) {\n      rows.map((contact: IContact, i: number) => {\n        dataSource.concat(\n          contact.emails &&\n            contact.emails.rows.map((email: IEmail, j: number) => {\n              const fullname = `${contact.firstname} ${contact.lastname}`;\n\n              if (\n                !new RegExp(value).test(email.email) &&\n                !new RegExp(value).test(fullname)\n              ) {\n                return;\n              }\n\n              dataSource.push(\n                <div\n                  key={`${i}-${j}`}\n                  onClick={this.select.bind(this, contact)}\n                  className=\"search-result-item small\"\n                >\n                  <div className=\"contact-title\">{fullname}</div>\n                  <div className=\"contact-email\">\n                    {' <'}\n                    {email.email}\n                    {'>'}\n                  </div>\n                </div>,\n              );\n            }),\n        );\n      });\n    }\n\n    return <div className=\"search-result\">{dataSource}</div>;\n  }\n\n  render() {\n    const {\n      form,\n      rules,\n      intl,\n      type,\n      inline,\n      onSubmit,\n      refetchPartner,\n      companyId,\n    } = this.props;\n    const { contacts, newContact } = this.state;\n\n    const contactsIds: string[] = contacts.map(\n      (contact: IContact) => `${contact.id}`,\n    );\n\n    return (\n      <div\n        ref={this.handleSetWrapperRef}\n        className={`search-autocomplete ${type} search-autocomplete-${\n          inline ? 'inline' : 'floating'\n        }`}\n      >\n        <div className=\"select-contact-title\">\n          <FormattedMessage id=\"purchase.pay.notification\" />\n        </div>\n        {contacts && contacts.length > 0 && (\n          <div className=\"contacts-tag\">\n            {contacts.map((contact: IContact, i: number) => {\n              return (\n                <Tag\n                  onClick={this.handleRemove.bind(null, contact)}\n                  key={`${i}`}\n                >\n                  {contact.firstname}\n                  <Icon value={IconValue.Cross} />\n                </Tag>\n              );\n            })}\n          </div>\n        )}\n        <div className=\"autocomplete-contacts\">\n          <Search\n            rules={rules}\n            form={form}\n            type={IType.Search}\n            onSearch={this.handleSearch}\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n            className={'input-autocomplete'}\n            prefix={\n              !inline && <SearchIcon color=\"#0053FA\" className=\"search-icon\" />\n            }\n            autoComplete={'off'}\n            placeholder={\n              !inline\n                ? intl.formatMessage({\n                    id: 'invoice.contact.contact_placeholder',\n                  })\n                : undefined\n            }\n            label={\n              inline\n                ? intl.formatMessage({\n                    id: 'invoice.contact.contact_placeholder',\n                  })\n                : null\n            }\n          >\n            <div onClick={this.handleShowContactSearch} className=\"add-contact\">\n              <Icon value={IconValue.Plus} />\n              <FormattedMessage id=\"invoice.contact.contact_add\" />\n            </div>\n            {this.renderSearch()}\n          </Search>\n        </div>\n        {newContact ? (\n          <>\n            <div className=\"select-contact-title\">\n              <FormattedMessage id=\"partners.contact.form_add_title\" />\n            </div>\n            <ContactSearch\n              companyId={companyId}\n              refetchPartner={refetchPartner}\n              onSubmit={this.handleAddContact}\n              onCancel={this.handleCancelContact}\n            />\n          </>\n        ) : (\n          <div className=\"contact-actions\">\n            <Button\n              type={BtnType.Primary}\n              onClick={onSubmit && onSubmit.bind(null, contactsIds)}\n            >\n              <FormattedMessage id=\"partners.contact.submit\" />\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(SearchAutocompleteContact);\n","import './Styles.module.less';\n\nimport Autocomplete from './Autocomplete';\nimport AutocompleteContact from './AutocompleteContact';\nimport AutocompleteSiren from './AutocompleteSiren';\n\nexport {\n  Autocomplete,\n  AutocompleteContact,\n  AutocompleteSiren\n};\n"],"sourceRoot":""}