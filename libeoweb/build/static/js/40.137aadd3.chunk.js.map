{"version":3,"sources":["screens/Company/MandateAdd.tsx","components/Card/Card.tsx","components/Card/CondensedCard.tsx","components/Card/CardRow.tsx","components/Card/index.js","context/Bank/context.ts","context/Bank/fragments.ts","context/Bank/queries.ts","context/Bank/provider.tsx","context/Bank/index.tsx"],"names":["MandateAdd","props","_this","Object","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_8__","this","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_9__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_10__","call","state","mandateId","undefined","modalVisible","submit","_ref","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default","a","mark","_callee","bankId","createMandate","e","mandate","wrap","_context","prev","next","preventDefault","sent","setState","id","stop","_x","_x2","_x3","apply","arguments","later","history","push","close","_ref2","_callee2","sign","refetch","code","match","result","_context2","params","concat","_x4","_x5","_x6","_this2","_this$props","user","intl","form","_this$state","me","data","currentCompany","react__WEBPACK_IMPORTED_MODULE_22__","components_Layout__WEBPACK_IMPORTED_MODULE_18__","antd_es_row__WEBPACK_IMPORTED_MODULE_5__","type","components_Typo__WEBPACK_IMPORTED_MODULE_19__","icon","IconValue","Wallet","title","description","top","location","href","indexOf","context_Bank__WEBPACK_IMPORTED_MODULE_20__","_ref3","bank","generateCode","current","bankAccount","components_Dialog__WEBPACK_IMPORTED_MODULE_16__","onComplete","bind","onCancel","visible","components_Card__WEBPACK_IMPORTED_MODULE_15__","primary","center","react_intl__WEBPACK_IMPORTED_MODULE_24__","className","css","primaryColor","uppercase","antd_es_form__WEBPACK_IMPORTED_MODULE_1__","onSubmit","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_3__","span","components_Form__WEBPACK_IMPORTED_MODULE_17__","disabled","defaultValue","name","brandName","label","rules","message","formatMessage","required","addresses","rows","address1","city","zipcode","country","iban","bic","react_router_dom__WEBPACK_IMPORTED_MODULE_25__","to","style","justifyContent","components_Button__WEBPACK_IMPORTED_MODULE_14__","onClick","marginRight","BtnType","Default","Primary","React","compose","injectIntl","User","create","onRemove","stopPropagation","avatar","children","onClose","editable","onEdit","removable","shadow","titleAlign","rest","_workspace_libeoweb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_12__","antd_es_card__WEBPACK_IMPORTED_MODULE_1__","assign","components_Assets__WEBPACK_IMPORTED_MODULE_10__","value","Cross","Pencil","Trash","antd_es_avatar__WEBPACK_IMPORTED_MODULE_3__","components_Assets__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","components_Skeleton__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react_intl__WEBPACK_IMPORTED_MODULE_3__","_Card__WEBPACK_IMPORTED_MODULE_4__","CondensedCard","loading","color","Bloc","Boolean","renderRow","react__WEBPACK_IMPORTED_MODULE_9__","antd_es_row__WEBPACK_IMPORTED_MODULE_1__","map","row","i","key","_Card__WEBPACK_IMPORTED_MODULE_1__","d","__webpack_exports__","_CondensedCard__WEBPACK_IMPORTED_MODULE_2__","_CardRow__WEBPACK_IMPORTED_MODULE_3__","bankAccounts","changeDefaultBankAccount","_changeDefaultBankAccount","asyncToGenerator","regenerator_default","abrupt","_createMandate","createOrUpdate","_createOrUpdate","_callee3","_context3","_generateCode","_callee4","_context4","removeBankAccount","_removeBankAccount","_callee5","_context5","removeMandate","_removeMandate","_callee6","_context6","_sign","_callee7","_context7","Provider","Consumer","Bank_fragments","fragment","gql","_templateObject","Iban","query","Companies","standalone","_templateObject2","queries_templateObject","fragments","createOrUpdateBankAccount","queries_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","generateCodeMandate","_templateObject7","_templateObject8","signedMandate","_templateObject9","_templateObject10","PartnersContextProvider","variables","errorOrSuccess","alert","parseError","errors","t0","bankAccountId","inputBankAccount","update","cache","cached","readQuery","writeQuery","objectSpread","toConsumableArray","total","input","_x7","_x8","_x9","dataBankAccounts","dataBankAccount","react","withApollo","Alert","graphql","skip","list","options","provider"],"mappings":"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","file":"static/js/40.137aadd3.chunk.js","sourcesContent":["import { Col, Form, Row } from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { IconValue } from 'components/Assets/Icon';\nimport { BtnType, Button } from 'components/Button';\nimport { Card } from 'components/Card';\nimport { DialogCode } from 'components/Dialog';\nimport { Text } from 'components/Form';\nimport ControlIban from 'components/Form/ControlIban';\nimport { Content, FloatingActionFooter } from 'components/Layout';\nimport { A, Div, H3, Heading } from 'components/Typo';\nimport * as BankCtx from 'context/Bank';\nimport { IBankAccount, IInputBankAccount, IMandate } from 'context/Bank/types';\nimport { ICompany } from 'context/Company/types';\nimport * as Iban from 'context/Iban';\nimport * as User from 'context/User';\nimport { IUser } from 'context/User/types';\nimport * as React from 'react';\nimport { compose } from 'react-apollo';\nimport { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';\nimport { RouteComponentProps } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport history from 'store/history';\nimport './Bank.module.less';\n\ninterface IProps\n  extends RouteComponentProps,\n    FormComponentProps,\n    InjectedIntlProps,\n    User.InjectedProps {}\n\ninterface IState {\n  modalVisible: boolean;\n  mandateId?: string;\n}\n\nclass MandateAdd extends React.PureComponent<IProps, IState> {\n  static getDerivedStateFromProps(props: IProps, state: IState) {\n    const match: any = props.match;\n    if (!state.mandateId) {\n      const mandateId = match && match.params && match.params.mandateId;\n      if (mandateId) {\n        return {\n          mandateId,\n        };\n      }\n    }\n    return null;\n  }\n  state = {\n    mandateId: undefined,\n    modalVisible: false,\n  };\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  submit = async (\n    bankId: string,\n    createMandate?: (bankAccountId?: string) => Promise<IMandate | null>,\n    e?: React.FormEvent,\n  ) => {\n    e && e.preventDefault();\n\n    if (bankId && createMandate) {\n      const mandate = await createMandate(bankId);\n\n      if (mandate) {\n        this.setState({\n          mandateId: mandate.id,\n          modalVisible: true,\n        });\n      }\n    }\n  };\n\n  later = () => {\n    history.push('/company/bank');\n  };\n\n  close = async (\n    sign?: (mandateId: string, code: string) => Promise<IMandate | null>,\n    refetch?: () => Promise<IBankAccount | null>,\n    code?: string,\n  ) => {\n    const { mandateId } = this.state;\n    const match: any = this.props.match;\n    const bankId = match && match.params && match.params.bankId;\n\n    this.setState({\n      modalVisible: false,\n    });\n    if (code && mandateId && sign) {\n      const result = await sign(mandateId, code);\n      if (refetch) {\n        await refetch();\n      }\n      if (result) {\n        history.push(`/company/bank/mandate/view/${bankId}`);\n      }\n    } else {\n      if (refetch) {\n        await refetch();\n      }\n    }\n  };\n\n  render() {\n    const { user, intl, form } = this.props;\n    const { modalVisible, mandateId } = this.state;\n    const match: any = this.props.match;\n    const bankId = match && match.params && match.params.bankId;\n    const id = match && match.params && match.params.id;\n    const me: IUser = user && user.data && user.data.me;\n    const currentCompany: ICompany = me && me.currentCompany;\n\n    return (\n      <Content>\n        <Row type=\"flex\">\n          <Heading\n            icon={IconValue.Wallet}\n            title={'bank.mandate_add.title'}\n            description={\n              top.location.href.indexOf('?bank') > -1\n                ? 'bank.mandate_add.save_and_description'\n                : 'bank.mandate_add.description'\n            }\n          />\n        </Row>\n        {currentCompany && (\n          <BankCtx.Provider id={bankId}>\n            <BankCtx.Consumer>\n              {({ bank }) => {\n                const createMandate = bank && bank.createMandate;\n                const generateCode = bank && bank.generateCode;\n                const sign = bank && bank.sign;\n\n                const current =\n                  bank && bank.bankAccount && bank.bankAccount.bankAccount;\n                const refetch =\n                  bank && bank.bankAccount && bank.bankAccount.refetch;\n\n                return (\n                  <>\n                    {modalVisible && (\n                      <DialogCode\n                        onComplete={this.close.bind(\n                          null,\n                          sign,\n                          bank && bank.bankAccount && bank.bankAccount.refetch,\n                        )}\n                        id={mandateId}\n                        generateCode={generateCode}\n                        onCancel={this.close.bind(\n                          null,\n                          undefined,\n                          bank && bank.bankAccount && bank.bankAccount.refetch,\n                        )}\n                        visible={modalVisible}\n                      />\n                    )}\n                    <Card primary center={false}>\n                      <H3>\n                        <FormattedMessage id=\"bank.mandate_add_form.title\" />\n                      </H3>\n                      <Div className=\"heading-description\">\n                        <FormattedMessage id=\"bank.mandate_add_form.description\" />\n                      </Div>\n                      <H3\n                        css={{\n                          primaryColor: true,\n                          uppercase: true,\n                        }}\n                      >\n                        <FormattedMessage id=\"bank.mandate.subtitle\" />\n                      </H3>\n                      <Form\n                        className=\"form-mandate\"\n                        onSubmit={this.submit.bind(null, bankId, createMandate)}\n                      >\n                        <Row gutter={28}>\n                          <Col span={8}>\n                            <Text\n                              disabled\n                              id=\"name\"\n                              defaultValue={\n                                currentCompany.name || currentCompany.brandName\n                              }\n                              label={\n                                <FormattedMessage id=\"bank.mandate.name\" />\n                              }\n                              rules={[\n                                {\n                                  message: intl.formatMessage({\n                                    id: 'bank.mandate.name_error',\n                                  }),\n                                  required: true,\n                                },\n                              ]}\n                              form={form}\n                            />\n                          </Col>\n                        </Row>\n                        <Row gutter={28}>\n                          <Col span={8}>\n                            <Text\n                              disabled\n                              id=\"address1\"\n                              defaultValue={\n                                currentCompany.addresses &&\n                                currentCompany.addresses.rows &&\n                                currentCompany.addresses.rows[0] &&\n                                currentCompany.addresses.rows[0].address1\n                              }\n                              label={\n                                <FormattedMessage id=\"bank.mandate.address1\" />\n                              }\n                              rules={[\n                                {\n                                  message: intl.formatMessage({\n                                    id: 'bank.mandate.address1_error',\n                                  }),\n                                  required: true,\n                                },\n                              ]}\n                              form={form}\n                            />\n                          </Col>\n                          <Col span={8}>\n                            <Text\n                              disabled\n                              id=\"city\"\n                              defaultValue={\n                                currentCompany.addresses &&\n                                currentCompany.addresses.rows &&\n                                currentCompany.addresses.rows[0] &&\n                                currentCompany.addresses.rows[0].city\n                              }\n                              label={\n                                <FormattedMessage id=\"bank.mandate.city\" />\n                              }\n                              rules={[\n                                {\n                                  message: intl.formatMessage({\n                                    id: 'bank.mandate.city_error',\n                                  }),\n                                  required: true,\n                                },\n                              ]}\n                              form={form}\n                            />\n                          </Col>\n                        </Row>\n                        <Row gutter={28}>\n                          <Col span={8}>\n                            <Text\n                              disabled\n                              id=\"zipcode\"\n                              defaultValue={\n                                currentCompany.addresses &&\n                                currentCompany.addresses.rows &&\n                                currentCompany.addresses.rows[0] &&\n                                currentCompany.addresses.rows[0].zipcode\n                              }\n                              label={\n                                <FormattedMessage id=\"bank.mandate.zipcode\" />\n                              }\n                              rules={[\n                                {\n                                  message: intl.formatMessage({\n                                    id: 'bank.mandate.zipcode_error',\n                                  }),\n                                  required: true,\n                                },\n                              ]}\n                              form={form}\n                            />\n                          </Col>\n                          <Col span={8}>\n                            <Text\n                              disabled\n                              id=\"country\"\n                              defaultValue={\n                                currentCompany.addresses &&\n                                currentCompany.addresses.rows &&\n                                currentCompany.addresses.rows[0] &&\n                                currentCompany.addresses.rows[0].country\n                              }\n                              label={\n                                <FormattedMessage id=\"bank.mandate.country\" />\n                              }\n                              rules={[\n                                {\n                                  message: intl.formatMessage({\n                                    id: 'bank.mandate.country_error',\n                                  }),\n                                  required: true,\n                                },\n                              ]}\n                              form={form}\n                            />\n                          </Col>\n                        </Row>\n                        <Row gutter={28}>\n                          <Col span={16}>\n                            <Text\n                              id=\"iban\"\n                              defaultValue={\n                                current && current.iban && current.iban.iban\n                              }\n                              disabled\n                              label={\n                                <FormattedMessage id=\"bank.mandate.iban\" />\n                              }\n                              form={form}\n                            />\n                          </Col>\n                        </Row>\n                        <Row gutter={28}>\n                          <Col span={8}>\n                            <Text\n                              id=\"bic\"\n                              defaultValue={\n                                current && current.iban && current.iban.bic\n                              }\n                              disabled\n                              label={<FormattedMessage id=\"bank.mandate.bic\" />}\n                              form={form}\n                            />\n                          </Col>\n                          <Col span={8}>\n                            <Text\n                              id=\"bankName\"\n                              disabled\n                              defaultValue={\n                                current && current.iban && current.iban.bank\n                              }\n                              label={\n                                <FormattedMessage id=\"bank.mandate.bank_name\" />\n                              }\n                              form={form}\n                            />\n                          </Col>\n                        </Row>\n                      </Form>\n                      <Link to=\"/company/informations\">\n                        <A>\n                          <FormattedMessage id=\"bank.mandate.link_edit\" />\n                        </A>\n                      </Link>\n                    </Card>\n                    <FloatingActionFooter\n                      style={{\n                        justifyContent: 'flex-end',\n                      }}\n                      visible={true}\n                    >\n                      <Button\n                        onClick={this.later}\n                        style={{\n                          marginRight: 50,\n                        }}\n                        type={BtnType.Default}\n                      >\n                        <FormattedMessage id=\"bank.mandate.later\" />\n                      </Button>\n                      <Button\n                        onClick={this.submit.bind(null, bankId, createMandate)}\n                        style={{ marginRight: 50 }}\n                        type={BtnType.Primary}\n                      >\n                        <FormattedMessage id=\"bank.mandate.submit\" />\n                      </Button>\n                    </FloatingActionFooter>\n                  </>\n                );\n              }}\n            </BankCtx.Consumer>\n          </BankCtx.Provider>\n        )}\n      </Content>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  User.hoc(),\n  Form.create({}),\n)(MandateAdd);\n","import { Avatar, Card } from 'antd';\nimport { CardProps } from 'antd/lib/card';\nimport { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport * as React from 'react';\n\n/**\n * @props\n */\ninterface IProps extends CardProps {\n  center?: boolean;\n  avatar?: React.ReactNode | string;\n  onClose?: () => void;\n  editable?: boolean;\n  onEdit?: () => void;\n  removable?: boolean;\n  onRemove?: () => void;\n  shadow?: boolean;\n  primary?: boolean;\n  title?: React.ReactNode;\n  titleAlign?: 'left' | 'right';\n}\n\n/**\n * @state\n *\n * error\n */\ninterface IState {}\n\n/**\n * @class Submit\n *\n */\nclass Default extends React.PureComponent<IProps, IState> {\n  onRemove = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { onRemove } = this.props;\n    onRemove && onRemove();\n  };\n\n  render() {\n    const {\n      avatar,\n      center,\n      children,\n      className,\n      onClose,\n      editable,\n      onEdit,\n      removable,\n      shadow,\n      title,\n      primary,\n      titleAlign,\n      ...rest\n    } = this.props;\n\n    return (\n      <Card\n        className={`card-item${center ? ' center ' : ''}${\n          shadow ? ' shadow ' : ''\n        }${primary ? ' primary ' : ''}${className ? ` ${className}` : ''}`}\n        {...rest}\n      >\n        {onClose && (\n          <div onClick={onClose} className=\"card-close\">\n            <Icon value={IconValue.Cross} />\n          </div>\n        )}\n        {editable && (\n          <div onClick={onEdit} className=\"card-edit\">\n            <Icon value={IconValue.Pencil} />\n          </div>\n        )}\n        {removable && (\n          <div onClick={this.onRemove} className=\"card-remove\">\n            <Icon value={IconValue.Trash} />\n          </div>\n        )}\n        {avatar && <Avatar className=\"card-avatar\">{avatar}</Avatar>}\n        {title && (\n          <div className={`card-title${titleAlign ? ` ${titleAlign}` : ''}`}>\n            {title}\n          </div>\n        )}\n        <div className=\"card-children\">{children}</div>\n      </Card>\n    );\n  }\n}\n\nexport default Default;\n","import { Icon } from 'components/Assets';\nimport { IconValue } from 'components/Assets/Icon';\nimport Skeleton from 'components/Skeleton';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Card from './Card';\n\n/**\n * @props\n */\ninterface IProps {\n  center?: boolean;\n  className?: string;\n  title?: React.ReactNode;\n  description?: string;\n  color?: string;\n  icon?: IconValue;\n  loading?: boolean;\n  style?: React.CSSProperties;\n}\n\nconst CondensedCard: React.FunctionComponent<IProps> = ({\n  className,\n  center,\n  title,\n  description,\n  icon,\n  style,\n  loading,\n  color,\n}) => {\n  return (\n    <Card\n      style={style}\n      center={center}\n      className={`condensed-card${className ? ` ${className}` : ''}`}\n      shadow\n    >\n      <div className=\"condensed-card-left\">\n        <Skeleton.Bloc\n          loading={Boolean(loading)}\n          className=\"condensed-card-title\"\n        >\n          {title}\n        </Skeleton.Bloc>\n        {description && (\n          <Skeleton.Bloc\n            loading={Boolean(loading)}\n            className=\"condensed-card-description\"\n          >\n            <FormattedMessage id={description} />\n          </Skeleton.Bloc>\n        )}\n      </div>\n      <div className={`condensed-card-right${color ? ` ${color}` : ''}`}>\n        <Icon value={icon} />\n      </div>\n    </Card>\n  );\n};\n\nexport default CondensedCard;\n","import { Col, Row } from 'antd';\nimport * as React from 'react';\n\n/**\n * @props\n */\ninterface IProps {\n  className?: string;\n  title?: React.ReactNode | string;\n  rows?: React.ReactNode[];\n  renderRow?: (row: React.ReactNode) => React.ReactNode;\n}\n\n/**\n * @state\n *\n * error\n */\ninterface IState {}\n\n/**\n * @class Submit\n *\n */\nclass Default extends React.PureComponent<IProps, IState> {\n  render() {\n    const { className, title, rows, renderRow } = this.props;\n\n    return (\n      <Row className={`${className ? 'className ' : ''}`}>\n        <div className=\"card-row-title\">{title}</div>\n        {rows &&\n          rows.map((row, i) => (\n            <Col className=\"card-row-item\" key={`${i}`}>\n              {renderRow ? renderRow(row) : row}\n            </Col>\n          ))}\n      </Row>\n    );\n  }\n}\n\nexport default Default;\n","import './Styles.module.less';\n\nimport Card from './Card';\nimport CondensedCard from './CondensedCard';\nimport CardRow from './CardRow';\n\nexport {\n  Card,\n  CardRow,\n  CondensedCard\n};\n","import * as React from 'react';\nimport { IBankAccount, IInputBankAccount, IMandate } from './types';\n\ninterface IBanksInterface {\n  bankAccount?: any;\n  bankAccounts?: any;\n  changeDefaultBankAccount: (id: string) => Promise<IBankAccount[] | undefined>;\n  createMandate: (bankAccountId?: string) => Promise<IMandate | null>;\n  createOrUpdate: (\n    inputBankAccount: IInputBankAccount,\n    id?: string,\n  ) => Promise<IBankAccount | null>;\n  generateCode: (mandateId: string) => Promise<boolean | null>;\n  removeBankAccount: (id: string) => Promise<IBankAccount | null>;\n  removeMandate: (id: string) => Promise<IMandate | null>;\n  sign: (mandateId: string, code: string) => Promise<IMandate | null>;\n}\n\nexport interface IBanksContextInterface {\n  bank?: IBanksInterface;\n}\n\nconst { Provider, Consumer } = React.createContext<IBanksContextInterface>({\n  bank: {\n    bankAccount: undefined,\n    bankAccounts: undefined,\n    changeDefaultBankAccount: async () => undefined,\n    createMandate: async () => null,\n    createOrUpdate: async () => null,\n    generateCode: async () => null,\n    removeBankAccount: async () => null,\n    removeMandate: async () => null,\n    sign: async () => null,\n  },\n});\n\nexport { Provider, Consumer };\n","import gql from 'graphql-tag';\n\nimport Companies from '../Company/fragments';\nimport Iban from '../Iban/fragments';\nimport User from '../User/fragments';\n\nconst bankAccount = `\n  id\n  label\n  default\n  enabled\n`;\n\nconst mandate = `\n  id\n  treezorMandateId\n  filePath\n  status\n  rum\n  signatoryIp\n  signaturedAt\n  createdAt\n  updatedAt\n`;\n\nconst bankAccountFragment = gql`\n${Iban.fragment}\n${User.fragment}\n\nfragment bankAccount on BankAccount {\n  ${bankAccount}\n}`;\n\nconst bankAccountQuery = `\n  ...bankAccount\n  company {\n    ${Companies.standalone}\n  }\n  iban {\n    ${Iban.query}\n  }\n  mandates {\n    ${mandate}\n    signatory {\n      ${User.query}\n    }\n  }\n`;\n\nconst mandateFragment = gql`\n${User.fragment}\n\nfragment mandate on Mandate {\n  ${mandate}\n}`;\n\nconst mandateQuery = `\n  ...mandate\n  signatory {\n    ${User.query}\n  }\n`;\n\nexport default {\n  bank: {\n    fragment: bankAccountFragment,\n    query: bankAccountQuery,\n  },\n  mandate: {\n    fragment: mandateFragment,\n    query: mandateQuery,\n  },\n};\n","import gql from 'graphql-tag';\n\nimport fragments from './fragments';\n\nexport const bankAccounts: any = gql`\n  ${fragments.bank.fragment}\n\n  query bankAccounts {\n    bankAccounts {\n      total\n      rows {\n        ${fragments.bank.query}\n      }\n    }\n  }\n`;\n\nexport const createOrUpdateBankAccount: any = gql`\n  ${fragments.bank.fragment}\n\n  mutation createOrUpdateBankAccount($input: BankAccountInput!, $id: ID) {\n    createOrUpdateBankAccount(input: $input, id: $id) {\n      ${fragments.bank.query}\n    }\n  }\n`;\n\nexport const bankAccount: any = gql`\n  ${fragments.bank.fragment}\n\n  query bankAccount($id: ID!) {\n    bankAccount(id: $id) {\n      ${fragments.bank.query}\n    }\n  }\n`;\n\nexport const changeDefaultBankAccount: any = gql`\n  ${fragments.bank.fragment}\n\n  mutation changeDefaultBankAccount($id: ID!) {\n    changeDefaultBankAccount(id: $id) {\n      ${fragments.bank.query}\n    }\n  }\n`;\n\nexport const removeBankAccount: any = gql`\n  ${fragments.bank.fragment}\n\n  mutation removeBankAccount($id: ID!) {\n    removeBankAccount(id: $id) {\n      ${fragments.bank.query}\n    }\n  }\n`;\n\nexport const createMandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  mutation createMandate($bankAccountId: ID!) {\n    createMandate(bankAccountId: $bankAccountId) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n\nexport const mandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  query mandate($id: ID!) {\n    mandate(id: $id) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n\nexport const generateCodeMandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  mutation generateCodeMandate($id: ID!) {\n    generateCodeMandate(id: $id) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n\nexport const signedMandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  mutation signedMandate($id: ID!, $code: String!) {\n    signedMandate(id: $id, code: $code) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n\nexport const removeMandate: any = gql`\n  ${fragments.mandate.fragment}\n\n  mutation removeMandate($id: ID!) {\n    removeMandate(id: $id) {\n      ${fragments.mandate.query}\n    }\n  }\n`;\n","import { ApolloClient } from 'apollo-client';\nimport * as Alert from 'context/Alert';\nimport * as User from 'context/User';\nimport * as React from 'react';\nimport { compose, graphql, withApollo } from 'react-apollo';\nimport { errorOrSuccess, parseError } from 'utils';\nimport { IBanksContextInterface, Provider } from './context';\nimport {\n  bankAccount,\n  bankAccounts,\n  changeDefaultBankAccount,\n  createMandate,\n  createOrUpdateBankAccount,\n  generateCodeMandate,\n  removeBankAccount,\n  removeMandate,\n  signedMandate,\n} from './queries';\nimport { IBankAccount, IInputBankAccount, IMandate } from './types';\n\ninterface IState extends IBanksContextInterface {}\n\ninterface IProps extends Alert.InjectedProps, User.InjectedProps {\n  list: boolean;\n  createOrUpdateBankAccount: any;\n  createMandate: any;\n  changeDefaultBankAccount: any;\n  generateCodeMandate: any;\n  signedMandate: any;\n  removeBankAccount: any;\n  removeMandate: any;\n  dataBankAccounts: any;\n  dataBankAccount: any;\n  children: React.ReactNode;\n  client: ApolloClient<any>;\n}\n\nclass PartnersContextProvider extends React.PureComponent<IProps, IState> {\n  state = {\n    bank: {\n      bankAccount: undefined,\n      bankAccounts: undefined,\n      changeDefaultBankAccount: async (\n        id: string,\n      ): Promise<IBankAccount[] | undefined> => {\n        try {\n          const result = await this.props.changeDefaultBankAccount({\n            variables: { id },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.form.success_change_default',\n          ]);\n          return result.data && result.data.changeDefaultBankAccount;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n      },\n      createMandate: async (bankAccountId?: string) => {\n        try {\n          const result = await this.props.createMandate({\n            variables: { bankAccountId },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.mandate.success_create',\n          ]);\n          return result.data && result.data.createMandate;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n      },\n      createOrUpdate: async (\n        inputBankAccount: IInputBankAccount,\n        id?: string,\n      ) => {\n        try {\n          const result = await this.props.createOrUpdateBankAccount({\n            update: (cache: any, { data }: any) => {\n              if (!id) {\n                const cached = cache.readQuery({\n                  query: bankAccounts,\n                });\n\n                cache.writeQuery({\n                  data: {\n                    bankAccounts: {\n                      ...(cached ? cached.bankAccounts : {}),\n                      rows: [data.createOrUpdateBankAccount].concat(\n                        ...(cached && cached.bankAccounts\n                          ? cached.bankAccounts.rows\n                          : []),\n                      ),\n                      total:\n                        cached && cached.bankAccounts\n                          ? cached.bankAccounts.total + 1\n                          : 1,\n                    },\n                  },\n                  query: bankAccounts,\n                });\n              }\n            },\n            variables: { input: inputBankAccount, id },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            id ? 'bank.form.success_updated' : 'bank.form.success_add',\n          ]);\n          return result.data && result.data.createOrUpdateBankAccount;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n      },\n      generateCode: async (mandateId: string): Promise<boolean | null> => {\n        try {\n          const result = await this.props.generateCodeMandate({\n            variables: { id: mandateId },\n          });\n          return !result.errors;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n      removeBankAccount: async (id: string): Promise<IBankAccount | null> => {\n        try {\n          const result = await this.props.removeBankAccount({\n            variables: { id },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.row.success_remove',\n          ]);\n          return result.data && result.data.removeBankAccount;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n      removeMandate: async (id: string): Promise<IMandate | null> => {\n        try {\n          const result = await this.props.removeMandate({\n            variables: { id },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.mandate.success_remove',\n          ]);\n          return result.data && result.data.removeMandate;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n      sign: async (\n        mandateId: string,\n        code: string,\n      ): Promise<IMandate | null> => {\n        try {\n          const result = await this.props.signedMandate({\n            variables: { id: mandateId, code },\n          });\n          errorOrSuccess(this.props.alert, parseError(result.errors), [\n            'bank.mandate.success_sign',\n          ]);\n          return result.data && result.data.signedMandate;\n        } catch (e) {\n          errorOrSuccess(this.props.alert, parseError(e));\n        }\n        return null;\n      },\n    },\n  };\n\n  render() {\n    const { dataBankAccounts, dataBankAccount } = this.props;\n\n    return (\n      <Provider\n        value={{\n          bank: {\n            ...this.state.bank,\n            bankAccount: dataBankAccount,\n            bankAccounts: dataBankAccounts,\n          },\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nconst bankAccountsHandler = {\n  props: (props: any) => {\n    return {\n      dataBankAccounts: props.data,\n    };\n  },\n  skip: (props: any) => !props.list,\n};\n\nconst bankAccountHandler = {\n  options: (props: any) => {\n    return {\n      variables: {\n        id: props.id,\n      },\n    };\n  },\n  props: (props: any) => {\n    return {\n      dataBankAccount: props.data,\n    };\n  },\n  skip: (props: any) => !props.id,\n};\n\nexport default compose(\n  withApollo,\n  Alert.hoc(),\n  graphql(createOrUpdateBankAccount, { name: 'createOrUpdateBankAccount' }),\n  graphql(createMandate, { name: 'createMandate' }),\n  graphql(changeDefaultBankAccount, { name: 'changeDefaultBankAccount' }),\n  graphql(generateCodeMandate, { name: 'generateCodeMandate' }),\n  graphql(signedMandate, { name: 'signedMandate' }),\n  graphql(removeBankAccount, { name: 'removeBankAccount' }),\n  graphql(removeMandate, { name: 'removeMandate' }),\n  graphql(bankAccounts, bankAccountsHandler),\n  graphql(bankAccount, bankAccountHandler),\n)(PartnersContextProvider);\n","import { Consumer, IBanksContextInterface } from './context';\nimport hoc from './hoc';\nimport Provider from './provider';\n\nexport interface InjectedProps extends IBanksContextInterface {}\n\nexport { Provider, Consumer, hoc };\n"],"sourceRoot":""}